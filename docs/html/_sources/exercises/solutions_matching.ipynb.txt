{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Matching Exercise \n",
    "\n",
    "In this exercise, we'll be evaluating how getting a college degree impacts earnings in the US using matching.\n",
    "\n",
    "## Matching Packages: Python v. R\n",
    "\n",
    "Just as the best tools for machine learning tend to be in Python since they're developed by CS people (who prefer Python), most of the best tools for causal inference are implemented in R since innovation in causal inference tends to be lead by social scientists using R. As a result, the most well developed matching package is called [MatchIt](https://kosukeimai.github.io/MatchIt/index.html), and is only available in R (though you can always call it from Python using `rpy2`). \n",
    "\n",
    "In the last couple years, though, a group of computer scientists and statisticians here at Duke have made some great advancements in matching (especially the computational side of things), and they recently released a set of matching packages in both R and Python that we'll be using today. They have some great algorithms we'll use today, but be aware these packages aren't as mature, and aren't general purpose packages yet. So if you ever get deep into matching, be aware you will probably still want to make at least partial use of the R package [MatchIt](https://kosukeimai.github.io/MatchIt/index.html), as well as some other R packages for new innovative techniques (like [Matching Frontier estimation](https://projects.iq.harvard.edu/frontier/home)), or [Adaptive Hyper-Box Matching](https://almost-matching-exactly.github.io/AHB-R-package/). \n",
    "\n",
    "## Installing dame-flame. \n",
    "\n",
    "For this lesson, begin by installing `dame-flame` with `pip install dame-flame` (it's not on conda yet). \n",
    "\n",
    "[DAME](https://almost-matching-exactly.github.io/DAME-FLAME-Python-Package) is an algorithm that we can use for a version of coarse exact matching. The package only accepts a list of categorical variables, and then attempts to match pairs that match exactly on those variables. That means that if you want to match on, say, age, you have to break it up into categories (say, under 18, 18-29, 30-39, etc. etc.). \n",
    "\n",
    "(NOTE: As of 2024, their documentation site is weird: click the dropdowns next to headings to see the content, otherwise the documentation looks deserted)\n",
    "\n",
    "Of course, one cannot always find exact matches on all variables, so what DAME does is:\n",
    "\n",
    "1. Find all observations that match on *all* matching variables. \n",
    "2. Figure out which matching variable is least useful in predicting the outcome of interest $Y$ and drops that, then tries to match the remaining observations on the narrowed set of matching variables. \n",
    "3. This repeats until you run out of variables, all observations are matched, or you hit a stopping run (namely: quality of matches falls below a threshold). \n",
    "\n",
    "In addition, the lab has also created FLAME, which does the same thing, but employs some tricks to make it *massively* more computationally efficient, meaning it can be used on datasets with millions of observations (which most matching algorithms cannot). It's a little less accurate, but an amazing contribution never the less. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Data Setup\n",
    "\n",
    "To save you some time and let you focus on matching, I've *pre-cleaned* about one month worth of of data from the US Current Population Survey data we used for our [gender discrimination analysis](exercises/exercises_regression_incomeineq.ipynb). You can download the data [from here](https://github.com/nickeubank/MIDS_Data/blob/master/Current_Population_Survey/cps_for_matching.dta?raw=true\"), or read it directly with:\n",
    "\n",
    "```python \n",
    "cps = pd.read_stata(\n",
    "    \"https://github.com/nickeubank/MIDS_Data/blob/master\"\n",
    "    \"/Current_Population_Survey/cps_for_matching.dta?raw=true\"\n",
    ")\n",
    "```\n",
    "\n",
    "Load the data and quickly familiarize yourself with its contents. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Load critical packages\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import dame_flame"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Load our Current Population Survey data\n",
    "# a regular  survey of US citizens\n",
    "\n",
    "cps = pd.read_stata(\n",
    "    \"https://github.com/nickeubank/MIDS_Data/blob/master\"\n",
    "    \"/Current_Population_Survey/cps_for_matching.dta?raw=true\"\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>index</th>\n",
       "      <th>annual_earnings</th>\n",
       "      <th>female</th>\n",
       "      <th>simplified_race</th>\n",
       "      <th>has_college</th>\n",
       "      <th>age</th>\n",
       "      <th>county</th>\n",
       "      <th>class94</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>151404</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1</td>\n",
       "      <td>30</td>\n",
       "      <td>0-WV</td>\n",
       "      <td>Private, For Profit</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>123453</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>21</td>\n",
       "      <td>251-TX</td>\n",
       "      <td>Private, For Profit</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>187982</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>40</td>\n",
       "      <td>5-MA</td>\n",
       "      <td>Self-Employed, Unincorporated</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>122356</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>27</td>\n",
       "      <td>0-TN</td>\n",
       "      <td>Private, Nonprofit</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>210750</td>\n",
       "      <td>42900.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>52</td>\n",
       "      <td>0-IA</td>\n",
       "      <td>Private, For Profit</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    index  annual_earnings  female  simplified_race  has_college  age  county  \\\n",
       "0  151404              NaN       1              3.0            1   30    0-WV   \n",
       "1  123453              NaN       0              0.0            0   21  251-TX   \n",
       "2  187982              NaN       0              0.0            0   40    5-MA   \n",
       "3  122356              NaN       1              0.0            1   27    0-TN   \n",
       "4  210750          42900.0       1              0.0            0   52    0-IA   \n",
       "\n",
       "                         class94  \n",
       "0            Private, For Profit  \n",
       "1            Private, For Profit  \n",
       "2  Self-Employed, Unincorporated  \n",
       "3             Private, Nonprofit  \n",
       "4            Private, For Profit  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Take a look at the data\n",
    "cps.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "class94\n",
       "Private, For Profit              7809\n",
       "Government - Local                740\n",
       "Private, Nonprofit                706\n",
       "Government - State                615\n",
       "Self-Employed, Unincorporated     552\n",
       "Self-Employed, Incorporated       387\n",
       "Government - Federal              337\n",
       "Without Pay                         4\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Take a look at the data\n",
    "cps.class94.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "annual_earnings\n",
       "True     5635\n",
       "False    5515\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cps.annual_earnings.isnull().value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Getting To Know Your Data\n",
    "\n",
    "Before you start matching, it is important to examine your data to ensure that matching is feasible (you have some overlap the the features of people in the treated and untreated groups), and also that there is a reason *to* match: either you're unsure about some of the functional forms at play, or your have some imbalance between the two groups. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Exercise 1\n",
    "\n",
    "Show the raw difference of `annual_earnings` between those with and without a college degree (`has_college`). Is the difference statistically significant?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>     <td>annual_earnings</td> <th>  R-squared:         </th> <td>   0.063</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.063</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>   370.2</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Mon, 08 Apr 2024</td> <th>  Prob (F-statistic):</th> <td>6.56e-80</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>20:00:28</td>     <th>  Log-Likelihood:    </th> <td> -63018.</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td>  5515</td>      <th>  AIC:               </th> <td>1.260e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td>  5513</td>      <th>  BIC:               </th> <td>1.261e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>     1</td>      <th>                     </th>     <td> </td>    \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>    \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "       <td></td>          <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Intercept</th>   <td> 3.887e+04</td> <td>  336.007</td> <td>  115.669</td> <td> 0.000</td> <td> 3.82e+04</td> <td> 3.95e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>has_college</th> <td> 1.416e+04</td> <td>  735.820</td> <td>   19.242</td> <td> 0.000</td> <td> 1.27e+04</td> <td> 1.56e+04</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>2214.375</td> <th>  Durbin-Watson:     </th> <td>   1.974</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th>  <td> 0.000</td>  <th>  Jarque-Bera (JB):  </th> <td>10578.287</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>           <td> 1.910</td>  <th>  Prob(JB):          </th> <td>    0.00</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>       <td> 8.608</td>  <th>  Cond. No.          </th> <td>    2.59</td> \n",
       "</tr>\n",
       "</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified."
      ],
      "text/latex": [
       "\\begin{center}\n",
       "\\begin{tabular}{lclc}\n",
       "\\toprule\n",
       "\\textbf{Dep. Variable:}    & annual\\_earnings & \\textbf{  R-squared:         } &     0.063   \\\\\n",
       "\\textbf{Model:}            &       OLS        & \\textbf{  Adj. R-squared:    } &     0.063   \\\\\n",
       "\\textbf{Method:}           &  Least Squares   & \\textbf{  F-statistic:       } &     370.2   \\\\\n",
       "\\textbf{Date:}             & Mon, 08 Apr 2024 & \\textbf{  Prob (F-statistic):} &  6.56e-80   \\\\\n",
       "\\textbf{Time:}             &     20:00:28     & \\textbf{  Log-Likelihood:    } &   -63018.   \\\\\n",
       "\\textbf{No. Observations:} &        5515      & \\textbf{  AIC:               } & 1.260e+05   \\\\\n",
       "\\textbf{Df Residuals:}     &        5513      & \\textbf{  BIC:               } & 1.261e+05   \\\\\n",
       "\\textbf{Df Model:}         &           1      & \\textbf{                     } &             \\\\\n",
       "\\textbf{Covariance Type:}  &    nonrobust     & \\textbf{                     } &             \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "\\begin{tabular}{lcccccc}\n",
       "                      & \\textbf{coef} & \\textbf{std err} & \\textbf{t} & \\textbf{P$> |$t$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n",
       "\\midrule\n",
       "\\textbf{Intercept}    &    3.887e+04  &      336.007     &   115.669  &         0.000        &     3.82e+04    &     3.95e+04     \\\\\n",
       "\\textbf{has\\_college} &    1.416e+04  &      735.820     &    19.242  &         0.000        &     1.27e+04    &     1.56e+04     \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "\\begin{tabular}{lclc}\n",
       "\\textbf{Omnibus:}       & 2214.375 & \\textbf{  Durbin-Watson:     } &     1.974  \\\\\n",
       "\\textbf{Prob(Omnibus):} &   0.000  & \\textbf{  Jarque-Bera (JB):  } & 10578.287  \\\\\n",
       "\\textbf{Skew:}          &   1.910  & \\textbf{  Prob(JB):          } &      0.00  \\\\\n",
       "\\textbf{Kurtosis:}      &   8.608  & \\textbf{  Cond. No.          } &      2.59  \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "%\\caption{OLS Regression Results}\n",
       "\\end{center}\n",
       "\n",
       "Notes: \\newline\n",
       " [1] Standard Errors assume that the covariance matrix of the errors is correctly specified."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            OLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:        annual_earnings   R-squared:                       0.063\n",
       "Model:                            OLS   Adj. R-squared:                  0.063\n",
       "Method:                 Least Squares   F-statistic:                     370.2\n",
       "Date:                Mon, 08 Apr 2024   Prob (F-statistic):           6.56e-80\n",
       "Time:                        20:00:28   Log-Likelihood:                -63018.\n",
       "No. Observations:                5515   AIC:                         1.260e+05\n",
       "Df Residuals:                    5513   BIC:                         1.261e+05\n",
       "Df Model:                           1                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "===============================================================================\n",
       "                  coef    std err          t      P>|t|      [0.025      0.975]\n",
       "-------------------------------------------------------------------------------\n",
       "Intercept    3.887e+04    336.007    115.669      0.000    3.82e+04    3.95e+04\n",
       "has_college  1.416e+04    735.820     19.242      0.000    1.27e+04    1.56e+04\n",
       "==============================================================================\n",
       "Omnibus:                     2214.375   Durbin-Watson:                   1.974\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):            10578.287\n",
       "Skew:                           1.910   Prob(JB):                         0.00\n",
       "Kurtosis:                       8.608   Cond. No.                         2.59\n",
       "==============================================================================\n",
       "\n",
       "Notes:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "\"\"\""
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import statsmodels.formula.api as smf\n",
    "\n",
    "model = smf.ols(\"annual_earnings ~ has_college\", cps).fit()\n",
    "model.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "About 14,158.50 a year, and it's very significant\n"
     ]
    }
   ],
   "source": [
    "print(f\"About {model.params['has_college']:,.2f} a year, and it's very significant\")"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Exercise 2\n",
    "\n",
    "Next we can check for balance. Check the share of people in different racial groups who have college degrees. Are those differences statistically significant? (Remember how to check for difference in distributions of categorical variables).\n",
    "\n",
    "Race is coded as White Non-Hispanic (0), Black Non-Hispanic (1), Hispanic (2), Other (3).\n",
    "\n",
    "Does the data seem balanced?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "# This question wording is, admittedly, a little iffy.\n",
    "# Basically, while we want frequency tables to do our chi2\n",
    "# test, I know _I_ can't look at a frequency table and have\n",
    "# any sense of whether the groups are actually balanced.\n",
    "# So I like to see shares with my eyes, then use freq table to test."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>       <td>has_college</td>   <th>  R-squared:         </th> <td>   0.032</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.032</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>   122.1</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Mon, 08 Apr 2024</td> <th>  Prob (F-statistic):</th> <td>7.74e-78</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>20:00:28</td>     <th>  Log-Likelihood:    </th> <td> -7675.0</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td> 11150</td>      <th>  AIC:               </th> <td>1.536e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td> 11146</td>      <th>  BIC:               </th> <td>1.539e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>     3</td>      <th>                     </th>     <td> </td>    \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>    \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "              <td></td>                 <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Intercept</th>                 <td>    0.4382</td> <td>    0.006</td> <td>   79.420</td> <td> 0.000</td> <td>    0.427</td> <td>    0.449</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(simplified_race)[T.1.0]</th> <td>   -0.1206</td> <td>    0.016</td> <td>   -7.507</td> <td> 0.000</td> <td>   -0.152</td> <td>   -0.089</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(simplified_race)[T.2.0]</th> <td>   -0.2398</td> <td>    0.014</td> <td>  -17.682</td> <td> 0.000</td> <td>   -0.266</td> <td>   -0.213</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(simplified_race)[T.3.0]</th> <td>    0.0367</td> <td>    0.016</td> <td>    2.261</td> <td> 0.024</td> <td>    0.005</td> <td>    0.069</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>46681.807</td> <th>  Durbin-Watson:     </th> <td>   1.965</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th>  <td> 0.000</td>   <th>  Jarque-Bera (JB):  </th> <td>1670.333</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>           <td> 0.377</td>   <th>  Prob(JB):          </th> <td>    0.00</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>       <td> 1.261</td>   <th>  Cond. No.          </th> <td>    3.97</td>\n",
       "</tr>\n",
       "</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified."
      ],
      "text/latex": [
       "\\begin{center}\n",
       "\\begin{tabular}{lclc}\n",
       "\\toprule\n",
       "\\textbf{Dep. Variable:}             &   has\\_college   & \\textbf{  R-squared:         } &     0.032   \\\\\n",
       "\\textbf{Model:}                     &       OLS        & \\textbf{  Adj. R-squared:    } &     0.032   \\\\\n",
       "\\textbf{Method:}                    &  Least Squares   & \\textbf{  F-statistic:       } &     122.1   \\\\\n",
       "\\textbf{Date:}                      & Mon, 08 Apr 2024 & \\textbf{  Prob (F-statistic):} &  7.74e-78   \\\\\n",
       "\\textbf{Time:}                      &     20:00:28     & \\textbf{  Log-Likelihood:    } &   -7675.0   \\\\\n",
       "\\textbf{No. Observations:}          &       11150      & \\textbf{  AIC:               } & 1.536e+04   \\\\\n",
       "\\textbf{Df Residuals:}              &       11146      & \\textbf{  BIC:               } & 1.539e+04   \\\\\n",
       "\\textbf{Df Model:}                  &           3      & \\textbf{                     } &             \\\\\n",
       "\\textbf{Covariance Type:}           &    nonrobust     & \\textbf{                     } &             \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "\\begin{tabular}{lcccccc}\n",
       "                                    & \\textbf{coef} & \\textbf{std err} & \\textbf{t} & \\textbf{P$> |$t$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n",
       "\\midrule\n",
       "\\textbf{Intercept}                  &       0.4382  &        0.006     &    79.420  &         0.000        &        0.427    &        0.449     \\\\\n",
       "\\textbf{C(simplified\\_race)[T.1.0]} &      -0.1206  &        0.016     &    -7.507  &         0.000        &       -0.152    &       -0.089     \\\\\n",
       "\\textbf{C(simplified\\_race)[T.2.0]} &      -0.2398  &        0.014     &   -17.682  &         0.000        &       -0.266    &       -0.213     \\\\\n",
       "\\textbf{C(simplified\\_race)[T.3.0]} &       0.0367  &        0.016     &     2.261  &         0.024        &        0.005    &        0.069     \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "\\begin{tabular}{lclc}\n",
       "\\textbf{Omnibus:}       & 46681.807 & \\textbf{  Durbin-Watson:     } &    1.965  \\\\\n",
       "\\textbf{Prob(Omnibus):} &    0.000  & \\textbf{  Jarque-Bera (JB):  } & 1670.333  \\\\\n",
       "\\textbf{Skew:}          &    0.377  & \\textbf{  Prob(JB):          } &     0.00  \\\\\n",
       "\\textbf{Kurtosis:}      &    1.261  & \\textbf{  Cond. No.          } &     3.97  \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "%\\caption{OLS Regression Results}\n",
       "\\end{center}\n",
       "\n",
       "Notes: \\newline\n",
       " [1] Standard Errors assume that the covariance matrix of the errors is correctly specified."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            OLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:            has_college   R-squared:                       0.032\n",
       "Model:                            OLS   Adj. R-squared:                  0.032\n",
       "Method:                 Least Squares   F-statistic:                     122.1\n",
       "Date:                Mon, 08 Apr 2024   Prob (F-statistic):           7.74e-78\n",
       "Time:                        20:00:28   Log-Likelihood:                -7675.0\n",
       "No. Observations:               11150   AIC:                         1.536e+04\n",
       "Df Residuals:                   11146   BIC:                         1.539e+04\n",
       "Df Model:                           3                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "=============================================================================================\n",
       "                                coef    std err          t      P>|t|      [0.025      0.975]\n",
       "---------------------------------------------------------------------------------------------\n",
       "Intercept                     0.4382      0.006     79.420      0.000       0.427       0.449\n",
       "C(simplified_race)[T.1.0]    -0.1206      0.016     -7.507      0.000      -0.152      -0.089\n",
       "C(simplified_race)[T.2.0]    -0.2398      0.014    -17.682      0.000      -0.266      -0.213\n",
       "C(simplified_race)[T.3.0]     0.0367      0.016      2.261      0.024       0.005       0.069\n",
       "==============================================================================\n",
       "Omnibus:                    46681.807   Durbin-Watson:                   1.965\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):             1670.333\n",
       "Skew:                           0.377   Prob(JB):                         0.00\n",
       "Kurtosis:                       1.261   Cond. No.                         3.97\n",
       "==============================================================================\n",
       "\n",
       "Notes:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "\"\"\""
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# One easy way to get differences in shares (and bi-variate significance)\n",
    "smf.ols(\"has_college ~ C(simplified_race)\", cps).fit().summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "simplified_race\n",
       "0.0    0.438205\n",
       "1.0    0.317647\n",
       "2.0    0.198413\n",
       "3.0    0.474900\n",
       "Name: has_college, dtype: float64"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Or just groupby:\n",
    "\n",
    "cps.groupby(\"simplified_race\")[\"has_college\"].mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>has_college</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>simplified_race</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0.0</th>\n",
       "      <td>4282</td>\n",
       "      <td>3340</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1.0</th>\n",
       "      <td>696</td>\n",
       "      <td>324</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2.0</th>\n",
       "      <td>1212</td>\n",
       "      <td>300</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3.0</th>\n",
       "      <td>523</td>\n",
       "      <td>473</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "has_college         0     1\n",
       "simplified_race            \n",
       "0.0              4282  3340\n",
       "1.0               696   324\n",
       "2.0              1212   300\n",
       "3.0               523   473"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Then for statistical significance:\n",
    "ctab = pd.crosstab(cps[\"simplified_race\"], cps[\"has_college\"])\n",
    "ctab"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1.2993875943569016e-76"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import scipy.stats\n",
    "\n",
    "chi2, p, dof, expected = scipy.stats.chi2_contingency(ctab.values)\n",
    "p"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Insanely significant. :)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Exercise 3\n",
    "\n",
    "One of the other advantages of matching is that even when you have balanced data, you don't have to go through the process of testing out different functional forms to see what fits the data base. \n",
    "\n",
    "In our last exercise, we looked at the relationship between gender and earnings \"controlling for age\", where we just put in age as a linear control. Plot a non-linear regression of `annual_earnings` on age (`PolyFit(order=3)` is fine.)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAABK4AAAN6CAYAAACnkgHIAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjguMywgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/H5lhTAAAACXBIWXMAAB2HAAAdhwGP5fFlAADugklEQVR4nOzdd3iUZd728XMy6b0nJKEmQCDSm4ioFBEVAQusFdG1YN9n17KWXd3VdXV1Hx5d9VVxFbDQlGIBQYqAgvQOCZBQQxLSe52Z94+YMUMagWQm5fs5jhyZue77mvs3mSEwJ1cxWCwWiwAAAAAAAIAWxsnRBQAAAAAAAAC1IbgCAAAAAABAi0RwBQAAAAAAgBaJ4AoAAAAAAAAtEsEVAAAAAAAAWiSCKwAAAAAAALRIBFcAAAAAAABokQiuAAAAAAAA0CIRXAEAAAAAAKBFIrgCAAAAAABAi0RwBQAAAAAAgBaJ4AoAAAAAAAAtEsEVAAAAAAAAWiSCKwAAAAAAALRIBFcAAAAAAABokQiuAAAAAAAA0CIRXAEAAAAAAKBFIrgCAAAAAABAi+Ts6AIAAED7NXv2bP3zn/+03l+4cKH69evnwIpwrtGjRys5OVmRkZFau3Zto/svXrxYzz777EXVsHTpUvXq1euiHqOl6NmzpyRd8M8TAID2hhFXAADAYb766iub+/PmzXNQJQAAAGiJGHEFAAAcYu/evTp8+LAkKSQkROnp6VqxYoWeffZZ+fn5Obg6NIdhw4Zp2rRpje4XFRXVDNUAAIDWgOAKAAA4RNVoKycnJz388MP629/+ppKSEi1ZskTTp093bHFoFhERERo7dqyjy3CohIQER5cAAECrwlRBAABgd6WlpVq+fLkkqVevXpo4caLc3NwkSfPnz3dkaQAAAGhBCK4AAIDdrVy5Unl5eZKkMWPGyNvbW1dddZUk6dixY/rll18cWB0AAABaCqYKAgAAu6u+KPs111wjSZo0aZJWrlwpqXKR9ksvvfS8HmvVqlX66quvtG/fPuXl5cnf31+DBg3SXXfdpcGDB+uvf/2rFixYIKn+aVq7d+/WV199pa1bt+rs2bOyWCwKDQ3V0KFDNXXqVPXt2/dCn66NpKQkLV26VFu3btXp06eVk5MjFxcX+fn5qVevXho9erQmTZokV1fXGn2r79C3YMEC9e/fX8uXL9fSpUt18OBB5eTkyN/fXwMGDNAtt9yiK6+8ssF61q1bp0WLFmnPnj3Kzc1VYGCghg4dqnvvvVe9e/dukufcnDZv3qyVK1dq586dOnv2rPLz8+Xh4aGgoCD1799fN9xwgy6//PJa+/75z3/WkiVL5Orqqn379mn58uV6//33dezYMXl5eal79+56+umn1adPH+vuipdffrn++9//KjU1VXPnztX69et15swZGQwGdezYUaNHj9a0adMUEBBQ6zXr21Wwqa5RJS0tzdr/1KlTcnJyUufOnXXNNdfo7rvvVmFhofVn8+ijj+qxxx6r8RiJiYmaP3++fvnlF50+fVrl5eXy9/dXTEyMrrjiCk2ZMkU+Pj4Nvk4AAFwogisAAGBXp0+f1pYtWyRVThOMiYmRJF1xxRUKDAxUVlaW1qxZo4yMDAUHB9f5OKWlpfrjH/+o1atX27Snp6fr+++/18qVK3X//fc3WE9ZWZn++te/asmSJTWOnThxQidOnNCiRYt0yy236MUXX6w1UDofJpNJr776qr744guZzWabY+Xl5SoqKlJKSorWrl2ruXPn6qOPPlJYWFidj1daWqoZM2Zo3bp1Nu3p6elatWqVVq1apZtuukn/+Mc/5ORUc5B9WVmZ/vznP+u7776zaU9LS9M333yjFStW6C9/+csFPVd7yMrK0hNPPKGtW7fWOJafn6/8/HwdP35cS5cu1bXXXqs333xTzs51/9N30aJFeuGFF6z3y8rKtGvXLkVGRtY498cff9STTz6p/Px8m/b4+HjFx8friy++0EcffaQ+ffpc8PO72Gts2rRJjzzyiIqKimzaDx06pEOHDmnRokV67bXX6q3h888/16uvvqqKigqb9vT0dKWnp2vz5s16//339fbbb5930AwAQGMRXAEAALtavHixLBaLJOnGG2+0tru4uGjChAmaO3euysvL9eWXX2rGjBl1Ps4jjzyijRs3SpJ8fX01depU9erVSwUFBfrhhx/0008/6cMPP5Svr2+dj2EymfTggw9q06ZNkqSgoCBNnjxZsbGxslgsio+P15IlS5Sdna0vv/xSWVlZeu+992QwGBr9vF999VV99tlnkiR/f3/ddNNN6tmzpzw8PJSdna1t27bp+++/V0VFhQ4fPqy///3vevfdd+t8vL/97W9KTExUcHCwbrnlFvXo0UOFhYVatWqV9eeyePFi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DAzU0KFDJUmJiYlat25dned+8cUXF7UzXnOovl6Vl5dXved+9NFHNveb4+fZ0kyYMMF6+9NPP63zvJycnDpDqaKiIv35z3/W+++/r48++qjewC8gIMB6u6HXAwCAC0FwBQAAmlX1RdnPd7RVleqjrpYuXarS0lIZDAY98MADkirX13niiSdq3eVvzZo1ev/99+t87KCgIE2dOlWSZDKZ9MgjjygxMbHGeQUFBXr44YetI3dGjRqlHj16nPdzCAwMtH6gLyws1LJly2o9b+XKlXrppZds2qp2YWxqjz76qDV8e+6553Tw4MEa52zcuFHvvvtus1z/YlSFlpK0devWWl8zk8mk//u//9OiRYts2pvr59mSXHfdddaf0eLFi61T+aorLCzU//zP/9gs5l5dZGSkdeTWkSNH9M4779R6XlJSklasWCGpcn2tPn36NMEzAADAFmtcAQCAZpOWlmadJufs7KzrrruuUf2vv/56vfrqqyopKVFOTo5WrFihyZMna8qUKfr+++/1888/Kz4+Xtddd52mTJmiXr16qaioSBs2bNCqVaskVY5yMplMcnKq+f91Tz75pHbs2KGDBw8qOTlZkyZN0g033KAhQ4bIaDQqKSlJCxcuVFZWliQpODi4RrjUEGdnZ91444367LPPJFUGRT///LMGDx4sLy8vnTlzRqtXr651t8GL2fmwPoMHD9Y999yjjz/+WFlZWZo6dapuuukmDR48WBUVFfrpp5+0fPlyWSwWBQUF1RoMXoiq59pY/v7+Gjx4sKTKUXs9e/ZUQkKCioqKNHXqVE2dOlU9e/aUxWLRsWPH9O233yo5ObnG4+Tn58vf3/9in0aL5ubmpldeeUX33XefysvL9dJLL2nVqlUaN26c/Pz8lJSUpEWLFik1NdX6Z0OSdfpolaeeekp33XWXzGaz3nnnHa1fv17jxo1TRESECgsLFR8fryVLllgXeL/vvvsUGBho9+cLAGj7CK4AAECzWbJkifWD8YgRIxQUFNSo/t7e3ho3bpy+/vprSdK8efM0efJkGQwG/ec//9Gjjz6qTZs2KScnR7NmzbLp6+TkpCeffFJffPGFTp8+Xeu6Uu7u7po7d66efvpprV27VuXl5Vq8eLEWL15c49yYmBi98847Cg8Pb9RzkKQ//elPio+P1/bt22UymfT1119bn1N1w4YN08SJE/X8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gw/qmWee0QMPPKBFixbJz89PkrRs2TJ7lAkALcK8VQkqLTNZ7/t5u+qmq2IcWBEAAAAAOIZdgqtNmzbJYDDosssu0xNPPCF3999GDfz444/W2zfddJP1dlBQkG6++WZZLJYa0wgBoK06lZavVVtO2LTddnVPebq7OKgiAAAAAHAcuwRXJ05UfggbPXq0TXtxcbF27twpg8Ggzp07KyoqyuZ41a6CZ8+etUeZAOBwc5cflNlssd7vEOyla4Z3cVxBAAAAAOBAdgmucnNzJUnBwcE27du2bVN5ebkkafjw4TX6ubq6SpJKS0ubuUIAcLyDxzL1y/5Um7a7r+stZ6NdflUDAAAAQItjl09DVVMDCwsLbdp//vln6+3agqvTp09Lknx9fZuxOgBwPIvFok++OWDT1rNTgC7r28FBFQEAAACA49kluOrSpYskaffu3dY2i8WitWvXSpKcnZ112WWX2fSxWCz65ptvZDAY1K1bN3uUCQAO88v+VMWfyLZpmz6htwwGg4MqAgAAAADHs0twNWLECFksFi1ZskTfffedioqK9H//9386deqUddF2b29v6/nl5eV64YUXlJSUJEkaOXKkPcoEAIcwmS367PtDNm1De4frkujgOnoAAAAAQPvgbI+L3HbbbZo7d65KSkr05JNP1jg+ffp06+05c+bovffeU15enqTKaYJTpkyxR5kA4BAbd53WydR8632DQZp2fS8HVgQAAAAALYNdRlyFh4frjTfekKurqywWi/VLku69916b9a3y8vKUm5sri8UiDw8P/d///Z8CAgLsUSYA2F2FyawvVibYtF05MEqdw1nbDwAAAADsMuJKksaOHaulS5dq/vz5SkpKUmBgoK6//npdccUVNud17dpVbm5uGjt2rJ544gl16tTJXiUCgN2t2XZSKZm/bVxhdDLo9nGxDqwIAAAAAFoOuwVXUmUo9eyzz9Z7ztixYzVu3Di5urraqSoAcIyycpPmr7IdbTV2aCd1CPZyUEUAAAAA0LLYNbg6H+7u7o4uAQDs4vvNx5WRW2K97+LspFuv7unAigAAAACgZbHLGlcAAFslpRVatOaITdu1l3VRsL+HgyoCAAAAgJbHLiOuGpoeWBdnZ2e5urrKz89PHTp0UJ8+fRQby9ovAFq/b35KUk5BqfW+u6tRU0b3cGBFAAAAANDy2CW4WrJkiQwG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3759ys7ONoKiJk2aaPbs2brvvvt05swZrV69Wvfff3+Z1vTZZ5/pvffeU17etdEkly9f1uXLl7Vr1y4tXrxYc+fOVcOGDYtt//bbb2vBggU2186dO6dz585pzZo1euaZZ/Too4/aff+dO3dq0qRJSk1NNa5lZ2drz5492rNnj1auXKmPPvpIISEhxbZPS0vT3/72N+3evdvm+okTJ/TZZ59p+fLlmjVrlsPRap999plmzJghs9lsXEtISND69eu1fv16jR07Vi+++KLd9vBsV1IyFXPYdk06pgkCAAAAAJzJKSssW9e2uvXWW22uN2vWTD4+PsrNzVV8fLzNvVtuuUV9+vSRxWLRTz/9VKb1rF69WtOnT1deXp6qVq2qf/zjH1q0aJE++OADDRs2TJIUHx+vCRMmKD09vUj7+fPnG6FVmzZtNHPmTH311Vd6/fXXFRERoby8PL377rv68ccfi33/s2fPGqFVcHCwnnnmGX355Zf66KOP1LdvX0n5i9k/++yzdr+GKVOmGKHVwIEDNW/ePP3nP//RE088oUqVKik5OVlPPvmkTp8+XWz7devWafr06TKbzWrUqJHeeecdffXVV3r33XfVokULSdLChQv1+eefX983FR7nl9/Oylxg08/GdUPVqG6o6woCAAAAAHgdpwRX1ilvlStXtrkeGBhoTGc7evRokXZdu3aVpCKh1s3IycnRtGnTJOVPXfzf//1fPfbYY+rSpYv69++v6dOn65lnnjFqWrp0qU37xMREzZo1S1L+iLElS5Zo0KBBuu222zRq1CgtX75cDRo0kCRNmzZN2dnZRWqYMWOGUlNT5e/vr/nz5+vxxx9Xhw4d1KdPH3344Yd66KGHJEkbN27UL7/8UqT9pk2btH79eknSmDFjNGvWLPXq1UsdO3bU5MmT9dlnnykgIEApKSmaOXNmkfbZ2dl68803JUn169fX119/rfvuu0+33Xabhg4dqqVLlxqj4WbPnq0rV66U/huNCm9jod0EGW0FAAAAAHA2pwRXVatWlZS/u2Bh9evn/zB87NixIveqV89fBLosg5PNmzfr0qX86U8TJ05UvXr1ijzz2GOPKSwsTJKKjJpatmyZMQrrueeeK7IOVvXq1fX8889Lyh9ZtW7dOpv7Fy9eNF5z6NChat++fZH3nzJlimrVqiVJRaYjSvkjoSQpLCxMTz31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shm6Tb/wXNOmTdOhQ4cc/jN+/Hjj+fXr1+vQoUM2Uz7oH56tc+fOxvHKlSvtPrdy5UrjM7777ruN6/QPz3X77bcbI6iWLVtmd0v76OhonTlzRpLUr18/4zp9w3scPXpUaWlpkqTIyMjrakP/8FzWv5dK+X/3tCc1NVW//vqrJKldu3YKCAiQRN9AUQRXQAWTlJSkl156yTifMmVKiVM7Cho8eLCx1fmrr76qq1ev2txPTEzUtGnTJOXPFbducQ33du+99xr/s585c2axawLExsZqxowZkqSQkBCNHDnSuEe/gCP0D882ZMgQYxenjz76yBg5U9CBAwc0ffp0SVL16tU1atQo4x79w3MFBATooYcekiSdOHFC06ZNs9l+Xsqfqv7KK69Iyl+vZtiwYcY9+ob3sK6bKV1/cEX/8Fz33HOPEXrPnDlTBw4cKPJMTk6OXnjhBaWmpkqSHnzwQeMefQOFEVwBFczChQuNhZRbt26trl27Ki4uzuE/J0+eNNrXqFHDWOfmwIEDGjFihFauXKnffvtNS5cu1fDhw4354lOnTrXZChvuKyIiwvhcz58/ryFDhmjevHnauXOntm/frnfffVcPPvig0tLSZDKZ9NZbbxnDuCX6BRyjf3i2mjVr6tlnn5WU/9vvBx54QP/+978VHR2tnTt36l//+pdGjx6t1NRU+fr66q233rKZBkT/8GwTJkxQq1atJElffPGFxo4dqzVr1igmJkZLly7V/fffr8OHD0uSnnrqKdWtW9doS9/wHidOnDCOGzVqdF1t6B+eKywszAi009LS9MADD+itt97SL7/8opiYGC1fvlzDhw/XTz/9JEnq27evhgwZYrSnb6Awk6Xwr00AuLVevXqVuMNGYV26dNGiRYtsrr3zzjuaP39+sc/7+Pjo6aeftpk+hIphzpw5mjt3rrHLZGHBwcF66623NGjQoGLv0y+803vvvad58+ZJyp8qWL9+/WKfo394to8//lj//d//rby8vGLvh4SE6I033uDPDy905coVTZo0yeF6M//1X/+lJ554oti1Nukbnu+VV17RV199JUlat26dGjRocN1t6R+ea/ny5Xrttdccrr961113adq0acbI34LoG7AiuAIqkMTERHXr1q3U7YoLriRpy5YtWrx4sWJiYpSUlKSqVauqY8eOGjdunM3cdFQscXFxWrhwoXbs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",
      "text/plain": [
       "<seaborn._core.plot.Plot at 0x293e9cfd0>"
      ]
     },
     "execution_count": 12,
     "metadata": {
      "image/png": {
       "height": 378.25,
       "width": 509.15
      }
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import seaborn.objects as so\n",
    "from matplotlib import style\n",
    "import matplotlib.pyplot as plt\n",
    "import warnings\n",
    "\n",
    "warnings.simplefilter(action=\"ignore\", category=FutureWarning)\n",
    "\n",
    "(\n",
    "    so.Plot(cps, x=\"age\", y=\"annual_earnings\")\n",
    "    .add(so.Lines(), so.PolyFit(order=3))\n",
    "    .label(title=\"Age and Earnings\")\n",
    "    .theme({**style.library[\"seaborn-v0_8-whitegrid\"]})\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Does the relationship look linear?\n",
    "\n",
    "Does this speak to why it's nice to not have to think about functional forms with matching as much?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Not even remotely linear. Thank goodness we don't have to worry about that with matching!\n",
    "# Though it wouldn't be *that* hard to fit a quadratic."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Matching!\n",
    "\n",
    "Because DAME is an implementation of exact matching, we have to discretize all of our continuous variables. Thankfully, in this case we only have `age`, so this shouldn't be too hard!\n",
    "\n",
    "### Exercise 4\n",
    "\n",
    "Create a new variable that discretizes age into a single value for each decade of age. \n",
    "\n",
    "Because CPS only has employment data on people 18 or over, though, include people who are 18 or 19 with the 20 year olds so that group isn't too small, and if you see any other really small groups, please merge those too. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "discretized_age\n",
       "3    2760\n",
       "4    2551\n",
       "5    2397\n",
       "2    1990\n",
       "6    1236\n",
       "7     173\n",
       "8      43\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cps[\"discretized_age\"] = cps.age // 10\n",
    "cps.loc[cps[\"discretized_age\"] == 1, \"discretized_age\"] = 2\n",
    "cps[\"discretized_age\"].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 70 and 80 year olds are tiny groups.\n",
    "cps.loc[cps[\"discretized_age\"] == 8, \"discretized_age\"] = 7"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Exercise 5\n",
    "\n",
    "We also have to covert our string variables into numeric variables for DAME, so convert `county` and `class94` to a numeric vector of intergers. \n",
    "\n",
    "(Note: it's not clear whether `class94` belongs: if it reflects people choosing fields based on passion, it belongs; if people choose certain jobs because of their degrees, its not something we'd actually want in our regression. \n",
    "\n",
    "Hint: if you use `pd.Categorical` to convert you var to a categorical, you can pull the underlying integer codes with `.codes`. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "county\n",
       "41     576\n",
       "200    275\n",
       "12     230\n",
       "33     225\n",
       "51     223\n",
       "      ... \n",
       "122      1\n",
       "263      1\n",
       "285      1\n",
       "154      1\n",
       "213      1\n",
       "Name: count, Length: 326, dtype: int64"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cps[\"county\"] = pd.Categorical(cps[\"county\"]).codes\n",
    "cps[\"county\"].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "class94\n",
       "3    7809\n",
       "1     740\n",
       "4     706\n",
       "2     615\n",
       "6     552\n",
       "5     387\n",
       "0     337\n",
       "7       4\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cps[\"class94\"] = pd.Categorical(cps[\"class94\"]).codes\n",
    "cps[\"class94\"].value_counts()"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Let's Do Matching with DAME\n",
    "\n",
    "### Exercise 6\n",
    "\n",
    "First, drop all the variables you *don't* want in matching (e.g. your original `age` variable), and any observations for which `annual_earnings` is missing. \n",
    "\n",
    "You will probably also have to drop a column named `index`: DAME will try and match on ANY included variables, and so because there was a column called `index` in the data we imported, if we leave it in DAME will try (and obviously fail) to match on index. \n",
    "\n",
    "Also, it's best to reset your index, as `dame_flame` using index labels (e.g., the values in `df.index`) to identify matches. So you want to be sure those are unique."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>annual_earnings</th>\n",
       "      <th>female</th>\n",
       "      <th>simplified_race</th>\n",
       "      <th>has_college</th>\n",
       "      <th>county</th>\n",
       "      <th>class94</th>\n",
       "      <th>discretized_age</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>42900.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>31200.0</td>\n",
       "      <td>0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0</td>\n",
       "      <td>31</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>20020.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>22859.2</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>44</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>73860.8</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>24</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5510</th>\n",
       "      <td>33800.0</td>\n",
       "      <td>1</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0</td>\n",
       "      <td>247</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5511</th>\n",
       "      <td>23920.0</td>\n",
       "      <td>0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0</td>\n",
       "      <td>272</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5512</th>\n",
       "      <td>31200.0</td>\n",
       "      <td>0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0</td>\n",
       "      <td>246</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5513</th>\n",
       "      <td>37440.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>99</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5514</th>\n",
       "      <td>26000.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>23</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5515 rows × 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      annual_earnings  female  simplified_race  has_college  county  class94  \\\n",
       "0             42900.0       1              0.0            0      10        3   \n",
       "1             31200.0       0              2.0            0      31        3   \n",
       "2             20020.0       0              0.0            1       8        3   \n",
       "3             22859.2       0              0.0            0      44        1   \n",
       "4             73860.8       0              0.0            1      24        3   \n",
       "...               ...     ...              ...          ...     ...      ...   \n",
       "5510          33800.0       1              3.0            0     247        3   \n",
       "5511          23920.0       0              3.0            0     272        3   \n",
       "5512          31200.0       0              2.0            0     246        3   \n",
       "5513          37440.0       0              0.0            0      99        3   \n",
       "5514          26000.0       0              1.0            0      23        2   \n",
       "\n",
       "      discretized_age  \n",
       "0                   5  \n",
       "1                   3  \n",
       "2                   6  \n",
       "3                   4  \n",
       "4                   3  \n",
       "...               ...  \n",
       "5510                3  \n",
       "5511                5  \n",
       "5512                2  \n",
       "5513                2  \n",
       "5514                5  \n",
       "\n",
       "[5515 rows x 7 columns]"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "for_matching = cps.drop(columns=[\"age\", \"index\"], axis=\"columns\")\n",
    "for_matching = for_matching[for_matching.annual_earnings.notnull()]\n",
    "for_matching = for_matching.reset_index(drop=True)\n",
    "for_matching"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Exercise 7\n",
    "\n",
    "The syntax of `dame_flame` is similar to the syntax of `sklearn`. If you start with a dataset called `my_data` with a `treat` variable with treatment assignment and an `outcome` variable for my outcome of interest ($Y$), the syntax to do basic matching would be:\n",
    "\n",
    "```python\n",
    "import dame_flame\n",
    "model = dame_flame.matching.DAME(\n",
    "    repeats=False,\n",
    "    verbose=3,\n",
    "    want_pe=True,\n",
    "    stop_unmatched_t=True,\n",
    ")\n",
    "model.fit(\n",
    "    for_matching,\n",
    "    treatment_column_name=\"has_college\",\n",
    "    outcome_column_name=\"annual_earnings\",\n",
    ")\n",
    "result = model.predict(for_matching)\n",
    "```\n",
    "\n",
    "Where the arguments:\n",
    "\n",
    "- `repeats=False` says that I only want each observation to get matched once. We'll talk about what happens if we use `repeats=True` below. \n",
    "- `verbose=3` tells dame to report everything it's doing as it goes. \n",
    "- `want_pe` says \"please include the predictive error in your printout at each step\". This is a measure of match quality. \n",
    "- `stop_unmatched_t` says \"once you've matched all the treatment units, you can stop.\"\n",
    "\n",
    "So run DAME on your data!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Completed iteration 0 of matching\n",
      "\tNumber of matched groups formed in total:  370\n",
      "\tUnmatched treated units:  644 out of a total of  1150 treated units\n",
      "\tUnmatched control units:  3187 out of a total of  4365 control units\n",
      "\tNumber of matches made this iteration:  1684\n",
      "\tNumber of matches made so far:  1684\n",
      "\tCovariates dropped so far:  set()\n",
      "\tPredictive error of covariate set used to match:  1199312680.0957854\n",
      "Completed iteration 1 of matching\n",
      "\tNumber of matched groups formed in total:  494\n",
      "\tUnmatched treated units:  25 out of a total of  1150 treated units\n",
      "\tUnmatched control units:  180 out of a total of  4365 control units\n",
      "\tNumber of matches made this iteration:  3626\n",
      "\tNumber of matches made so far:  5310\n",
      "\tCovariates dropped so far:  frozenset({'county'})\n",
      "\tPredictive error of covariate set used to match:  1199421883.1095908\n",
      "Completed iteration 2 of matching\n",
      "\tNumber of matched groups formed in total:  494\n",
      "\tUnmatched treated units:  25 out of a total of  1150 treated units\n",
      "\tUnmatched control units:  180 out of a total of  4365 control units\n",
      "\tNumber of matches made this iteration:  0\n",
      "\tNumber of matches made so far:  5310\n",
      "\tCovariates dropped so far:  frozenset({'simplified_race'})\n",
      "\tPredictive error of covariate set used to match:  1204727749.8949614\n",
      "Completed iteration 3 of matching\n",
      "\tNumber of matched groups formed in total:  505\n",
      "\tUnmatched treated units:  8 out of a total of  1150 treated units\n",
      "\tUnmatched control units:  129 out of a total of  4365 control units\n",
      "\tNumber of matches made this iteration:  68\n",
      "\tNumber of matches made so far:  5378\n",
      "\tCovariates dropped so far:  frozenset({'county', 'simplified_race'})\n",
      "\tPredictive error of covariate set used to match:  1204742613.479154\n",
      "Completed iteration 4 of matching\n",
      "\tNumber of matched groups formed in total:  505\n",
      "\tUnmatched treated units:  8 out of a total of  1150 treated units\n",
      "\tUnmatched control units:  129 out of a total of  4365 control units\n",
      "\tNumber of matches made this iteration:  0\n",
      "\tNumber of matches made so far:  5378\n",
      "\tCovariates dropped so far:  frozenset({'class94'})\n",
      "\tPredictive error of covariate set used to match:  1205072671.3262901\n",
      "Completed iteration 5 of matching\n",
      "\tNumber of matched groups formed in total:  508\n",
      "\tUnmatched treated units:  5 out of a total of  1150 treated units\n",
      "\tUnmatched control units:  120 out of a total of  4365 control units\n",
      "\tNumber of matches made this iteration:  12\n",
      "\tNumber of matches made so far:  5390\n",
      "\tCovariates dropped so far:  frozenset({'county', 'class94'})\n",
      "\tPredictive error of covariate set used to match:  1205171280.4727237\n",
      "Completed iteration 6 of matching\n",
      "\tNumber of matched groups formed in total:  509\n",
      "\tUnmatched treated units:  4 out of a total of  1150 treated units\n",
      "\tUnmatched control units:  119 out of a total of  4365 control units\n",
      "\tNumber of matches made this iteration:  2\n",
      "\tNumber of matches made so far:  5392\n",
      "\tCovariates dropped so far:  frozenset({'simplified_race', 'class94'})\n",
      "\tPredictive error of covariate set used to match:  1210524158.7436352\n",
      "Completed iteration 7 of matching\n",
      "\tNumber of matched groups formed in total:  511\n",
      "\tUnmatched treated units:  0 out of a total of  1150 treated units\n",
      "\tUnmatched control units:  110 out of a total of  4365 control units\n",
      "\tNumber of matches made this iteration:  13\n",
      "\tNumber of matches made so far:  5405\n",
      "\tCovariates dropped so far:  frozenset({'county', 'simplified_race', 'class94'})\n",
      "\tPredictive error of covariate set used to match:  1210539313.933855\n",
      "5405 units matched. We finished with no more treated units to match\n"
     ]
    }
   ],
   "source": [
    "model = dame_flame.matching.DAME(\n",
    "    repeats=False,\n",
    "    verbose=3,\n",
    "    want_pe=True,\n",
    "    stop_unmatched_t=True,\n",
    ")\n",
    "model.fit(\n",
    "    for_matching,\n",
    "    treatment_column_name=\"has_college\",\n",
    "    outcome_column_name=\"annual_earnings\",\n",
    ")\n",
    "result = model.predict(for_matching)"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Interpreting DAME output\n",
    "\n",
    "The output you get from doing this *should* be reports from about 8 iterations of matching. In each iteration, you'll see a description of the number of matches made in the iteration, the number of treatment units still unmatched, and the number of control units unmatched. \n",
    "\n",
    "In the first iteration, the algorithm tries to match observations that match on *all* the variables in your data. That's why in the first iteration, you see the set of variables being dropped is an empty set (`Covariates dropped so far: set()`) — it *hasn't* dropped any variables:\n",
    "\n",
    "```\n",
    "Completed iteration 0 of matching\n",
    "\tNumber of matched groups formed in total:  370\n",
    "\tUnmatched treated units:  644 out of a total of  1150 treated units\n",
    "\tUnmatched control units:  3187 out of a total of  4365 control units\n",
    "\tNumber of matches made this iteration:  1684\n",
    "\tNumber of matches made so far:  1684\n",
    "\tCovariates dropped so far:  set()\n",
    "\tPredictive error of covariate set used to match:  1199312680.0957854\n",
    "\n",
    "```\n",
    "\n",
    "(Note depending on how you binned ages, you may get slightly different results than this)\n",
    "\n",
    "But as we can see from this output, the algorithm found 1,684 perfect matches—pairs of observations (one treated, one untreated) that had *exactly* the same value of all the variables we included. But we also see we still have 644 *unmatched* treated units, so what do we do?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "The answer is that if we want to match more of our treatment variables, we have to try and match on a subset of our variables.\n",
    "\n",
    "But what variable should we drop? This is the secret sauce of DAME. DAME picks the variables to drop by trying to predict our outcome $Y$ using all our variables (by default using a ridge regression), then it drops the matching variable that is contributing the least to that prediction. Since our goal in matching is to eliminate baseline differences ($E(Y_0|D=1) - E(Y_1|D=0)$), dropping the covariates least related to $Y$ makes sense.\n",
    "\n",
    "As a result, in the second iteration (called iteration 1, since it uses 0-based indexing), we see that the variable it drops first is `county`, and it's subsequently able to make another 3,626 new matches on the remaining variables!\n",
    "\n",
    "```\n",
    "Completed iteration 1 of matching\n",
    "\tNumber of matched groups formed in total:  494\n",
    "\tUnmatched treated units:  25 out of a total of  1150 treated units\n",
    "\tUnmatched control units:  180 out of a total of  4365 control units\n",
    "\tNumber of matches made this iteration:  3626\n",
    "\tNumber of matches made so far:  5310\n",
    "\tCovariates dropped so far:  frozenset({'county'})\n",
    "\tPredictive error of covariate set used to match:  1199421883.1095908\n",
    "\n",
    "```\n",
    "\n",
    "And so DAME continues until its matched all treated observations, and even then it keeps going to evaluate different covariates it might exclude."
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Exercise 8\n",
    "\n",
    "Congratulations! You just on your first one-to-many matching! \n",
    "\n",
    "The next step is to think about which of the matches that DAME generated are good enough for inclusion in our analysis. As you may recall, one of the choices you have to make as a researcher when doing matching is how \"good\" a match has to be in order to be included in your final data set. By default, DAME will keep dropping matching variables until it has been able to match all the treated observations or runs out of variables. It will do this no matter how bad the matches start to become -- if it ends up with the treated observation and a control observation that can only be matched on gender, it will match them just on gender, even though we probably don't think that that's a \"good\" match.\n",
    "\n",
    "The way to control this behavior is to tell DAME when to stop manually using the `early_stop_iterations` argument to tell the matching algorithm when to stop.\n",
    "\n",
    "So when is a good time to stop? There's no objective or \"right\" answer to that question. It fundamentally comes down to a trade-off between bias (which gets higher is you allow more low quality matches into your data) and variance (which will go down as you increase the number of matches you keep).\n",
    "\n",
    "But one way to start the process of picking a cut point is to examine how the quality of matches evolves over iterations. DAME keeps this information in `model.pe_each_iter`. This shows, for each iteration, the \"prediction error\" resulting from dropping the variables excluded in each step. This \"prediction error\" is the difference in the mean-squared error of regressing $Y$ on our matching variables (by default in a ridge regression) with all variables versus with the subset being used for matching in a given iteration. By design, of course, this is always increasing. \n",
    "\n",
    "To see how this evolves, plot your `pe` against iteration numbers. You can also see the `pe` values for each iteration reported in the output from when DAME ran above if you want to make your you're lining up the errors with iterations right. \n",
    "\n",
    "Are there any points where the match quality seems to fall off dramatically? "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1199312680.0957854,\n",
       " 1199421883.1095908,\n",
       " 1204727749.8949614,\n",
       " 1204742613.479154,\n",
       " 1205072671.3262901,\n",
       " 1205171280.4727237,\n",
       " 1210524158.7436352,\n",
       " 1210539313.933855]"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.pe_each_iter"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>pe</th>\n",
       "      <th>i</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.199313e+09</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.199422e+09</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.204728e+09</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.204743e+09</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1.205073e+09</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1.205171e+09</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1.210524e+09</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>1.210539e+09</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             pe  i\n",
       "0  1.199313e+09  0\n",
       "1  1.199422e+09  1\n",
       "2  1.204728e+09  2\n",
       "3  1.204743e+09  3\n",
       "4  1.205073e+09  4\n",
       "5  1.205171e+09  5\n",
       "6  1.210524e+09  6\n",
       "7  1.210539e+09  7"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "for_pe = pd.DataFrame(\n",
    "    {\"pe\": model.pe_each_iter, \"i\": range(0, len(model.pe_each_iter))}\n",
    ")\n",
    "for_pe"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<seaborn._core.plot.Plot at 0x175a02cd0>"
      ]
     },
     "execution_count": 22,
     "metadata": {
      "image/png": {
       "height": 378.25,
       "width": 509.15
      }
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(\n",
    "    so.Plot(for_pe, x=\"i\", y=\"pe\")\n",
    "    .add(so.Lines())\n",
    "    .label(title=\"Predicted Error v. Num Iterations\")\n",
    "    .theme({**style.library[\"seaborn-v0_8-whitegrid\"]})\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "> So the prediction error at 0 and 1 were about the same, but going to 2 (where `simplified_race` is dropped) is pretty costly. Then flat until `class94` and `simplified_race` are dropped together."
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Exercise 9\n",
    "\n",
    "Suppose we want to ensure we have at least 5,000 observations in our matched data—where might you cut off the data to get a sample size of at least that but before a big quality falloff?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "> I'd stop before iteration 2 (after iteration 1) before the jump in PE. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Exercise 10\n",
    "\n",
    "Re-run your matching, stopping at the point you picked above using `early_stop_iterations`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Completed iteration 0 of matching\n",
      "\tNumber of matched groups formed in total:  370\n",
      "\tUnmatched treated units:  644 out of a total of  1150 treated units\n",
      "\tUnmatched control units:  3187 out of a total of  4365 control units\n",
      "\tNumber of matches made this iteration:  1684\n",
      "\tNumber of matches made so far:  1684\n",
      "\tCovariates dropped so far:  set()\n",
      "\tPredictive error of covariate set used to match:  1199312680.0957854\n",
      "Completed iteration 1 of matching\n",
      "\tNumber of matched groups formed in total:  494\n",
      "\tUnmatched treated units:  25 out of a total of  1150 treated units\n",
      "\tUnmatched control units:  180 out of a total of  4365 control units\n",
      "\tNumber of matches made this iteration:  3626\n",
      "\tNumber of matches made so far:  5310\n",
      "\tCovariates dropped so far:  frozenset({'county'})\n",
      "\tPredictive error of covariate set used to match:  1199421883.1095908\n",
      "5310 units matched. We stopped after iteration 1\n"
     ]
    }
   ],
   "source": [
    "model = dame_flame.matching.DAME(\n",
    "    repeats=False, verbose=3, want_pe=True, early_stop_iterations=1\n",
    ")\n",
    "model.fit(\n",
    "    for_matching,\n",
    "    treatment_column_name=\"has_college\",\n",
    "    outcome_column_name=\"annual_earnings\",\n",
    ")\n",
    "result = model.predict(for_matching)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>female</th>\n",
       "      <th>simplified_race</th>\n",
       "      <th>county</th>\n",
       "      <th>class94</th>\n",
       "      <th>discretized_age</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>5.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>*</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>6.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>*</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5509</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>*</td>\n",
       "      <td>3.0</td>\n",
       "      <td>6.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5510</th>\n",
       "      <td>1.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>247.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5511</th>\n",
       "      <td>0.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>*</td>\n",
       "      <td>3.0</td>\n",
       "      <td>5.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5512</th>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>246.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5513</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>99.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5310 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     female simplified_race county class94 discretized_age\n",
       "0       1.0             0.0   10.0     3.0             5.0\n",
       "1       0.0             2.0      *     3.0             3.0\n",
       "2       0.0             0.0    8.0     3.0             6.0\n",
       "3       0.0             0.0      *     1.0             4.0\n",
       "4       0.0             0.0   24.0     3.0             3.0\n",
       "...     ...             ...    ...     ...             ...\n",
       "5509    0.0             0.0      *     3.0             6.0\n",
       "5510    1.0             3.0  247.0     3.0             3.0\n",
       "5511    0.0             3.0      *     3.0             5.0\n",
       "5512    0.0             2.0  246.0     3.0             2.0\n",
       "5513    0.0             0.0   99.0     3.0             2.0\n",
       "\n",
       "[5310 rows x 5 columns]"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "result"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Getting Back a Dataset\n",
    "\n",
    "OK, my one current complaint with DAME is that it doesn't just give you back a nice dataset of your matches for analysis. If we look at our results — `matches` — it's *almost* what we want, except it has dropped our treatment and outcome columns, and put a string `*` in any entry where a value *wasn't* used for matching:\n",
    "\n",
    "```\n",
    "  female simplified_race   county   class94   discretized_age\n",
    "0  1.0     0.0              10.0      3.0          5.0\n",
    "1  0.0     2.0              *         3.0          3.0\n",
    "2  0.0     0.0              8.0        3.0         6.0\n",
    "3  0.0     0.0              *         1.0          4.0\n",
    "4  0.0     0.0              24.0      3.0          3.0\n",
    "```\n",
    "\n",
    "So for now (though I think this will get updated in the package), we'll have to do it ourselves! Just copy-paste this:\n",
    "\n",
    "```python\n",
    "\n",
    "def get_dataframe(model, result_of_fit):\n",
    "\n",
    "    # Get original data\n",
    "    better = model.input_data.loc[result_of_fit.index]\n",
    "    if not better.index.is_unique:\n",
    "        raise ValueError(\"Need index values in input data to be unique\")\n",
    "\n",
    "    # Get match groups for clustering\n",
    "    better[\"match_group\"] = np.nan\n",
    "    better[\"match_group_size\"] = np.nan\n",
    "    for idx, group in enumerate(model.units_per_group):\n",
    "        better.loc[group, \"match_group\"] = idx\n",
    "        better.loc[group, \"match_group_size\"] = len(group)\n",
    "\n",
    "    # Get weights. I THINK this is right?! At least for with repeat=False?\n",
    "    t = model.treatment_column_name\n",
    "    better[\"t_in_group\"] = better.groupby(\"match_group\")[t].transform(np.sum)\n",
    "\n",
    "    # Make weights\n",
    "    better[\"weights\"] = np.nan\n",
    "    better.loc[better[t] == 1, \"weights\"] = 1  # treaments are 1\n",
    "\n",
    "    # Controls start as proportional to num of treatments\n",
    "    # each observation is matched to.\n",
    "    better.loc[better[t] == 0, \"weights\"] = better[\"t_in_group\"] / (\n",
    "        better[\"match_group_size\"] - better[\"t_in_group\"]\n",
    "    )\n",
    "\n",
    "    # Then re-normalize for num unique control observations.\n",
    "    control_weights = better[better[t] == 0][\"weights\"].sum()\n",
    "\n",
    "    num_control_obs = len(better[better[t] == 0].index.drop_duplicates())\n",
    "    renormalization = num_control_obs / control_weights\n",
    "    better.loc[better[t] == 0, \"weights\"] = (\n",
    "        better.loc[better[t] == 0, \"weights\"] * renormalization\n",
    "    )\n",
    "    assert better.weights.notnull().all()\n",
    "\n",
    "    better = better.drop([\"t_in_group\"], axis=\"columns\")\n",
    "\n",
    "    # Make sure right length and values!\n",
    "    assert len(result_of_fit) == len(better)\n",
    "    assert better.loc[better[t] == 0, \"weights\"].sum() == num_control_obs\n",
    "\n",
    "    return better\n",
    "\n",
    "```\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "### Exercise 11\n",
    "\n",
    "Copy-paste that code and run it with your original data, your (fit) model, and what you got back when you ran `result_of_fit`. Then we'll work with the output of that. You should get back a single dataframe of the same length as your original model."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>female</th>\n",
       "      <th>simplified_race</th>\n",
       "      <th>county</th>\n",
       "      <th>class94</th>\n",
       "      <th>discretized_age</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>5.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>*</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>6.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>*</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5509</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>*</td>\n",
       "      <td>3.0</td>\n",
       "      <td>6.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5510</th>\n",
       "      <td>1.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>247.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5511</th>\n",
       "      <td>0.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>*</td>\n",
       "      <td>3.0</td>\n",
       "      <td>5.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5512</th>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>246.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5513</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>99.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5310 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     female simplified_race county class94 discretized_age\n",
       "0       1.0             0.0   10.0     3.0             5.0\n",
       "1       0.0             2.0      *     3.0             3.0\n",
       "2       0.0             0.0    8.0     3.0             6.0\n",
       "3       0.0             0.0      *     1.0             4.0\n",
       "4       0.0             0.0   24.0     3.0             3.0\n",
       "...     ...             ...    ...     ...             ...\n",
       "5509    0.0             0.0      *     3.0             6.0\n",
       "5510    1.0             3.0  247.0     3.0             3.0\n",
       "5511    0.0             3.0      *     3.0             5.0\n",
       "5512    0.0             2.0  246.0     3.0             2.0\n",
       "5513    0.0             0.0   99.0     3.0             2.0\n",
       "\n",
       "[5310 rows x 5 columns]"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "result"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_dataframe(model, result_of_fit):\n",
    "\n",
    "    # Get original data\n",
    "    better = model.input_data.loc[result_of_fit.index]\n",
    "    if not better.index.is_unique:\n",
    "        raise ValueError(\"Need index values in input data to be unique\")\n",
    "\n",
    "    # Get match groups for clustering\n",
    "    better[\"match_group\"] = np.nan\n",
    "    better[\"match_group_size\"] = np.nan\n",
    "    for idx, group in enumerate(model.units_per_group):\n",
    "        better.loc[group, \"match_group\"] = idx\n",
    "        better.loc[group, \"match_group_size\"] = len(group)\n",
    "\n",
    "    # Get weights. I THINK this is right?! At least for with repeat=False?\n",
    "    t = model.treatment_column_name\n",
    "    better[\"t_in_group\"] = better.groupby(\"match_group\")[t].transform(np.sum)\n",
    "\n",
    "    # Make weights\n",
    "    better[\"weights\"] = np.nan\n",
    "    better.loc[better[t] == 1, \"weights\"] = 1  # treaments are 1\n",
    "\n",
    "    # Controls start as proportional to num of treatments\n",
    "    # each observation is matched to.\n",
    "    better.loc[better[t] == 0, \"weights\"] = better[\"t_in_group\"] / (\n",
    "        better[\"match_group_size\"] - better[\"t_in_group\"]\n",
    "    )\n",
    "\n",
    "    # Then re-normalize for num unique control observations.\n",
    "    control_weights = better[better[t] == 0][\"weights\"].sum()\n",
    "\n",
    "    num_control_obs = len(better[better[t] == 0].index.drop_duplicates())\n",
    "    renormalization = num_control_obs / control_weights\n",
    "    better.loc[better[t] == 0, \"weights\"] = (\n",
    "        better.loc[better[t] == 0, \"weights\"] * renormalization\n",
    "    )\n",
    "    assert better.weights.notnull().all()\n",
    "\n",
    "    better = better.drop([\"t_in_group\"], axis=\"columns\")\n",
    "\n",
    "    # Make sure right length and values!\n",
    "    assert len(result_of_fit) == len(better)\n",
    "    assert better.loc[better[t] == 0, \"weights\"].sum() == num_control_obs\n",
    "\n",
    "    return better"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "matched_data = get_dataframe(model, result)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>annual_earnings</th>\n",
       "      <th>female</th>\n",
       "      <th>simplified_race</th>\n",
       "      <th>has_college</th>\n",
       "      <th>county</th>\n",
       "      <th>class94</th>\n",
       "      <th>discretized_age</th>\n",
       "      <th>match_group</th>\n",
       "      <th>match_group_size</th>\n",
       "      <th>weights</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>42900.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>59.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.930000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>31200.0</td>\n",
       "      <td>0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0</td>\n",
       "      <td>31</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>411.0</td>\n",
       "      <td>108.0</td>\n",
       "      <td>0.070189</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>20020.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>52.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>22859.2</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>44</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>424.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>1.240000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>73860.8</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>24</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>106.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   annual_earnings  female  simplified_race  has_college  county  class94  \\\n",
       "0          42900.0       1              0.0            0      10        3   \n",
       "1          31200.0       0              2.0            0      31        3   \n",
       "2          20020.0       0              0.0            1       8        3   \n",
       "3          22859.2       0              0.0            0      44        1   \n",
       "4          73860.8       0              0.0            1      24        3   \n",
       "\n",
       "   discretized_age  match_group  match_group_size   weights  \n",
       "0                5         59.0               5.0  0.930000  \n",
       "1                3        411.0             108.0  0.070189  \n",
       "2                6         52.0               3.0  1.000000  \n",
       "3                4        424.0              28.0  1.240000  \n",
       "4                3        106.0               7.0  1.000000  "
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "matched_data.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Check Your Matches and Analyze\n",
    "\n",
    "### Exercise 12\n",
    "\n",
    "We previously tested balance on `simplified_race` and `county`. Check those again. Are there still statistically significant differences in college education by `simplified_race`?\n",
    "\n",
    "Note that when you test for this, you'll need to take into account the `weights` column you got back from `get_dataframe`. What DAME does is not actually the 1-to-1 matching described in our readings — instead, however many observations that exact match it finds it puts in the same \"group\". (These groups are identified in the dataframe you got from `get_dataframe` by the column `match_group`, and the size of each group is in `match_group_size`.)\n",
    "\n",
    "So to analyze the data, you need to use the `wls` (weighted least squares) function in `statsmodels`. For example, if your data is called `matched_data`, you might run:\n",
    "\n",
    "```python\n",
    "smf.wls(\n",
    "    \"has_college ~ C(simplified_race)\", matched_data, weights=matched_data[\"weights\"]\n",
    ").fit().summary()\n",
    "```"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>WLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>       <td>has_college</td>   <th>  R-squared:         </th> <td>   0.000</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>WLS</td>       <th>  Adj. R-squared:    </th> <td>  -0.001</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>1.134e-12</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Mon, 08 Apr 2024</td> <th>  Prob (F-statistic):</th>  <td>  1.00</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>20:00:30</td>     <th>  Log-Likelihood:    </th> <td> -3736.0</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td>  5310</td>      <th>  AIC:               </th> <td>   7480.</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td>  5306</td>      <th>  BIC:               </th> <td>   7506.</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>     3</td>      <th>                     </th>     <td> </td>    \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>    \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "              <td></td>                 <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Intercept</th>                 <td>    0.2119</td> <td>    0.007</td> <td>   31.608</td> <td> 0.000</td> <td>    0.199</td> <td>    0.225</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(simplified_race)[T.1.0]</th> <td> 1.735e-17</td> <td>    0.018</td> <td> 9.58e-16</td> <td> 1.000</td> <td>   -0.036</td> <td>    0.036</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(simplified_race)[T.2.0]</th> <td>-5.627e-17</td> <td>    0.019</td> <td>   -3e-15</td> <td> 1.000</td> <td>   -0.037</td> <td>    0.037</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(simplified_race)[T.3.0]</th> <td> 1.769e-16</td> <td>    0.020</td> <td> 8.74e-15</td> <td> 1.000</td> <td>   -0.040</td> <td>    0.040</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>860.389</td> <th>  Durbin-Watson:     </th> <td>   2.000</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th> <td> 0.000</td>  <th>  Jarque-Bera (JB):  </th> <td>1353.227</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>          <td> 1.234</td>  <th>  Prob(JB):          </th> <td>1.41e-294</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>      <td> 2.851</td>  <th>  Cond. No.          </th> <td>    3.95</td> \n",
       "</tr>\n",
       "</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified."
      ],
      "text/latex": [
       "\\begin{center}\n",
       "\\begin{tabular}{lclc}\n",
       "\\toprule\n",
       "\\textbf{Dep. Variable:}             &   has\\_college   & \\textbf{  R-squared:         } &     0.000   \\\\\n",
       "\\textbf{Model:}                     &       WLS        & \\textbf{  Adj. R-squared:    } &    -0.001   \\\\\n",
       "\\textbf{Method:}                    &  Least Squares   & \\textbf{  F-statistic:       } & 1.134e-12   \\\\\n",
       "\\textbf{Date:}                      & Mon, 08 Apr 2024 & \\textbf{  Prob (F-statistic):} &     1.00    \\\\\n",
       "\\textbf{Time:}                      &     20:00:30     & \\textbf{  Log-Likelihood:    } &   -3736.0   \\\\\n",
       "\\textbf{No. Observations:}          &        5310      & \\textbf{  AIC:               } &     7480.   \\\\\n",
       "\\textbf{Df Residuals:}              &        5306      & \\textbf{  BIC:               } &     7506.   \\\\\n",
       "\\textbf{Df Model:}                  &           3      & \\textbf{                     } &             \\\\\n",
       "\\textbf{Covariance Type:}           &    nonrobust     & \\textbf{                     } &             \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "\\begin{tabular}{lcccccc}\n",
       "                                    & \\textbf{coef} & \\textbf{std err} & \\textbf{t} & \\textbf{P$> |$t$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n",
       "\\midrule\n",
       "\\textbf{Intercept}                  &       0.2119  &        0.007     &    31.608  &         0.000        &        0.199    &        0.225     \\\\\n",
       "\\textbf{C(simplified\\_race)[T.1.0]} &    1.735e-17  &        0.018     &  9.58e-16  &         1.000        &       -0.036    &        0.036     \\\\\n",
       "\\textbf{C(simplified\\_race)[T.2.0]} &   -5.627e-17  &        0.019     &    -3e-15  &         1.000        &       -0.037    &        0.037     \\\\\n",
       "\\textbf{C(simplified\\_race)[T.3.0]} &    1.769e-16  &        0.020     &  8.74e-15  &         1.000        &       -0.040    &        0.040     \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "\\begin{tabular}{lclc}\n",
       "\\textbf{Omnibus:}       & 860.389 & \\textbf{  Durbin-Watson:     } &     2.000  \\\\\n",
       "\\textbf{Prob(Omnibus):} &   0.000 & \\textbf{  Jarque-Bera (JB):  } &  1353.227  \\\\\n",
       "\\textbf{Skew:}          &   1.234 & \\textbf{  Prob(JB):          } & 1.41e-294  \\\\\n",
       "\\textbf{Kurtosis:}      &   2.851 & \\textbf{  Cond. No.          } &      3.95  \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "%\\caption{WLS Regression Results}\n",
       "\\end{center}\n",
       "\n",
       "Notes: \\newline\n",
       " [1] Standard Errors assume that the covariance matrix of the errors is correctly specified."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            WLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:            has_college   R-squared:                       0.000\n",
       "Model:                            WLS   Adj. R-squared:                 -0.001\n",
       "Method:                 Least Squares   F-statistic:                 1.134e-12\n",
       "Date:                Mon, 08 Apr 2024   Prob (F-statistic):               1.00\n",
       "Time:                        20:00:30   Log-Likelihood:                -3736.0\n",
       "No. Observations:                5310   AIC:                             7480.\n",
       "Df Residuals:                    5306   BIC:                             7506.\n",
       "Df Model:                           3                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "=============================================================================================\n",
       "                                coef    std err          t      P>|t|      [0.025      0.975]\n",
       "---------------------------------------------------------------------------------------------\n",
       "Intercept                     0.2119      0.007     31.608      0.000       0.199       0.225\n",
       "C(simplified_race)[T.1.0]  1.735e-17      0.018   9.58e-16      1.000      -0.036       0.036\n",
       "C(simplified_race)[T.2.0] -5.627e-17      0.019     -3e-15      1.000      -0.037       0.037\n",
       "C(simplified_race)[T.3.0]  1.769e-16      0.020   8.74e-15      1.000      -0.040       0.040\n",
       "==============================================================================\n",
       "Omnibus:                      860.389   Durbin-Watson:                   2.000\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):             1353.227\n",
       "Skew:                           1.234   Prob(JB):                    1.41e-294\n",
       "Kurtosis:                       2.851   Cond. No.                         3.95\n",
       "==============================================================================\n",
       "\n",
       "Notes:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "\"\"\""
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import statsmodels.formula.api as smf\n",
    "\n",
    "smf.wls(\n",
    "    \"has_college ~ C(simplified_race)\", matched_data, weights=matched_data[\"weights\"]\n",
    ").fit().summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "### Exercise 13\n",
    "\n",
    "Now use a weighted least squares regression on your matched data to regress annual earnings on *just* having a college eduction. What is the apparent effect of a BA? How does that compare to our initial estimate using the raw CPS data (before matching)?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>WLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>     <td>annual_earnings</td> <th>  R-squared:         </th> <td>   0.058</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>WLS</td>       <th>  Adj. R-squared:    </th> <td>   0.057</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>   324.1</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Mon, 08 Apr 2024</td> <th>  Prob (F-statistic):</th> <td>2.19e-70</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>20:00:30</td>     <th>  Log-Likelihood:    </th> <td> -61753.</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td>  5310</td>      <th>  AIC:               </th> <td>1.235e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td>  5308</td>      <th>  BIC:               </th> <td>1.235e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>     1</td>      <th>                     </th>     <td> </td>    \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>    \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "       <td></td>          <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Intercept</th>   <td> 3.909e+04</td> <td>  351.293</td> <td>  111.287</td> <td> 0.000</td> <td> 3.84e+04</td> <td> 3.98e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>has_college</th> <td> 1.374e+04</td> <td>  763.203</td> <td>   18.003</td> <td> 0.000</td> <td> 1.22e+04</td> <td> 1.52e+04</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>2934.035</td> <th>  Durbin-Watson:     </th> <td>   2.006</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th>  <td> 0.000</td>  <th>  Jarque-Bera (JB):  </th> <td>33100.529</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>           <td> 2.424</td>  <th>  Prob(JB):          </th> <td>    0.00</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>       <td>14.230</td>  <th>  Cond. No.          </th> <td>    2.58</td> \n",
       "</tr>\n",
       "</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified."
      ],
      "text/latex": [
       "\\begin{center}\n",
       "\\begin{tabular}{lclc}\n",
       "\\toprule\n",
       "\\textbf{Dep. Variable:}    & annual\\_earnings & \\textbf{  R-squared:         } &     0.058   \\\\\n",
       "\\textbf{Model:}            &       WLS        & \\textbf{  Adj. R-squared:    } &     0.057   \\\\\n",
       "\\textbf{Method:}           &  Least Squares   & \\textbf{  F-statistic:       } &     324.1   \\\\\n",
       "\\textbf{Date:}             & Mon, 08 Apr 2024 & \\textbf{  Prob (F-statistic):} &  2.19e-70   \\\\\n",
       "\\textbf{Time:}             &     20:00:30     & \\textbf{  Log-Likelihood:    } &   -61753.   \\\\\n",
       "\\textbf{No. Observations:} &        5310      & \\textbf{  AIC:               } & 1.235e+05   \\\\\n",
       "\\textbf{Df Residuals:}     &        5308      & \\textbf{  BIC:               } & 1.235e+05   \\\\\n",
       "\\textbf{Df Model:}         &           1      & \\textbf{                     } &             \\\\\n",
       "\\textbf{Covariance Type:}  &    nonrobust     & \\textbf{                     } &             \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "\\begin{tabular}{lcccccc}\n",
       "                      & \\textbf{coef} & \\textbf{std err} & \\textbf{t} & \\textbf{P$> |$t$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n",
       "\\midrule\n",
       "\\textbf{Intercept}    &    3.909e+04  &      351.293     &   111.287  &         0.000        &     3.84e+04    &     3.98e+04     \\\\\n",
       "\\textbf{has\\_college} &    1.374e+04  &      763.203     &    18.003  &         0.000        &     1.22e+04    &     1.52e+04     \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "\\begin{tabular}{lclc}\n",
       "\\textbf{Omnibus:}       & 2934.035 & \\textbf{  Durbin-Watson:     } &     2.006  \\\\\n",
       "\\textbf{Prob(Omnibus):} &   0.000  & \\textbf{  Jarque-Bera (JB):  } & 33100.529  \\\\\n",
       "\\textbf{Skew:}          &   2.424  & \\textbf{  Prob(JB):          } &      0.00  \\\\\n",
       "\\textbf{Kurtosis:}      &  14.230  & \\textbf{  Cond. No.          } &      2.58  \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "%\\caption{WLS Regression Results}\n",
       "\\end{center}\n",
       "\n",
       "Notes: \\newline\n",
       " [1] Standard Errors assume that the covariance matrix of the errors is correctly specified."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            WLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:        annual_earnings   R-squared:                       0.058\n",
       "Model:                            WLS   Adj. R-squared:                  0.057\n",
       "Method:                 Least Squares   F-statistic:                     324.1\n",
       "Date:                Mon, 08 Apr 2024   Prob (F-statistic):           2.19e-70\n",
       "Time:                        20:00:30   Log-Likelihood:                -61753.\n",
       "No. Observations:                5310   AIC:                         1.235e+05\n",
       "Df Residuals:                    5308   BIC:                         1.235e+05\n",
       "Df Model:                           1                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "===============================================================================\n",
       "                  coef    std err          t      P>|t|      [0.025      0.975]\n",
       "-------------------------------------------------------------------------------\n",
       "Intercept    3.909e+04    351.293    111.287      0.000    3.84e+04    3.98e+04\n",
       "has_college  1.374e+04    763.203     18.003      0.000    1.22e+04    1.52e+04\n",
       "==============================================================================\n",
       "Omnibus:                     2934.035   Durbin-Watson:                   2.006\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):            33100.529\n",
       "Skew:                           2.424   Prob(JB):                         0.00\n",
       "Kurtosis:                      14.230   Cond. No.                         2.58\n",
       "==============================================================================\n",
       "\n",
       "Notes:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "\"\"\""
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "smf.wls(\n",
    "    \"annual_earnings ~ has_college\", matched_data, weights=matched_data[\"weights\"]\n",
    ").fit().summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Exercise 14\n",
    "\n",
    "Now include our other matching variables as controls (e.g. all the coefficients you gave to DAME to use). Does the coefficient change?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>WLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>     <td>annual_earnings</td> <th>  R-squared:         </th> <td>   0.238</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>WLS</td>       <th>  Adj. R-squared:    </th> <td>   0.188</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>   4.786</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Mon, 08 Apr 2024</td> <th>  Prob (F-statistic):</th> <td>1.62e-132</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>20:00:31</td>     <th>  Log-Likelihood:    </th> <td> -61189.</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td>  5310</td>      <th>  AIC:               </th> <td>1.230e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td>  4984</td>      <th>  BIC:               </th> <td>1.252e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>   325</td>      <th>                     </th>     <td> </td>    \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>    \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "              <td></td>                 <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Intercept</th>                 <td> 4.761e+04</td> <td> 2429.505</td> <td>   19.595</td> <td> 0.000</td> <td> 4.28e+04</td> <td> 5.24e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(simplified_race)[T.1.0]</th> <td>-8344.9150</td> <td> 1067.331</td> <td>   -7.818</td> <td> 0.000</td> <td>-1.04e+04</td> <td>-6252.476</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(simplified_race)[T.2.0]</th> <td>-6753.9175</td> <td> 1140.523</td> <td>   -5.922</td> <td> 0.000</td> <td>-8989.844</td> <td>-4517.991</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(simplified_race)[T.3.0]</th> <td>-3220.6308</td> <td> 1202.997</td> <td>   -2.677</td> <td> 0.007</td> <td>-5579.035</td> <td> -862.227</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(discretized_age)[T.3]</th>   <td> 8584.0505</td> <td>  868.037</td> <td>    9.889</td> <td> 0.000</td> <td> 6882.316</td> <td> 1.03e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(discretized_age)[T.4]</th>   <td> 1.251e+04</td> <td>  923.078</td> <td>   13.558</td> <td> 0.000</td> <td> 1.07e+04</td> <td> 1.43e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(discretized_age)[T.5]</th>   <td> 1.266e+04</td> <td>  964.214</td> <td>   13.131</td> <td> 0.000</td> <td> 1.08e+04</td> <td> 1.46e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(discretized_age)[T.6]</th>   <td> 9235.0616</td> <td> 1189.062</td> <td>    7.767</td> <td> 0.000</td> <td> 6903.976</td> <td> 1.16e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(discretized_age)[T.7]</th>   <td> 1.347e+04</td> <td> 2975.342</td> <td>    4.528</td> <td> 0.000</td> <td> 7639.580</td> <td> 1.93e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.1]</th>            <td>-1.114e+04</td> <td> 3231.653</td> <td>   -3.446</td> <td> 0.001</td> <td>-1.75e+04</td> <td>-4799.550</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.2]</th>            <td>-1.279e+04</td> <td> 3245.734</td> <td>   -3.942</td> <td> 0.000</td> <td>-1.92e+04</td> <td>-6430.115</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.3]</th>            <td>-9142.9921</td> <td> 1.19e+04</td> <td>   -0.771</td> <td> 0.441</td> <td>-3.24e+04</td> <td> 1.41e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.4]</th>            <td>-6471.4363</td> <td> 2990.234</td> <td>   -2.164</td> <td> 0.030</td> <td>-1.23e+04</td> <td> -609.261</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.5]</th>            <td>-6378.3577</td> <td> 4178.131</td> <td>   -1.527</td> <td> 0.127</td> <td>-1.46e+04</td> <td> 1812.617</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.6]</th>            <td>-1.627e+04</td> <td> 1.04e+04</td> <td>   -1.566</td> <td> 0.118</td> <td>-3.66e+04</td> <td> 4103.579</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.7]</th>            <td>-1.023e+04</td> <td> 3835.754</td> <td>   -2.666</td> <td> 0.008</td> <td>-1.77e+04</td> <td>-2706.649</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.8]</th>            <td>-1.153e+04</td> <td> 3175.916</td> <td>   -3.629</td> <td> 0.000</td> <td>-1.78e+04</td> <td>-5300.388</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.9]</th>            <td>-1.382e+04</td> <td> 5130.249</td> <td>   -2.694</td> <td> 0.007</td> <td>-2.39e+04</td> <td>-3762.096</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.10]</th>           <td>-1.501e+04</td> <td> 3427.926</td> <td>   -4.380</td> <td> 0.000</td> <td>-2.17e+04</td> <td>-8293.693</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.11]</th>           <td>-1.418e+04</td> <td> 3040.008</td> <td>   -4.664</td> <td> 0.000</td> <td>-2.01e+04</td> <td>-8218.173</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.12]</th>           <td>-6849.3954</td> <td> 3121.285</td> <td>   -2.194</td> <td> 0.028</td> <td> -1.3e+04</td> <td> -730.303</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.13]</th>           <td>-1.381e+04</td> <td> 3368.446</td> <td>   -4.101</td> <td> 0.000</td> <td>-2.04e+04</td> <td>-7209.235</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.14]</th>           <td>-1.369e+04</td> <td> 3918.748</td> <td>   -3.493</td> <td> 0.000</td> <td>-2.14e+04</td> <td>-6007.378</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.15]</th>           <td>-9190.4689</td> <td> 4799.618</td> <td>   -1.915</td> <td> 0.056</td> <td>-1.86e+04</td> <td>  218.895</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.16]</th>           <td>-1.061e+04</td> <td> 3616.372</td> <td>   -2.935</td> <td> 0.003</td> <td>-1.77e+04</td> <td>-3523.982</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.17]</th>           <td>-1.601e+04</td> <td> 7731.556</td> <td>   -2.070</td> <td> 0.038</td> <td>-3.12e+04</td> <td> -848.909</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.18]</th>           <td>-1788.7046</td> <td> 4787.690</td> <td>   -0.374</td> <td> 0.709</td> <td>-1.12e+04</td> <td> 7597.275</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.19]</th>           <td>-1.684e+04</td> <td> 6555.900</td> <td>   -2.569</td> <td> 0.010</td> <td>-2.97e+04</td> <td>-3989.067</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.20]</th>           <td>  -1.4e+04</td> <td> 4328.098</td> <td>   -3.235</td> <td> 0.001</td> <td>-2.25e+04</td> <td>-5515.772</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.21]</th>           <td>-6184.3776</td> <td> 3595.547</td> <td>   -1.720</td> <td> 0.085</td> <td>-1.32e+04</td> <td>  864.476</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.22]</th>           <td>-1.826e+04</td> <td> 3694.928</td> <td>   -4.941</td> <td> 0.000</td> <td>-2.55e+04</td> <td> -1.1e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.23]</th>           <td>-1.242e+04</td> <td> 3244.837</td> <td>   -3.828</td> <td> 0.000</td> <td>-1.88e+04</td> <td>-6059.940</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.24]</th>           <td>-1.104e+04</td> <td> 3171.193</td> <td>   -3.482</td> <td> 0.001</td> <td>-1.73e+04</td> <td>-4824.300</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.25]</th>           <td>-1.506e+04</td> <td> 3496.105</td> <td>   -4.309</td> <td> 0.000</td> <td>-2.19e+04</td> <td>-8211.049</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.26]</th>           <td>-1.391e+04</td> <td> 3137.745</td> <td>   -4.432</td> <td> 0.000</td> <td>-2.01e+04</td> <td>-7755.819</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.27]</th>           <td>-1.337e+04</td> <td> 3345.523</td> <td>   -3.997</td> <td> 0.000</td> <td>-1.99e+04</td> <td>-6814.638</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.28]</th>           <td>-1.297e+04</td> <td> 5671.204</td> <td>   -2.287</td> <td> 0.022</td> <td>-2.41e+04</td> <td>-1853.870</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.29]</th>           <td>-4845.0790</td> <td> 5203.125</td> <td>   -0.931</td> <td> 0.352</td> <td> -1.5e+04</td> <td> 5355.335</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.30]</th>           <td>-2248.8602</td> <td> 5067.398</td> <td>   -0.444</td> <td> 0.657</td> <td>-1.22e+04</td> <td> 7685.469</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.31]</th>           <td>-1.155e+04</td> <td> 4710.979</td> <td>   -2.452</td> <td> 0.014</td> <td>-2.08e+04</td> <td>-2313.897</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.32]</th>           <td>-7114.5598</td> <td> 3632.908</td> <td>   -1.958</td> <td> 0.050</td> <td>-1.42e+04</td> <td>    7.538</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.33]</th>           <td>-1.272e+04</td> <td> 3067.035</td> <td>   -4.149</td> <td> 0.000</td> <td>-1.87e+04</td> <td>-6711.354</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.34]</th>           <td> -1.32e+04</td> <td> 3443.339</td> <td>   -3.833</td> <td> 0.000</td> <td>-1.99e+04</td> <td>-6447.428</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.35]</th>           <td>-9324.2429</td> <td> 3384.603</td> <td>   -2.755</td> <td> 0.006</td> <td> -1.6e+04</td> <td>-2688.932</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.36]</th>           <td>-1.505e+04</td> <td> 3658.198</td> <td>   -4.115</td> <td> 0.000</td> <td>-2.22e+04</td> <td>-7881.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.37]</th>           <td>-1.023e+04</td> <td> 3762.247</td> <td>   -2.720</td> <td> 0.007</td> <td>-1.76e+04</td> <td>-2856.766</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.38]</th>           <td>-1.308e+04</td> <td> 3310.408</td> <td>   -3.951</td> <td> 0.000</td> <td>-1.96e+04</td> <td>-6590.153</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.39]</th>           <td>-1.177e+04</td> <td> 3252.230</td> <td>   -3.618</td> <td> 0.000</td> <td>-1.81e+04</td> <td>-5391.513</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.40]</th>           <td>-1.516e+04</td> <td> 3677.299</td> <td>   -4.123</td> <td> 0.000</td> <td>-2.24e+04</td> <td>-7954.028</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.41]</th>           <td>-9224.6049</td> <td> 2690.524</td> <td>   -3.429</td> <td> 0.001</td> <td>-1.45e+04</td> <td>-3949.994</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.42]</th>           <td>-1.365e+04</td> <td> 3460.095</td> <td>   -3.944</td> <td> 0.000</td> <td>-2.04e+04</td> <td>-6864.991</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.43]</th>           <td>-1.165e+04</td> <td> 3698.161</td> <td>   -3.151</td> <td> 0.002</td> <td>-1.89e+04</td> <td>-4404.402</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.44]</th>           <td> -1.07e+04</td> <td> 2961.782</td> <td>   -3.611</td> <td> 0.000</td> <td>-1.65e+04</td> <td>-4889.799</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.45]</th>           <td>-7052.4496</td> <td> 3127.876</td> <td>   -2.255</td> <td> 0.024</td> <td>-1.32e+04</td> <td> -920.437</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.46]</th>           <td>-9064.0230</td> <td> 3380.497</td> <td>   -2.681</td> <td> 0.007</td> <td>-1.57e+04</td> <td>-2436.761</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.47]</th>           <td>-1.681e+04</td> <td> 3013.844</td> <td>   -5.579</td> <td> 0.000</td> <td>-2.27e+04</td> <td>-1.09e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.48]</th>           <td>-8897.8731</td> <td> 3296.249</td> <td>   -2.699</td> <td> 0.007</td> <td>-1.54e+04</td> <td>-2435.774</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.49]</th>           <td> 2.125e+04</td> <td> 7993.324</td> <td>    2.659</td> <td> 0.008</td> <td> 5580.256</td> <td> 3.69e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.50]</th>           <td>-2.251e+04</td> <td> 1.13e+04</td> <td>   -1.997</td> <td> 0.046</td> <td>-4.46e+04</td> <td> -409.459</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.51]</th>           <td>-5880.2544</td> <td> 3452.043</td> <td>   -1.703</td> <td> 0.089</td> <td>-1.26e+04</td> <td>  887.270</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.52]</th>           <td>-1.006e+04</td> <td> 8297.064</td> <td>   -1.213</td> <td> 0.225</td> <td>-2.63e+04</td> <td> 6201.302</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.53]</th>           <td>-7396.8710</td> <td> 1.97e+04</td> <td>   -0.376</td> <td> 0.707</td> <td>-4.59e+04</td> <td> 3.12e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.54]</th>           <td>-1.349e+04</td> <td> 8853.843</td> <td>   -1.524</td> <td> 0.128</td> <td>-3.08e+04</td> <td> 3865.030</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.55]</th>           <td> 6016.8132</td> <td> 9691.581</td> <td>    0.621</td> <td> 0.535</td> <td> -1.3e+04</td> <td>  2.5e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.56]</th>           <td>-7435.2407</td> <td> 7281.280</td> <td>   -1.021</td> <td> 0.307</td> <td>-2.17e+04</td> <td> 6839.272</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.57]</th>           <td> 8434.9441</td> <td>  1.4e+04</td> <td>    0.604</td> <td> 0.546</td> <td>-1.89e+04</td> <td> 3.58e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.58]</th>           <td>-5918.5652</td> <td> 5278.657</td> <td>   -1.121</td> <td> 0.262</td> <td>-1.63e+04</td> <td> 4429.925</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.59]</th>           <td>-1.631e+04</td> <td> 9894.838</td> <td>   -1.649</td> <td> 0.099</td> <td>-3.57e+04</td> <td> 3086.114</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.60]</th>           <td>-1.499e+04</td> <td> 6719.761</td> <td>   -2.231</td> <td> 0.026</td> <td>-2.82e+04</td> <td>-1819.273</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.61]</th>           <td>-8015.9218</td> <td> 1.09e+04</td> <td>   -0.732</td> <td> 0.464</td> <td>-2.95e+04</td> <td> 1.34e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.62]</th>           <td> 1.171e+04</td> <td> 1.32e+04</td> <td>    0.884</td> <td> 0.377</td> <td>-1.43e+04</td> <td> 3.77e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.63]</th>           <td>-1.124e+04</td> <td> 8626.461</td> <td>   -1.303</td> <td> 0.193</td> <td>-2.82e+04</td> <td> 5671.473</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.64]</th>           <td>  1.57e+04</td> <td> 8596.970</td> <td>    1.826</td> <td> 0.068</td> <td>-1156.314</td> <td> 3.26e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.65]</th>           <td>-1.964e+04</td> <td> 9254.939</td> <td>   -2.122</td> <td> 0.034</td> <td>-3.78e+04</td> <td>-1498.590</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.66]</th>           <td>-2.286e+04</td> <td> 1.47e+04</td> <td>   -1.550</td> <td> 0.121</td> <td>-5.18e+04</td> <td> 6046.864</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.67]</th>           <td>-1.286e+04</td> <td> 2.97e+04</td> <td>   -0.434</td> <td> 0.664</td> <td> -7.1e+04</td> <td> 4.53e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.68]</th>           <td>  265.8046</td> <td> 9594.437</td> <td>    0.028</td> <td> 0.978</td> <td>-1.85e+04</td> <td> 1.91e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.69]</th>           <td>-1.382e+04</td> <td> 9042.247</td> <td>   -1.528</td> <td> 0.127</td> <td>-3.15e+04</td> <td> 3909.886</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.70]</th>           <td>-2.086e+04</td> <td> 1.33e+04</td> <td>   -1.567</td> <td> 0.117</td> <td> -4.7e+04</td> <td> 5231.063</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.71]</th>           <td>-1.914e+04</td> <td> 8999.435</td> <td>   -2.127</td> <td> 0.033</td> <td>-3.68e+04</td> <td>-1501.949</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.72]</th>           <td> 1.203e+04</td> <td> 1.91e+04</td> <td>    0.630</td> <td> 0.528</td> <td>-2.54e+04</td> <td> 4.95e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.73]</th>           <td>-4151.5319</td> <td> 5648.737</td> <td>   -0.735</td> <td> 0.462</td> <td>-1.52e+04</td> <td> 6922.479</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.74]</th>           <td>-1.341e+04</td> <td> 7534.403</td> <td>   -1.780</td> <td> 0.075</td> <td>-2.82e+04</td> <td> 1357.560</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.75]</th>           <td>-1.719e+04</td> <td> 3924.766</td> <td>   -4.381</td> <td> 0.000</td> <td>-2.49e+04</td> <td>-9500.690</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.76]</th>           <td>-3.746e+04</td> <td> 2.62e+04</td> <td>   -1.430</td> <td> 0.153</td> <td>-8.88e+04</td> <td> 1.39e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.77]</th>           <td>  237.8624</td> <td> 6897.951</td> <td>    0.034</td> <td> 0.972</td> <td>-1.33e+04</td> <td> 1.38e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.78]</th>           <td> 6770.8989</td> <td> 2.24e+04</td> <td>    0.302</td> <td> 0.763</td> <td>-3.72e+04</td> <td> 5.07e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.79]</th>           <td> 4.146e+04</td> <td> 8462.736</td> <td>    4.899</td> <td> 0.000</td> <td> 2.49e+04</td> <td>  5.8e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.80]</th>           <td>-1.741e+04</td> <td> 5589.953</td> <td>   -3.115</td> <td> 0.002</td> <td>-2.84e+04</td> <td>-6454.909</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.81]</th>           <td>-1.143e+04</td> <td> 5721.800</td> <td>   -1.998</td> <td> 0.046</td> <td>-2.27e+04</td> <td> -216.304</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.82]</th>           <td>-1.658e+04</td> <td> 1.61e+04</td> <td>   -1.032</td> <td> 0.302</td> <td>-4.81e+04</td> <td> 1.49e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.83]</th>           <td>-2.307e+04</td> <td> 1.25e+04</td> <td>   -1.840</td> <td> 0.066</td> <td>-4.77e+04</td> <td> 1514.953</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.84]</th>           <td>-8999.9730</td> <td> 1.22e+04</td> <td>   -0.740</td> <td> 0.459</td> <td>-3.28e+04</td> <td> 1.48e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.85]</th>           <td> 3419.8384</td> <td> 9046.856</td> <td>    0.378</td> <td> 0.705</td> <td>-1.43e+04</td> <td> 2.12e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.86]</th>           <td> 1.824e+04</td> <td> 1.43e+04</td> <td>    1.279</td> <td> 0.201</td> <td>-9720.390</td> <td> 4.62e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.87]</th>           <td>-2.403e+04</td> <td> 1.09e+04</td> <td>   -2.205</td> <td> 0.027</td> <td>-4.54e+04</td> <td>-2667.316</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.88]</th>           <td>-1.326e+04</td> <td> 1.74e+04</td> <td>   -0.763</td> <td> 0.445</td> <td>-4.73e+04</td> <td> 2.08e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.89]</th>           <td>-1.574e+04</td> <td> 8531.472</td> <td>   -1.845</td> <td> 0.065</td> <td>-3.25e+04</td> <td>  985.816</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.90]</th>           <td>-8870.8793</td> <td> 4968.614</td> <td>   -1.785</td> <td> 0.074</td> <td>-1.86e+04</td> <td>  869.791</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.91]</th>           <td> -1.04e+04</td> <td> 9791.880</td> <td>   -1.062</td> <td> 0.288</td> <td>-2.96e+04</td> <td> 8799.744</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.92]</th>           <td>-1.687e+04</td> <td> 1.17e+04</td> <td>   -1.441</td> <td> 0.150</td> <td>-3.98e+04</td> <td> 6076.622</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.93]</th>           <td>-4593.8182</td> <td> 9052.966</td> <td>   -0.507</td> <td> 0.612</td> <td>-2.23e+04</td> <td> 1.32e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.94]</th>           <td>  -66.5470</td> <td> 9761.637</td> <td>   -0.007</td> <td> 0.995</td> <td>-1.92e+04</td> <td> 1.91e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.95]</th>           <td>-1.199e+04</td> <td> 5085.007</td> <td>   -2.357</td> <td> 0.018</td> <td> -2.2e+04</td> <td>-2017.441</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.96]</th>           <td> -1.27e+04</td> <td> 1.03e+04</td> <td>   -1.228</td> <td> 0.219</td> <td> -3.3e+04</td> <td> 7572.284</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.97]</th>           <td>-2.457e+04</td> <td> 9432.408</td> <td>   -2.605</td> <td> 0.009</td> <td>-4.31e+04</td> <td>-6080.404</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.98]</th>           <td> 2197.3011</td> <td> 1.53e+04</td> <td>    0.144</td> <td> 0.886</td> <td>-2.78e+04</td> <td> 3.22e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.99]</th>           <td>-9289.2093</td> <td> 3098.282</td> <td>   -2.998</td> <td> 0.003</td> <td>-1.54e+04</td> <td>-3215.213</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.100]</th>          <td> 1.121e+04</td> <td> 7876.656</td> <td>    1.423</td> <td> 0.155</td> <td>-4235.032</td> <td> 2.66e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.101]</th>          <td>-1.684e+04</td> <td> 9598.189</td> <td>   -1.754</td> <td> 0.079</td> <td>-3.57e+04</td> <td> 1979.720</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.102]</th>          <td>-2597.8743</td> <td> 1.35e+04</td> <td>   -0.192</td> <td> 0.847</td> <td>-2.91e+04</td> <td> 2.39e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.103]</th>          <td>-1.014e+04</td> <td> 9066.754</td> <td>   -1.118</td> <td> 0.264</td> <td>-2.79e+04</td> <td> 7638.542</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.104]</th>          <td> -252.2631</td> <td> 1.16e+04</td> <td>   -0.022</td> <td> 0.983</td> <td> -2.3e+04</td> <td> 2.25e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.105]</th>          <td>-1.145e+04</td> <td>  1.3e+04</td> <td>   -0.880</td> <td> 0.379</td> <td> -3.7e+04</td> <td> 1.41e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.106]</th>          <td>-3.539e+04</td> <td> 3.35e+04</td> <td>   -1.055</td> <td> 0.291</td> <td>-1.01e+05</td> <td> 3.03e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.107]</th>          <td>-3.364e+04</td> <td> 1.71e+04</td> <td>   -1.962</td> <td> 0.050</td> <td>-6.72e+04</td> <td>  -29.720</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.109]</th>          <td>-4795.8027</td> <td> 8034.001</td> <td>   -0.597</td> <td> 0.551</td> <td>-2.05e+04</td> <td>  1.1e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.110]</th>          <td>-8716.5745</td> <td> 1.06e+04</td> <td>   -0.822</td> <td> 0.411</td> <td>-2.95e+04</td> <td> 1.21e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.111]</th>          <td>-1.946e+04</td> <td> 2.19e+04</td> <td>   -0.889</td> <td> 0.374</td> <td>-6.24e+04</td> <td> 2.35e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.112]</th>          <td>-7351.2007</td> <td> 1.42e+04</td> <td>   -0.516</td> <td> 0.606</td> <td>-3.53e+04</td> <td> 2.06e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.113]</th>          <td>-2.293e+04</td> <td>  2.6e+04</td> <td>   -0.882</td> <td> 0.378</td> <td>-7.39e+04</td> <td>  2.8e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.114]</th>          <td>-1.908e+04</td> <td> 1.61e+04</td> <td>   -1.185</td> <td> 0.236</td> <td>-5.07e+04</td> <td> 1.25e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.115]</th>          <td>-2798.0105</td> <td>    1e+04</td> <td>   -0.280</td> <td> 0.780</td> <td>-2.24e+04</td> <td> 1.68e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.116]</th>          <td>-8785.2988</td> <td> 1.35e+04</td> <td>   -0.650</td> <td> 0.516</td> <td>-3.53e+04</td> <td> 1.77e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.117]</th>          <td>-2.473e+04</td> <td> 4.28e+04</td> <td>   -0.577</td> <td> 0.564</td> <td>-1.09e+05</td> <td> 5.92e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.118]</th>          <td>-1.698e+04</td> <td>  1.1e+04</td> <td>   -1.538</td> <td> 0.124</td> <td>-3.86e+04</td> <td> 4669.861</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.120]</th>          <td>-1.704e+04</td> <td> 1.32e+04</td> <td>   -1.287</td> <td> 0.198</td> <td> -4.3e+04</td> <td> 8908.447</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.121]</th>          <td>-2.767e+04</td> <td> 1.32e+04</td> <td>   -2.093</td> <td> 0.036</td> <td>-5.36e+04</td> <td>-1747.007</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.123]</th>          <td>-1.291e+04</td> <td> 5091.347</td> <td>   -2.536</td> <td> 0.011</td> <td>-2.29e+04</td> <td>-2931.559</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.124]</th>          <td>-3.209e+04</td> <td>    1e+04</td> <td>   -3.197</td> <td> 0.001</td> <td>-5.18e+04</td> <td>-1.24e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.125]</th>          <td>-1.795e+04</td> <td> 1.25e+04</td> <td>   -1.440</td> <td> 0.150</td> <td>-4.24e+04</td> <td> 6490.095</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.126]</th>          <td>-6948.1460</td> <td> 9793.690</td> <td>   -0.709</td> <td> 0.478</td> <td>-2.61e+04</td> <td> 1.23e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.127]</th>          <td>-4111.7736</td> <td> 9598.180</td> <td>   -0.428</td> <td> 0.668</td> <td>-2.29e+04</td> <td> 1.47e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.128]</th>          <td>-1.407e+04</td> <td> 3.35e+04</td> <td>   -0.420</td> <td> 0.675</td> <td>-7.98e+04</td> <td> 5.17e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.129]</th>          <td>-1.338e+04</td> <td> 1.22e+04</td> <td>   -1.094</td> <td> 0.274</td> <td>-3.73e+04</td> <td> 1.06e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.130]</th>          <td>-2.958e+04</td> <td> 1.24e+04</td> <td>   -2.379</td> <td> 0.017</td> <td> -5.4e+04</td> <td>-5205.688</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.131]</th>          <td>-9462.1890</td> <td> 2.13e+04</td> <td>   -0.445</td> <td> 0.656</td> <td>-5.11e+04</td> <td> 3.22e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.132]</th>          <td>-7889.2394</td> <td> 5638.330</td> <td>   -1.399</td> <td> 0.162</td> <td>-1.89e+04</td> <td> 3164.369</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.133]</th>          <td> 2175.4884</td> <td> 1.51e+04</td> <td>    0.144</td> <td> 0.886</td> <td>-2.75e+04</td> <td> 3.18e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.134]</th>          <td> 5.467e+04</td> <td>  1.8e+04</td> <td>    3.045</td> <td> 0.002</td> <td> 1.95e+04</td> <td> 8.99e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.135]</th>          <td>-2.083e+04</td> <td> 1.38e+04</td> <td>   -1.509</td> <td> 0.131</td> <td>-4.79e+04</td> <td> 6228.141</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.136]</th>          <td>-4420.8608</td> <td> 5997.620</td> <td>   -0.737</td> <td> 0.461</td> <td>-1.62e+04</td> <td> 7337.113</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.137]</th>          <td>-4087.2387</td> <td> 8100.626</td> <td>   -0.505</td> <td> 0.614</td> <td>   -2e+04</td> <td> 1.18e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.138]</th>          <td>-7939.1789</td> <td> 8029.739</td> <td>   -0.989</td> <td> 0.323</td> <td>-2.37e+04</td> <td> 7802.643</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.139]</th>          <td> -692.3178</td> <td> 1.02e+04</td> <td>   -0.068</td> <td> 0.946</td> <td>-2.08e+04</td> <td> 1.94e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.140]</th>          <td>-1.651e+04</td> <td> 1.37e+04</td> <td>   -1.202</td> <td> 0.229</td> <td>-4.34e+04</td> <td> 1.04e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.141]</th>          <td>-8251.4595</td> <td> 1.22e+04</td> <td>   -0.676</td> <td> 0.499</td> <td>-3.22e+04</td> <td> 1.57e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.142]</th>          <td>-1373.8309</td> <td> 2.13e+04</td> <td>   -0.065</td> <td> 0.948</td> <td> -4.3e+04</td> <td> 4.03e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.143]</th>          <td>-5545.8845</td> <td> 5862.828</td> <td>   -0.946</td> <td> 0.344</td> <td> -1.7e+04</td> <td> 5947.838</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.144]</th>          <td>-4.741e+04</td> <td> 2.12e+04</td> <td>   -2.232</td> <td> 0.026</td> <td>-8.91e+04</td> <td>-5771.921</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.145]</th>          <td>-9556.0440</td> <td> 3.47e+04</td> <td>   -0.276</td> <td> 0.783</td> <td>-7.75e+04</td> <td> 5.84e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.146]</th>          <td>-1.903e+04</td> <td> 1.59e+04</td> <td>   -1.196</td> <td> 0.232</td> <td>-5.02e+04</td> <td> 1.22e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.147]</th>          <td>  -2.8e+04</td> <td> 1.52e+04</td> <td>   -1.848</td> <td> 0.065</td> <td>-5.77e+04</td> <td> 1707.239</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.148]</th>          <td>-2.012e+04</td> <td> 1.76e+04</td> <td>   -1.146</td> <td> 0.252</td> <td>-5.45e+04</td> <td> 1.43e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.149]</th>          <td>-1.012e+04</td> <td> 4824.670</td> <td>   -2.097</td> <td> 0.036</td> <td>-1.96e+04</td> <td> -657.758</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.150]</th>          <td>-2.052e+04</td> <td> 3.35e+04</td> <td>   -0.612</td> <td> 0.541</td> <td>-8.63e+04</td> <td> 4.52e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.151]</th>          <td>-2.235e+04</td> <td> 1.13e+04</td> <td>   -1.974</td> <td> 0.048</td> <td>-4.45e+04</td> <td> -157.867</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.152]</th>          <td>-1.249e+04</td> <td> 7332.914</td> <td>   -1.703</td> <td> 0.089</td> <td>-2.69e+04</td> <td> 1887.273</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.153]</th>          <td>-1.074e+04</td> <td> 2.99e+04</td> <td>   -0.360</td> <td> 0.719</td> <td>-6.93e+04</td> <td> 4.78e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.155]</th>          <td>-1.174e+04</td> <td> 1.32e+04</td> <td>   -0.892</td> <td> 0.373</td> <td>-3.75e+04</td> <td> 1.41e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.157]</th>          <td>-2.379e+04</td> <td> 1.34e+04</td> <td>   -1.777</td> <td> 0.076</td> <td>   -5e+04</td> <td> 2454.505</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.158]</th>          <td> -3.57e+04</td> <td> 1.24e+04</td> <td>   -2.878</td> <td> 0.004</td> <td>   -6e+04</td> <td>-1.14e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.159]</th>          <td>-3961.2072</td> <td> 2.67e+04</td> <td>   -0.149</td> <td> 0.882</td> <td>-5.62e+04</td> <td> 4.83e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.160]</th>          <td>-1.811e+04</td> <td> 8356.451</td> <td>   -2.167</td> <td> 0.030</td> <td>-3.45e+04</td> <td>-1729.232</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.161]</th>          <td> 6091.1910</td> <td> 8574.294</td> <td>    0.710</td> <td> 0.477</td> <td>-1.07e+04</td> <td> 2.29e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.162]</th>          <td> 9087.0830</td> <td> 1.55e+04</td> <td>    0.586</td> <td> 0.558</td> <td>-2.13e+04</td> <td> 3.95e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.163]</th>          <td>-2.133e+04</td> <td> 2.02e+04</td> <td>   -1.054</td> <td> 0.292</td> <td> -6.1e+04</td> <td> 1.84e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.164]</th>          <td>-2.283e+04</td> <td> 1.51e+04</td> <td>   -1.511</td> <td> 0.131</td> <td>-5.24e+04</td> <td> 6795.581</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.165]</th>          <td> -2.21e+04</td> <td> 2.13e+04</td> <td>   -1.037</td> <td> 0.300</td> <td>-6.39e+04</td> <td> 1.97e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.166]</th>          <td>-1.551e+04</td> <td> 9441.670</td> <td>   -1.642</td> <td> 0.101</td> <td> -3.4e+04</td> <td> 3002.990</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.167]</th>          <td>-3.947e+04</td> <td> 3.24e+04</td> <td>   -1.218</td> <td> 0.223</td> <td>-1.03e+05</td> <td> 2.41e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.168]</th>          <td> 1.007e+04</td> <td> 7103.076</td> <td>    1.417</td> <td> 0.156</td> <td>-3857.374</td> <td>  2.4e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.169]</th>          <td> 1.283e+04</td> <td> 1.14e+04</td> <td>    1.121</td> <td> 0.262</td> <td>-9600.934</td> <td> 3.53e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.170]</th>          <td>-1.615e+04</td> <td>  1.4e+04</td> <td>   -1.150</td> <td> 0.250</td> <td>-4.37e+04</td> <td> 1.14e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.171]</th>          <td> 2.365e+04</td> <td> 7177.844</td> <td>    3.295</td> <td> 0.001</td> <td> 9576.024</td> <td> 3.77e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.172]</th>          <td>-3.626e+04</td> <td> 3.24e+04</td> <td>   -1.119</td> <td> 0.263</td> <td>-9.98e+04</td> <td> 2.73e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.173]</th>          <td>-2.629e+04</td> <td> 2.38e+04</td> <td>   -1.106</td> <td> 0.269</td> <td>-7.29e+04</td> <td> 2.03e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.174]</th>          <td>-2.314e+04</td> <td> 1.59e+04</td> <td>   -1.458</td> <td> 0.145</td> <td>-5.43e+04</td> <td> 7983.357</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.176]</th>          <td>-8331.5679</td> <td> 1.76e+04</td> <td>   -0.472</td> <td> 0.637</td> <td>-4.29e+04</td> <td> 2.62e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.177]</th>          <td>-7787.9729</td> <td> 6943.898</td> <td>   -1.122</td> <td> 0.262</td> <td>-2.14e+04</td> <td> 5825.123</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.178]</th>          <td>-8426.9047</td> <td> 9527.061</td> <td>   -0.885</td> <td> 0.376</td> <td>-2.71e+04</td> <td> 1.03e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.179]</th>          <td> 5061.4958</td> <td> 9108.387</td> <td>    0.556</td> <td> 0.578</td> <td>-1.28e+04</td> <td> 2.29e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.180]</th>          <td>-9156.0300</td> <td> 7253.999</td> <td>   -1.262</td> <td> 0.207</td> <td>-2.34e+04</td> <td> 5065.000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.181]</th>          <td>-6042.8525</td> <td> 1.16e+04</td> <td>   -0.522</td> <td> 0.602</td> <td>-2.87e+04</td> <td> 1.67e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.182]</th>          <td>  -1.6e+04</td> <td> 8180.157</td> <td>   -1.956</td> <td> 0.051</td> <td> -3.2e+04</td> <td>   40.230</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.183]</th>          <td> 1688.4654</td> <td> 4051.315</td> <td>    0.417</td> <td> 0.677</td> <td>-6253.894</td> <td> 9630.825</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.184]</th>          <td>-1.566e+04</td> <td> 3739.789</td> <td>   -4.189</td> <td> 0.000</td> <td> -2.3e+04</td> <td>-8333.281</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.185]</th>          <td>-1.158e+04</td> <td>  1.5e+04</td> <td>   -0.769</td> <td> 0.442</td> <td>-4.11e+04</td> <td> 1.79e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.186]</th>          <td>-1.279e+04</td> <td> 1.07e+04</td> <td>   -1.198</td> <td> 0.231</td> <td>-3.37e+04</td> <td> 8134.088</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.187]</th>          <td>-6652.3137</td> <td> 8781.097</td> <td>   -0.758</td> <td> 0.449</td> <td>-2.39e+04</td> <td> 1.06e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.188]</th>          <td>-1.083e+04</td> <td> 3548.268</td> <td>   -3.053</td> <td> 0.002</td> <td>-1.78e+04</td> <td>-3878.254</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.189]</th>          <td>-2.122e+04</td> <td> 5407.161</td> <td>   -3.925</td> <td> 0.000</td> <td>-3.18e+04</td> <td>-1.06e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.190]</th>          <td>-2.661e+04</td> <td> 1.48e+04</td> <td>   -1.803</td> <td> 0.071</td> <td>-5.55e+04</td> <td> 2321.109</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.191]</th>          <td>-3036.3270</td> <td> 1.92e+04</td> <td>   -0.158</td> <td> 0.874</td> <td>-4.06e+04</td> <td> 3.45e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.192]</th>          <td> 6940.9690</td> <td> 9281.647</td> <td>    0.748</td> <td> 0.455</td> <td>-1.13e+04</td> <td> 2.51e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.193]</th>          <td>-9444.8116</td> <td> 1.05e+04</td> <td>   -0.902</td> <td> 0.367</td> <td>   -3e+04</td> <td> 1.11e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.194]</th>          <td> 2498.3312</td> <td> 1.35e+04</td> <td>    0.185</td> <td> 0.853</td> <td> -2.4e+04</td> <td>  2.9e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.195]</th>          <td> -2.03e+04</td> <td> 9595.165</td> <td>   -2.116</td> <td> 0.034</td> <td>-3.91e+04</td> <td>-1493.798</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.196]</th>          <td>-2753.6229</td> <td> 6585.461</td> <td>   -0.418</td> <td> 0.676</td> <td>-1.57e+04</td> <td> 1.02e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.197]</th>          <td>  1.33e+04</td> <td> 5757.604</td> <td>    2.311</td> <td> 0.021</td> <td> 2015.983</td> <td> 2.46e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.198]</th>          <td> 7328.9890</td> <td> 7484.437</td> <td>    0.979</td> <td> 0.328</td> <td>-7343.801</td> <td>  2.2e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.199]</th>          <td>-2.136e+04</td> <td> 8594.063</td> <td>   -2.485</td> <td> 0.013</td> <td>-3.82e+04</td> <td>-4510.853</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.200]</th>          <td>-7508.9207</td> <td> 3016.843</td> <td>   -2.489</td> <td> 0.013</td> <td>-1.34e+04</td> <td>-1594.581</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.201]</th>          <td>-2.737e+04</td> <td> 1.51e+04</td> <td>   -1.811</td> <td> 0.070</td> <td> -5.7e+04</td> <td> 2251.151</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.202]</th>          <td>-1237.8204</td> <td> 2.25e+04</td> <td>   -0.055</td> <td> 0.956</td> <td>-4.54e+04</td> <td> 4.29e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.203]</th>          <td>-6666.3212</td> <td> 1.53e+04</td> <td>   -0.435</td> <td> 0.664</td> <td>-3.67e+04</td> <td> 2.34e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.204]</th>          <td>-1.464e+04</td> <td> 9850.437</td> <td>   -1.486</td> <td> 0.137</td> <td>-3.39e+04</td> <td> 4674.099</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.205]</th>          <td>-1.706e+04</td> <td> 6442.944</td> <td>   -2.648</td> <td> 0.008</td> <td>-2.97e+04</td> <td>-4427.328</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.206]</th>          <td>-3.733e+04</td> <td> 1.51e+04</td> <td>   -2.465</td> <td> 0.014</td> <td> -6.7e+04</td> <td>-7640.473</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.209]</th>          <td> 6087.6907</td> <td> 1.35e+04</td> <td>    0.452</td> <td> 0.651</td> <td>-2.03e+04</td> <td> 3.25e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.210]</th>          <td>-2.578e+04</td> <td> 2.65e+04</td> <td>   -0.973</td> <td> 0.330</td> <td>-7.77e+04</td> <td> 2.61e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.211]</th>          <td>-1093.8388</td> <td> 7382.081</td> <td>   -0.148</td> <td> 0.882</td> <td>-1.56e+04</td> <td> 1.34e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.213]</th>          <td>-2.153e+04</td> <td> 2.35e+04</td> <td>   -0.916</td> <td> 0.360</td> <td>-6.76e+04</td> <td> 2.45e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.214]</th>          <td>-2.351e+04</td> <td> 1.27e+04</td> <td>   -1.858</td> <td> 0.063</td> <td>-4.83e+04</td> <td> 1299.507</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.215]</th>          <td> -1.66e+04</td> <td> 1.12e+04</td> <td>   -1.488</td> <td> 0.137</td> <td>-3.85e+04</td> <td> 5271.613</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.216]</th>          <td>-9052.8944</td> <td> 5337.794</td> <td>   -1.696</td> <td> 0.090</td> <td>-1.95e+04</td> <td> 1411.531</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.217]</th>          <td>-2.914e+04</td> <td> 9643.602</td> <td>   -3.021</td> <td> 0.003</td> <td> -4.8e+04</td> <td>-1.02e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.218]</th>          <td>-1.642e+04</td> <td> 1.66e+04</td> <td>   -0.987</td> <td> 0.324</td> <td> -4.9e+04</td> <td> 1.62e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.219]</th>          <td> -482.9429</td> <td> 8190.878</td> <td>   -0.059</td> <td> 0.953</td> <td>-1.65e+04</td> <td> 1.56e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.220]</th>          <td> 1.038e+04</td> <td> 1.11e+04</td> <td>    0.934</td> <td> 0.350</td> <td>-1.14e+04</td> <td> 3.22e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.221]</th>          <td> 7271.3058</td> <td> 1.15e+04</td> <td>    0.634</td> <td> 0.526</td> <td>-1.52e+04</td> <td> 2.97e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.222]</th>          <td>-1.622e+04</td> <td> 1.02e+04</td> <td>   -1.588</td> <td> 0.112</td> <td>-3.63e+04</td> <td> 3804.653</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.223]</th>          <td>-1.878e+04</td> <td> 5199.813</td> <td>   -3.612</td> <td> 0.000</td> <td> -2.9e+04</td> <td>-8586.505</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.224]</th>          <td>-9192.1466</td> <td> 1.45e+04</td> <td>   -0.636</td> <td> 0.525</td> <td>-3.75e+04</td> <td> 1.92e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.225]</th>          <td> 2641.2389</td> <td> 1.98e+04</td> <td>    0.134</td> <td> 0.894</td> <td>-3.61e+04</td> <td> 4.14e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.226]</th>          <td>-8830.2891</td> <td> 6639.675</td> <td>   -1.330</td> <td> 0.184</td> <td>-2.18e+04</td> <td> 4186.397</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.227]</th>          <td>-2.143e+04</td> <td> 1.09e+04</td> <td>   -1.970</td> <td> 0.049</td> <td>-4.28e+04</td> <td> -102.683</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.228]</th>          <td> 3.233e+04</td> <td> 1.71e+04</td> <td>    1.894</td> <td> 0.058</td> <td>-1135.703</td> <td> 6.58e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.229]</th>          <td>-1.428e+04</td> <td> 1.91e+04</td> <td>   -0.748</td> <td> 0.454</td> <td>-5.17e+04</td> <td> 2.31e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.230]</th>          <td> -1.28e+04</td> <td> 6264.355</td> <td>   -2.043</td> <td> 0.041</td> <td>-2.51e+04</td> <td> -517.493</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.231]</th>          <td>-8271.2748</td> <td> 7245.759</td> <td>   -1.142</td> <td> 0.254</td> <td>-2.25e+04</td> <td> 5933.602</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.232]</th>          <td>-2.299e+04</td> <td> 8519.159</td> <td>   -2.699</td> <td> 0.007</td> <td>-3.97e+04</td> <td>-6289.960</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.233]</th>          <td>-1.285e+04</td> <td> 8491.101</td> <td>   -1.513</td> <td> 0.130</td> <td>-2.95e+04</td> <td> 3796.614</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.234]</th>          <td>-1.735e+04</td> <td>  3.1e+04</td> <td>   -0.559</td> <td> 0.576</td> <td>-7.82e+04</td> <td> 4.35e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.235]</th>          <td>-1.766e+04</td> <td> 3.16e+04</td> <td>   -0.559</td> <td> 0.576</td> <td>-7.96e+04</td> <td> 4.43e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.236]</th>          <td>-1.217e+04</td> <td> 8349.230</td> <td>   -1.457</td> <td> 0.145</td> <td>-2.85e+04</td> <td> 4200.746</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.237]</th>          <td>-1.141e+04</td> <td> 4505.618</td> <td>   -2.533</td> <td> 0.011</td> <td>-2.02e+04</td> <td>-2581.176</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.238]</th>          <td>-1.613e+04</td> <td> 7139.990</td> <td>   -2.258</td> <td> 0.024</td> <td>-3.01e+04</td> <td>-2127.974</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.239]</th>          <td>-2.712e+04</td> <td> 2.14e+04</td> <td>   -1.266</td> <td> 0.206</td> <td>-6.91e+04</td> <td> 1.49e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.240]</th>          <td> 6490.6376</td> <td> 9154.156</td> <td>    0.709</td> <td> 0.478</td> <td>-1.15e+04</td> <td> 2.44e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.241]</th>          <td>-3359.7031</td> <td> 6189.659</td> <td>   -0.543</td> <td> 0.587</td> <td>-1.55e+04</td> <td> 8774.753</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.242]</th>          <td>-1.613e+04</td> <td> 1.27e+04</td> <td>   -1.272</td> <td> 0.203</td> <td> -4.1e+04</td> <td> 8724.775</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.243]</th>          <td>-1.788e+04</td> <td> 1.39e+04</td> <td>   -1.286</td> <td> 0.199</td> <td>-4.51e+04</td> <td> 9383.449</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.244]</th>          <td>-3.071e+04</td> <td> 1.43e+04</td> <td>   -2.150</td> <td> 0.032</td> <td>-5.87e+04</td> <td>-2703.321</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.245]</th>          <td>-8153.4624</td> <td> 1.35e+04</td> <td>   -0.603</td> <td> 0.547</td> <td>-3.47e+04</td> <td> 1.84e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.246]</th>          <td> 5281.9970</td> <td> 4036.138</td> <td>    1.309</td> <td> 0.191</td> <td>-2630.610</td> <td> 1.32e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.247]</th>          <td>-9765.4698</td> <td> 5639.622</td> <td>   -1.732</td> <td> 0.083</td> <td>-2.08e+04</td> <td> 1290.671</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.248]</th>          <td>  143.0204</td> <td> 8692.204</td> <td>    0.016</td> <td> 0.987</td> <td>-1.69e+04</td> <td> 1.72e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.249]</th>          <td>-1.476e+04</td> <td> 3.35e+04</td> <td>   -0.440</td> <td> 0.660</td> <td>-8.05e+04</td> <td>  5.1e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.250]</th>          <td> 1.616e+04</td> <td> 1.05e+04</td> <td>    1.541</td> <td> 0.123</td> <td>-4398.223</td> <td> 3.67e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.251]</th>          <td>-1.651e+04</td> <td> 9569.822</td> <td>   -1.726</td> <td> 0.084</td> <td>-3.53e+04</td> <td> 2247.701</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.252]</th>          <td> -1.57e+04</td> <td> 2.01e+04</td> <td>   -0.781</td> <td> 0.435</td> <td>-5.51e+04</td> <td> 2.37e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.253]</th>          <td>-1.801e+04</td> <td> 1.58e+04</td> <td>   -1.141</td> <td> 0.254</td> <td>-4.89e+04</td> <td> 1.29e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.254]</th>          <td>-5819.5313</td> <td> 1.24e+04</td> <td>   -0.470</td> <td> 0.638</td> <td>-3.01e+04</td> <td> 1.85e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.256]</th>          <td>-9352.6145</td> <td> 1.31e+04</td> <td>   -0.712</td> <td> 0.476</td> <td>-3.51e+04</td> <td> 1.64e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.257]</th>          <td>-1.474e+04</td> <td> 4650.454</td> <td>   -3.170</td> <td> 0.002</td> <td>-2.39e+04</td> <td>-5626.575</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.258]</th>          <td> -2.95e+04</td> <td> 1.86e+04</td> <td>   -1.587</td> <td> 0.113</td> <td> -6.6e+04</td> <td> 6945.417</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.259]</th>          <td> 5.662e+04</td> <td> 1.78e+04</td> <td>    3.176</td> <td> 0.002</td> <td> 2.17e+04</td> <td> 9.16e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.260]</th>          <td>-2.075e+04</td> <td> 1.42e+04</td> <td>   -1.461</td> <td> 0.144</td> <td>-4.86e+04</td> <td> 7093.704</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.261]</th>          <td>-1.214e+04</td> <td> 9508.704</td> <td>   -1.277</td> <td> 0.202</td> <td>-3.08e+04</td> <td> 6499.043</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.262]</th>          <td>-1.499e+04</td> <td> 3.16e+04</td> <td>   -0.474</td> <td> 0.635</td> <td>-7.69e+04</td> <td>  4.7e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.263]</th>          <td> 1.094e+04</td> <td> 1.25e+04</td> <td>    0.872</td> <td> 0.383</td> <td>-1.36e+04</td> <td> 3.55e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.264]</th>          <td>-2479.7477</td> <td> 1.18e+04</td> <td>   -0.210</td> <td> 0.834</td> <td>-2.57e+04</td> <td> 2.07e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.265]</th>          <td>-2.203e+04</td> <td> 1.05e+04</td> <td>   -2.105</td> <td> 0.035</td> <td>-4.25e+04</td> <td>-1517.160</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.266]</th>          <td> 6210.2882</td> <td> 3.35e+04</td> <td>    0.185</td> <td> 0.853</td> <td>-5.95e+04</td> <td> 7.19e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.267]</th>          <td>-1.138e+04</td> <td> 2.33e+04</td> <td>   -0.488</td> <td> 0.626</td> <td>-5.71e+04</td> <td> 3.44e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.268]</th>          <td>-2.097e+04</td> <td> 1.51e+04</td> <td>   -1.389</td> <td> 0.165</td> <td>-5.06e+04</td> <td> 8629.225</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.269]</th>          <td>-1.836e+04</td> <td> 7924.529</td> <td>   -2.317</td> <td> 0.021</td> <td>-3.39e+04</td> <td>-2824.110</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.270]</th>          <td>-1.361e+04</td> <td> 1.72e+04</td> <td>   -0.789</td> <td> 0.430</td> <td>-4.74e+04</td> <td> 2.02e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.271]</th>          <td>-1.204e+04</td> <td> 1.55e+04</td> <td>   -0.777</td> <td> 0.437</td> <td>-4.24e+04</td> <td> 1.84e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.272]</th>          <td>-1.485e+04</td> <td> 8880.399</td> <td>   -1.672</td> <td> 0.095</td> <td>-3.23e+04</td> <td> 2561.281</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.273]</th>          <td>-1.149e+04</td> <td> 2.63e+04</td> <td>   -0.438</td> <td> 0.662</td> <td> -6.3e+04</td> <td>    4e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.274]</th>          <td>-9891.3781</td> <td> 4694.196</td> <td>   -2.107</td> <td> 0.035</td> <td>-1.91e+04</td> <td> -688.687</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.275]</th>          <td>-5173.7930</td> <td> 1.15e+04</td> <td>   -0.449</td> <td> 0.653</td> <td>-2.77e+04</td> <td> 1.74e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.276]</th>          <td>-1.966e+04</td> <td> 1.66e+04</td> <td>   -1.182</td> <td> 0.237</td> <td>-5.22e+04</td> <td> 1.29e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.277]</th>          <td>-3.402e+04</td> <td> 2.86e+04</td> <td>   -1.188</td> <td> 0.235</td> <td>-9.01e+04</td> <td> 2.21e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.278]</th>          <td> 2322.2439</td> <td>  1.9e+04</td> <td>    0.122</td> <td> 0.903</td> <td>-3.49e+04</td> <td> 3.95e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.279]</th>          <td>-1.119e+04</td> <td> 1.84e+04</td> <td>   -0.609</td> <td> 0.543</td> <td>-4.72e+04</td> <td> 2.48e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.280]</th>          <td>-1.345e+04</td> <td> 6306.646</td> <td>   -2.133</td> <td> 0.033</td> <td>-2.58e+04</td> <td>-1085.930</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.281]</th>          <td>-8403.4354</td> <td> 2.99e+04</td> <td>   -0.281</td> <td> 0.778</td> <td>-6.69e+04</td> <td> 5.01e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.282]</th>          <td>-3681.0429</td> <td>  1.2e+04</td> <td>   -0.307</td> <td> 0.759</td> <td>-2.72e+04</td> <td> 1.99e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.283]</th>          <td>-5339.8789</td> <td> 9936.127</td> <td>   -0.537</td> <td> 0.591</td> <td>-2.48e+04</td> <td> 1.41e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.284]</th>          <td>-1.452e+04</td> <td> 8179.287</td> <td>   -1.775</td> <td> 0.076</td> <td>-3.06e+04</td> <td> 1519.240</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.285]</th>          <td> -3.43e+04</td> <td> 2.13e+04</td> <td>   -1.613</td> <td> 0.107</td> <td> -7.6e+04</td> <td> 7382.687</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.286]</th>          <td> 7684.0660</td> <td> 1.16e+04</td> <td>    0.664</td> <td> 0.507</td> <td> -1.5e+04</td> <td> 3.04e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.287]</th>          <td>-1.775e+04</td> <td> 5134.756</td> <td>   -3.456</td> <td> 0.001</td> <td>-2.78e+04</td> <td>-7680.041</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.288]</th>          <td> 2038.4699</td> <td> 1.76e+04</td> <td>    0.116</td> <td> 0.908</td> <td>-3.26e+04</td> <td> 3.66e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.289]</th>          <td>-8041.0146</td> <td> 1.11e+04</td> <td>   -0.726</td> <td> 0.468</td> <td>-2.97e+04</td> <td> 1.37e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.290]</th>          <td>-1.581e+04</td> <td> 7099.249</td> <td>   -2.227</td> <td> 0.026</td> <td>-2.97e+04</td> <td>-1889.232</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.291]</th>          <td>-7663.1814</td> <td> 1.35e+04</td> <td>   -0.567</td> <td> 0.571</td> <td>-3.42e+04</td> <td> 1.88e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.292]</th>          <td>-1.567e+04</td> <td> 7319.153</td> <td>   -2.141</td> <td> 0.032</td> <td>   -3e+04</td> <td>-1323.652</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.293]</th>          <td>-5825.2555</td> <td> 1.34e+04</td> <td>   -0.433</td> <td> 0.665</td> <td>-3.22e+04</td> <td> 2.05e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.294]</th>          <td> 1.947e+04</td> <td> 9840.528</td> <td>    1.978</td> <td> 0.048</td> <td>  177.105</td> <td> 3.88e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.295]</th>          <td> -1.75e+04</td> <td> 1.76e+04</td> <td>   -0.996</td> <td> 0.319</td> <td> -5.2e+04</td> <td>  1.7e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.296]</th>          <td>-1096.1249</td> <td>  1.8e+04</td> <td>   -0.061</td> <td> 0.951</td> <td>-3.64e+04</td> <td> 3.42e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.297]</th>          <td>-1.141e+04</td> <td> 4502.234</td> <td>   -2.535</td> <td> 0.011</td> <td>-2.02e+04</td> <td>-2586.102</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.298]</th>          <td>-8732.4700</td> <td> 2.87e+04</td> <td>   -0.304</td> <td> 0.761</td> <td> -6.5e+04</td> <td> 4.75e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.299]</th>          <td> -1.74e+04</td> <td> 2.99e+04</td> <td>   -0.583</td> <td> 0.560</td> <td>-7.59e+04</td> <td> 4.11e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.300]</th>          <td>-1.986e+04</td> <td> 1.04e+04</td> <td>   -1.907</td> <td> 0.057</td> <td>-4.03e+04</td> <td>  560.482</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.301]</th>          <td>-4.329e+04</td> <td> 3.24e+04</td> <td>   -1.336</td> <td> 0.182</td> <td>-1.07e+05</td> <td> 2.03e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.302]</th>          <td> 4581.0131</td> <td> 7593.047</td> <td>    0.603</td> <td> 0.546</td> <td>-1.03e+04</td> <td> 1.95e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.303]</th>          <td>-1.484e+04</td> <td> 7473.001</td> <td>   -1.985</td> <td> 0.047</td> <td>-2.95e+04</td> <td> -186.892</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.304]</th>          <td>-2.222e+04</td> <td> 8772.347</td> <td>   -2.533</td> <td> 0.011</td> <td>-3.94e+04</td> <td>-5022.926</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.305]</th>          <td>-2514.2672</td> <td> 7217.330</td> <td>   -0.348</td> <td> 0.728</td> <td>-1.67e+04</td> <td> 1.16e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.306]</th>          <td>-2.336e+04</td> <td> 1.99e+04</td> <td>   -1.174</td> <td> 0.240</td> <td>-6.24e+04</td> <td> 1.57e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.307]</th>          <td>-1.116e+04</td> <td> 9796.527</td> <td>   -1.139</td> <td> 0.255</td> <td>-3.04e+04</td> <td> 8045.695</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.308]</th>          <td> 8.973e+04</td> <td> 1.66e+04</td> <td>    5.411</td> <td> 0.000</td> <td> 5.72e+04</td> <td> 1.22e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.309]</th>          <td>-1.179e+04</td> <td> 5120.504</td> <td>   -2.302</td> <td> 0.021</td> <td>-2.18e+04</td> <td>-1747.726</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.310]</th>          <td>-1.268e+04</td> <td> 3.35e+04</td> <td>   -0.378</td> <td> 0.705</td> <td>-7.84e+04</td> <td> 5.31e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.311]</th>          <td>-1.624e+04</td> <td> 1.01e+04</td> <td>   -1.611</td> <td> 0.107</td> <td> -3.6e+04</td> <td> 3524.476</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.312]</th>          <td>-9191.1488</td> <td> 9873.286</td> <td>   -0.931</td> <td> 0.352</td> <td>-2.85e+04</td> <td> 1.02e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.313]</th>          <td>-1.765e+04</td> <td> 4.28e+04</td> <td>   -0.412</td> <td> 0.680</td> <td>-1.02e+05</td> <td> 6.63e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.314]</th>          <td>-1.793e+04</td> <td> 7170.454</td> <td>   -2.501</td> <td> 0.012</td> <td> -3.2e+04</td> <td>-3875.671</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.315]</th>          <td>  879.4379</td> <td> 1.04e+04</td> <td>    0.084</td> <td> 0.933</td> <td>-1.96e+04</td> <td> 2.13e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.316]</th>          <td>-5807.9640</td> <td> 6758.678</td> <td>   -0.859</td> <td> 0.390</td> <td>-1.91e+04</td> <td> 7442.020</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.317]</th>          <td> 1.794e+04</td> <td> 9335.924</td> <td>    1.922</td> <td> 0.055</td> <td> -362.354</td> <td> 3.62e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.318]</th>          <td>-4980.2142</td> <td> 8582.095</td> <td>   -0.580</td> <td> 0.562</td> <td>-2.18e+04</td> <td> 1.18e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.319]</th>          <td> 1051.3237</td> <td> 1.42e+04</td> <td>    0.074</td> <td> 0.941</td> <td>-2.68e+04</td> <td> 2.89e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.320]</th>          <td>-1.431e+04</td> <td>  1.5e+04</td> <td>   -0.951</td> <td> 0.341</td> <td>-4.38e+04</td> <td> 1.52e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.321]</th>          <td>-1.684e+04</td> <td> 6968.208</td> <td>   -2.416</td> <td> 0.016</td> <td>-3.05e+04</td> <td>-3176.799</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.322]</th>          <td> -406.6903</td> <td> 6523.846</td> <td>   -0.062</td> <td> 0.950</td> <td>-1.32e+04</td> <td> 1.24e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.323]</th>          <td>-1.853e+04</td> <td> 5726.625</td> <td>   -3.236</td> <td> 0.001</td> <td>-2.98e+04</td> <td>-7302.079</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.324]</th>          <td>-2501.1256</td> <td> 7866.013</td> <td>   -0.318</td> <td> 0.751</td> <td>-1.79e+04</td> <td> 1.29e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C(county)[T.325]</th>          <td>-1.951e+04</td> <td> 2.24e+04</td> <td>   -0.873</td> <td> 0.383</td> <td>-6.33e+04</td> <td> 2.43e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>has_college</th>               <td> 1.325e+04</td> <td>  742.630</td> <td>   17.843</td> <td> 0.000</td> <td> 1.18e+04</td> <td> 1.47e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>female</th>                    <td>-8657.2875</td> <td>  609.011</td> <td>  -14.215</td> <td> 0.000</td> <td>-9851.217</td> <td>-7463.358</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>2414.039</td> <th>  Durbin-Watson:     </th> <td>   1.981</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th>  <td> 0.000</td>  <th>  Jarque-Bera (JB):  </th> <td>22245.534</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>           <td> 1.945</td>  <th>  Prob(JB):          </th> <td>    0.00</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>       <td>12.242</td>  <th>  Cond. No.          </th> <td>    198.</td> \n",
       "</tr>\n",
       "</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified."
      ],
      "text/latex": [
       "\\begin{center}\n",
       "\\begin{tabular}{lclc}\n",
       "\\toprule\n",
       "\\textbf{Dep. Variable:}             & annual\\_earnings & \\textbf{  R-squared:         } &     0.238   \\\\\n",
       "\\textbf{Model:}                     &       WLS        & \\textbf{  Adj. R-squared:    } &     0.188   \\\\\n",
       "\\textbf{Method:}                    &  Least Squares   & \\textbf{  F-statistic:       } &     4.786   \\\\\n",
       "\\textbf{Date:}                      & Mon, 08 Apr 2024 & \\textbf{  Prob (F-statistic):} & 1.62e-132   \\\\\n",
       "\\textbf{Time:}                      &     20:00:31     & \\textbf{  Log-Likelihood:    } &   -61189.   \\\\\n",
       "\\textbf{No. Observations:}          &        5310      & \\textbf{  AIC:               } & 1.230e+05   \\\\\n",
       "\\textbf{Df Residuals:}              &        4984      & \\textbf{  BIC:               } & 1.252e+05   \\\\\n",
       "\\textbf{Df Model:}                  &         325      & \\textbf{                     } &             \\\\\n",
       "\\textbf{Covariance Type:}           &    nonrobust     & \\textbf{                     } &             \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "\\begin{tabular}{lcccccc}\n",
       "                                    & \\textbf{coef} & \\textbf{std err} & \\textbf{t} & \\textbf{P$> |$t$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n",
       "\\midrule\n",
       "\\textbf{Intercept}                  &    4.761e+04  &     2429.505     &    19.595  &         0.000        &     4.28e+04    &     5.24e+04     \\\\\n",
       "\\textbf{C(simplified\\_race)[T.1.0]} &   -8344.9150  &     1067.331     &    -7.818  &         0.000        &    -1.04e+04    &    -6252.476     \\\\\n",
       "\\textbf{C(simplified\\_race)[T.2.0]} &   -6753.9175  &     1140.523     &    -5.922  &         0.000        &    -8989.844    &    -4517.991     \\\\\n",
       "\\textbf{C(simplified\\_race)[T.3.0]} &   -3220.6308  &     1202.997     &    -2.677  &         0.007        &    -5579.035    &     -862.227     \\\\\n",
       "\\textbf{C(discretized\\_age)[T.3]}   &    8584.0505  &      868.037     &     9.889  &         0.000        &     6882.316    &     1.03e+04     \\\\\n",
       "\\textbf{C(discretized\\_age)[T.4]}   &    1.251e+04  &      923.078     &    13.558  &         0.000        &     1.07e+04    &     1.43e+04     \\\\\n",
       "\\textbf{C(discretized\\_age)[T.5]}   &    1.266e+04  &      964.214     &    13.131  &         0.000        &     1.08e+04    &     1.46e+04     \\\\\n",
       "\\textbf{C(discretized\\_age)[T.6]}   &    9235.0616  &     1189.062     &     7.767  &         0.000        &     6903.976    &     1.16e+04     \\\\\n",
       "\\textbf{C(discretized\\_age)[T.7]}   &    1.347e+04  &     2975.342     &     4.528  &         0.000        &     7639.580    &     1.93e+04     \\\\\n",
       "\\textbf{C(county)[T.1]}             &   -1.114e+04  &     3231.653     &    -3.446  &         0.001        &    -1.75e+04    &    -4799.550     \\\\\n",
       "\\textbf{C(county)[T.2]}             &   -1.279e+04  &     3245.734     &    -3.942  &         0.000        &    -1.92e+04    &    -6430.115     \\\\\n",
       "\\textbf{C(county)[T.3]}             &   -9142.9921  &     1.19e+04     &    -0.771  &         0.441        &    -3.24e+04    &     1.41e+04     \\\\\n",
       "\\textbf{C(county)[T.4]}             &   -6471.4363  &     2990.234     &    -2.164  &         0.030        &    -1.23e+04    &     -609.261     \\\\\n",
       "\\textbf{C(county)[T.5]}             &   -6378.3577  &     4178.131     &    -1.527  &         0.127        &    -1.46e+04    &     1812.617     \\\\\n",
       "\\textbf{C(county)[T.6]}             &   -1.627e+04  &     1.04e+04     &    -1.566  &         0.118        &    -3.66e+04    &     4103.579     \\\\\n",
       "\\textbf{C(county)[T.7]}             &   -1.023e+04  &     3835.754     &    -2.666  &         0.008        &    -1.77e+04    &    -2706.649     \\\\\n",
       "\\textbf{C(county)[T.8]}             &   -1.153e+04  &     3175.916     &    -3.629  &         0.000        &    -1.78e+04    &    -5300.388     \\\\\n",
       "\\textbf{C(county)[T.9]}             &   -1.382e+04  &     5130.249     &    -2.694  &         0.007        &    -2.39e+04    &    -3762.096     \\\\\n",
       "\\textbf{C(county)[T.10]}            &   -1.501e+04  &     3427.926     &    -4.380  &         0.000        &    -2.17e+04    &    -8293.693     \\\\\n",
       "\\textbf{C(county)[T.11]}            &   -1.418e+04  &     3040.008     &    -4.664  &         0.000        &    -2.01e+04    &    -8218.173     \\\\\n",
       "\\textbf{C(county)[T.12]}            &   -6849.3954  &     3121.285     &    -2.194  &         0.028        &     -1.3e+04    &     -730.303     \\\\\n",
       "\\textbf{C(county)[T.13]}            &   -1.381e+04  &     3368.446     &    -4.101  &         0.000        &    -2.04e+04    &    -7209.235     \\\\\n",
       "\\textbf{C(county)[T.14]}            &   -1.369e+04  &     3918.748     &    -3.493  &         0.000        &    -2.14e+04    &    -6007.378     \\\\\n",
       "\\textbf{C(county)[T.15]}            &   -9190.4689  &     4799.618     &    -1.915  &         0.056        &    -1.86e+04    &      218.895     \\\\\n",
       "\\textbf{C(county)[T.16]}            &   -1.061e+04  &     3616.372     &    -2.935  &         0.003        &    -1.77e+04    &    -3523.982     \\\\\n",
       "\\textbf{C(county)[T.17]}            &   -1.601e+04  &     7731.556     &    -2.070  &         0.038        &    -3.12e+04    &     -848.909     \\\\\n",
       "\\textbf{C(county)[T.18]}            &   -1788.7046  &     4787.690     &    -0.374  &         0.709        &    -1.12e+04    &     7597.275     \\\\\n",
       "\\textbf{C(county)[T.19]}            &   -1.684e+04  &     6555.900     &    -2.569  &         0.010        &    -2.97e+04    &    -3989.067     \\\\\n",
       "\\textbf{C(county)[T.20]}            &     -1.4e+04  &     4328.098     &    -3.235  &         0.001        &    -2.25e+04    &    -5515.772     \\\\\n",
       "\\textbf{C(county)[T.21]}            &   -6184.3776  &     3595.547     &    -1.720  &         0.085        &    -1.32e+04    &      864.476     \\\\\n",
       "\\textbf{C(county)[T.22]}            &   -1.826e+04  &     3694.928     &    -4.941  &         0.000        &    -2.55e+04    &     -1.1e+04     \\\\\n",
       "\\textbf{C(county)[T.23]}            &   -1.242e+04  &     3244.837     &    -3.828  &         0.000        &    -1.88e+04    &    -6059.940     \\\\\n",
       "\\textbf{C(county)[T.24]}            &   -1.104e+04  &     3171.193     &    -3.482  &         0.001        &    -1.73e+04    &    -4824.300     \\\\\n",
       "\\textbf{C(county)[T.25]}            &   -1.506e+04  &     3496.105     &    -4.309  &         0.000        &    -2.19e+04    &    -8211.049     \\\\\n",
       "\\textbf{C(county)[T.26]}            &   -1.391e+04  &     3137.745     &    -4.432  &         0.000        &    -2.01e+04    &    -7755.819     \\\\\n",
       "\\textbf{C(county)[T.27]}            &   -1.337e+04  &     3345.523     &    -3.997  &         0.000        &    -1.99e+04    &    -6814.638     \\\\\n",
       "\\textbf{C(county)[T.28]}            &   -1.297e+04  &     5671.204     &    -2.287  &         0.022        &    -2.41e+04    &    -1853.870     \\\\\n",
       "\\textbf{C(county)[T.29]}            &   -4845.0790  &     5203.125     &    -0.931  &         0.352        &     -1.5e+04    &     5355.335     \\\\\n",
       "\\textbf{C(county)[T.30]}            &   -2248.8602  &     5067.398     &    -0.444  &         0.657        &    -1.22e+04    &     7685.469     \\\\\n",
       "\\textbf{C(county)[T.31]}            &   -1.155e+04  &     4710.979     &    -2.452  &         0.014        &    -2.08e+04    &    -2313.897     \\\\\n",
       "\\textbf{C(county)[T.32]}            &   -7114.5598  &     3632.908     &    -1.958  &         0.050        &    -1.42e+04    &        7.538     \\\\\n",
       "\\textbf{C(county)[T.33]}            &   -1.272e+04  &     3067.035     &    -4.149  &         0.000        &    -1.87e+04    &    -6711.354     \\\\\n",
       "\\textbf{C(county)[T.34]}            &    -1.32e+04  &     3443.339     &    -3.833  &         0.000        &    -1.99e+04    &    -6447.428     \\\\\n",
       "\\textbf{C(county)[T.35]}            &   -9324.2429  &     3384.603     &    -2.755  &         0.006        &     -1.6e+04    &    -2688.932     \\\\\n",
       "\\textbf{C(county)[T.36]}            &   -1.505e+04  &     3658.198     &    -4.115  &         0.000        &    -2.22e+04    &    -7881.001     \\\\\n",
       "\\textbf{C(county)[T.37]}            &   -1.023e+04  &     3762.247     &    -2.720  &         0.007        &    -1.76e+04    &    -2856.766     \\\\\n",
       "\\textbf{C(county)[T.38]}            &   -1.308e+04  &     3310.408     &    -3.951  &         0.000        &    -1.96e+04    &    -6590.153     \\\\\n",
       "\\textbf{C(county)[T.39]}            &   -1.177e+04  &     3252.230     &    -3.618  &         0.000        &    -1.81e+04    &    -5391.513     \\\\\n",
       "\\textbf{C(county)[T.40]}            &   -1.516e+04  &     3677.299     &    -4.123  &         0.000        &    -2.24e+04    &    -7954.028     \\\\\n",
       "\\textbf{C(county)[T.41]}            &   -9224.6049  &     2690.524     &    -3.429  &         0.001        &    -1.45e+04    &    -3949.994     \\\\\n",
       "\\textbf{C(county)[T.42]}            &   -1.365e+04  &     3460.095     &    -3.944  &         0.000        &    -2.04e+04    &    -6864.991     \\\\\n",
       "\\textbf{C(county)[T.43]}            &   -1.165e+04  &     3698.161     &    -3.151  &         0.002        &    -1.89e+04    &    -4404.402     \\\\\n",
       "\\textbf{C(county)[T.44]}            &    -1.07e+04  &     2961.782     &    -3.611  &         0.000        &    -1.65e+04    &    -4889.799     \\\\\n",
       "\\textbf{C(county)[T.45]}            &   -7052.4496  &     3127.876     &    -2.255  &         0.024        &    -1.32e+04    &     -920.437     \\\\\n",
       "\\textbf{C(county)[T.46]}            &   -9064.0230  &     3380.497     &    -2.681  &         0.007        &    -1.57e+04    &    -2436.761     \\\\\n",
       "\\textbf{C(county)[T.47]}            &   -1.681e+04  &     3013.844     &    -5.579  &         0.000        &    -2.27e+04    &    -1.09e+04     \\\\\n",
       "\\textbf{C(county)[T.48]}            &   -8897.8731  &     3296.249     &    -2.699  &         0.007        &    -1.54e+04    &    -2435.774     \\\\\n",
       "\\textbf{C(county)[T.49]}            &    2.125e+04  &     7993.324     &     2.659  &         0.008        &     5580.256    &     3.69e+04     \\\\\n",
       "\\textbf{C(county)[T.50]}            &   -2.251e+04  &     1.13e+04     &    -1.997  &         0.046        &    -4.46e+04    &     -409.459     \\\\\n",
       "\\textbf{C(county)[T.51]}            &   -5880.2544  &     3452.043     &    -1.703  &         0.089        &    -1.26e+04    &      887.270     \\\\\n",
       "\\textbf{C(county)[T.52]}            &   -1.006e+04  &     8297.064     &    -1.213  &         0.225        &    -2.63e+04    &     6201.302     \\\\\n",
       "\\textbf{C(county)[T.53]}            &   -7396.8710  &     1.97e+04     &    -0.376  &         0.707        &    -4.59e+04    &     3.12e+04     \\\\\n",
       "\\textbf{C(county)[T.54]}            &   -1.349e+04  &     8853.843     &    -1.524  &         0.128        &    -3.08e+04    &     3865.030     \\\\\n",
       "\\textbf{C(county)[T.55]}            &    6016.8132  &     9691.581     &     0.621  &         0.535        &     -1.3e+04    &      2.5e+04     \\\\\n",
       "\\textbf{C(county)[T.56]}            &   -7435.2407  &     7281.280     &    -1.021  &         0.307        &    -2.17e+04    &     6839.272     \\\\\n",
       "\\textbf{C(county)[T.57]}            &    8434.9441  &      1.4e+04     &     0.604  &         0.546        &    -1.89e+04    &     3.58e+04     \\\\\n",
       "\\textbf{C(county)[T.58]}            &   -5918.5652  &     5278.657     &    -1.121  &         0.262        &    -1.63e+04    &     4429.925     \\\\\n",
       "\\textbf{C(county)[T.59]}            &   -1.631e+04  &     9894.838     &    -1.649  &         0.099        &    -3.57e+04    &     3086.114     \\\\\n",
       "\\textbf{C(county)[T.60]}            &   -1.499e+04  &     6719.761     &    -2.231  &         0.026        &    -2.82e+04    &    -1819.273     \\\\\n",
       "\\textbf{C(county)[T.61]}            &   -8015.9218  &     1.09e+04     &    -0.732  &         0.464        &    -2.95e+04    &     1.34e+04     \\\\\n",
       "\\textbf{C(county)[T.62]}            &    1.171e+04  &     1.32e+04     &     0.884  &         0.377        &    -1.43e+04    &     3.77e+04     \\\\\n",
       "\\textbf{C(county)[T.63]}            &   -1.124e+04  &     8626.461     &    -1.303  &         0.193        &    -2.82e+04    &     5671.473     \\\\\n",
       "\\textbf{C(county)[T.64]}            &     1.57e+04  &     8596.970     &     1.826  &         0.068        &    -1156.314    &     3.26e+04     \\\\\n",
       "\\textbf{C(county)[T.65]}            &   -1.964e+04  &     9254.939     &    -2.122  &         0.034        &    -3.78e+04    &    -1498.590     \\\\\n",
       "\\textbf{C(county)[T.66]}            &   -2.286e+04  &     1.47e+04     &    -1.550  &         0.121        &    -5.18e+04    &     6046.864     \\\\\n",
       "\\textbf{C(county)[T.67]}            &   -1.286e+04  &     2.97e+04     &    -0.434  &         0.664        &     -7.1e+04    &     4.53e+04     \\\\\n",
       "\\textbf{C(county)[T.68]}            &     265.8046  &     9594.437     &     0.028  &         0.978        &    -1.85e+04    &     1.91e+04     \\\\\n",
       "\\textbf{C(county)[T.69]}            &   -1.382e+04  &     9042.247     &    -1.528  &         0.127        &    -3.15e+04    &     3909.886     \\\\\n",
       "\\textbf{C(county)[T.70]}            &   -2.086e+04  &     1.33e+04     &    -1.567  &         0.117        &     -4.7e+04    &     5231.063     \\\\\n",
       "\\textbf{C(county)[T.71]}            &   -1.914e+04  &     8999.435     &    -2.127  &         0.033        &    -3.68e+04    &    -1501.949     \\\\\n",
       "\\textbf{C(county)[T.72]}            &    1.203e+04  &     1.91e+04     &     0.630  &         0.528        &    -2.54e+04    &     4.95e+04     \\\\\n",
       "\\textbf{C(county)[T.73]}            &   -4151.5319  &     5648.737     &    -0.735  &         0.462        &    -1.52e+04    &     6922.479     \\\\\n",
       "\\textbf{C(county)[T.74]}            &   -1.341e+04  &     7534.403     &    -1.780  &         0.075        &    -2.82e+04    &     1357.560     \\\\\n",
       "\\textbf{C(county)[T.75]}            &   -1.719e+04  &     3924.766     &    -4.381  &         0.000        &    -2.49e+04    &    -9500.690     \\\\\n",
       "\\textbf{C(county)[T.76]}            &   -3.746e+04  &     2.62e+04     &    -1.430  &         0.153        &    -8.88e+04    &     1.39e+04     \\\\\n",
       "\\textbf{C(county)[T.77]}            &     237.8624  &     6897.951     &     0.034  &         0.972        &    -1.33e+04    &     1.38e+04     \\\\\n",
       "\\textbf{C(county)[T.78]}            &    6770.8989  &     2.24e+04     &     0.302  &         0.763        &    -3.72e+04    &     5.07e+04     \\\\\n",
       "\\textbf{C(county)[T.79]}            &    4.146e+04  &     8462.736     &     4.899  &         0.000        &     2.49e+04    &      5.8e+04     \\\\\n",
       "\\textbf{C(county)[T.80]}            &   -1.741e+04  &     5589.953     &    -3.115  &         0.002        &    -2.84e+04    &    -6454.909     \\\\\n",
       "\\textbf{C(county)[T.81]}            &   -1.143e+04  &     5721.800     &    -1.998  &         0.046        &    -2.27e+04    &     -216.304     \\\\\n",
       "\\textbf{C(county)[T.82]}            &   -1.658e+04  &     1.61e+04     &    -1.032  &         0.302        &    -4.81e+04    &     1.49e+04     \\\\\n",
       "\\textbf{C(county)[T.83]}            &   -2.307e+04  &     1.25e+04     &    -1.840  &         0.066        &    -4.77e+04    &     1514.953     \\\\\n",
       "\\textbf{C(county)[T.84]}            &   -8999.9730  &     1.22e+04     &    -0.740  &         0.459        &    -3.28e+04    &     1.48e+04     \\\\\n",
       "\\textbf{C(county)[T.85]}            &    3419.8384  &     9046.856     &     0.378  &         0.705        &    -1.43e+04    &     2.12e+04     \\\\\n",
       "\\textbf{C(county)[T.86]}            &    1.824e+04  &     1.43e+04     &     1.279  &         0.201        &    -9720.390    &     4.62e+04     \\\\\n",
       "\\textbf{C(county)[T.87]}            &   -2.403e+04  &     1.09e+04     &    -2.205  &         0.027        &    -4.54e+04    &    -2667.316     \\\\\n",
       "\\textbf{C(county)[T.88]}            &   -1.326e+04  &     1.74e+04     &    -0.763  &         0.445        &    -4.73e+04    &     2.08e+04     \\\\\n",
       "\\textbf{C(county)[T.89]}            &   -1.574e+04  &     8531.472     &    -1.845  &         0.065        &    -3.25e+04    &      985.816     \\\\\n",
       "\\textbf{C(county)[T.90]}            &   -8870.8793  &     4968.614     &    -1.785  &         0.074        &    -1.86e+04    &      869.791     \\\\\n",
       "\\textbf{C(county)[T.91]}            &    -1.04e+04  &     9791.880     &    -1.062  &         0.288        &    -2.96e+04    &     8799.744     \\\\\n",
       "\\textbf{C(county)[T.92]}            &   -1.687e+04  &     1.17e+04     &    -1.441  &         0.150        &    -3.98e+04    &     6076.622     \\\\\n",
       "\\textbf{C(county)[T.93]}            &   -4593.8182  &     9052.966     &    -0.507  &         0.612        &    -2.23e+04    &     1.32e+04     \\\\\n",
       "\\textbf{C(county)[T.94]}            &     -66.5470  &     9761.637     &    -0.007  &         0.995        &    -1.92e+04    &     1.91e+04     \\\\\n",
       "\\textbf{C(county)[T.95]}            &   -1.199e+04  &     5085.007     &    -2.357  &         0.018        &     -2.2e+04    &    -2017.441     \\\\\n",
       "\\textbf{C(county)[T.96]}            &    -1.27e+04  &     1.03e+04     &    -1.228  &         0.219        &     -3.3e+04    &     7572.284     \\\\\n",
       "\\textbf{C(county)[T.97]}            &   -2.457e+04  &     9432.408     &    -2.605  &         0.009        &    -4.31e+04    &    -6080.404     \\\\\n",
       "\\textbf{C(county)[T.98]}            &    2197.3011  &     1.53e+04     &     0.144  &         0.886        &    -2.78e+04    &     3.22e+04     \\\\\n",
       "\\textbf{C(county)[T.99]}            &   -9289.2093  &     3098.282     &    -2.998  &         0.003        &    -1.54e+04    &    -3215.213     \\\\\n",
       "\\textbf{C(county)[T.100]}           &    1.121e+04  &     7876.656     &     1.423  &         0.155        &    -4235.032    &     2.66e+04     \\\\\n",
       "\\textbf{C(county)[T.101]}           &   -1.684e+04  &     9598.189     &    -1.754  &         0.079        &    -3.57e+04    &     1979.720     \\\\\n",
       "\\textbf{C(county)[T.102]}           &   -2597.8743  &     1.35e+04     &    -0.192  &         0.847        &    -2.91e+04    &     2.39e+04     \\\\\n",
       "\\textbf{C(county)[T.103]}           &   -1.014e+04  &     9066.754     &    -1.118  &         0.264        &    -2.79e+04    &     7638.542     \\\\\n",
       "\\textbf{C(county)[T.104]}           &    -252.2631  &     1.16e+04     &    -0.022  &         0.983        &     -2.3e+04    &     2.25e+04     \\\\\n",
       "\\textbf{C(county)[T.105]}           &   -1.145e+04  &      1.3e+04     &    -0.880  &         0.379        &     -3.7e+04    &     1.41e+04     \\\\\n",
       "\\textbf{C(county)[T.106]}           &   -3.539e+04  &     3.35e+04     &    -1.055  &         0.291        &    -1.01e+05    &     3.03e+04     \\\\\n",
       "\\textbf{C(county)[T.107]}           &   -3.364e+04  &     1.71e+04     &    -1.962  &         0.050        &    -6.72e+04    &      -29.720     \\\\\n",
       "\\textbf{C(county)[T.109]}           &   -4795.8027  &     8034.001     &    -0.597  &         0.551        &    -2.05e+04    &      1.1e+04     \\\\\n",
       "\\textbf{C(county)[T.110]}           &   -8716.5745  &     1.06e+04     &    -0.822  &         0.411        &    -2.95e+04    &     1.21e+04     \\\\\n",
       "\\textbf{C(county)[T.111]}           &   -1.946e+04  &     2.19e+04     &    -0.889  &         0.374        &    -6.24e+04    &     2.35e+04     \\\\\n",
       "\\textbf{C(county)[T.112]}           &   -7351.2007  &     1.42e+04     &    -0.516  &         0.606        &    -3.53e+04    &     2.06e+04     \\\\\n",
       "\\textbf{C(county)[T.113]}           &   -2.293e+04  &      2.6e+04     &    -0.882  &         0.378        &    -7.39e+04    &      2.8e+04     \\\\\n",
       "\\textbf{C(county)[T.114]}           &   -1.908e+04  &     1.61e+04     &    -1.185  &         0.236        &    -5.07e+04    &     1.25e+04     \\\\\n",
       "\\textbf{C(county)[T.115]}           &   -2798.0105  &        1e+04     &    -0.280  &         0.780        &    -2.24e+04    &     1.68e+04     \\\\\n",
       "\\textbf{C(county)[T.116]}           &   -8785.2988  &     1.35e+04     &    -0.650  &         0.516        &    -3.53e+04    &     1.77e+04     \\\\\n",
       "\\textbf{C(county)[T.117]}           &   -2.473e+04  &     4.28e+04     &    -0.577  &         0.564        &    -1.09e+05    &     5.92e+04     \\\\\n",
       "\\textbf{C(county)[T.118]}           &   -1.698e+04  &      1.1e+04     &    -1.538  &         0.124        &    -3.86e+04    &     4669.861     \\\\\n",
       "\\textbf{C(county)[T.120]}           &   -1.704e+04  &     1.32e+04     &    -1.287  &         0.198        &     -4.3e+04    &     8908.447     \\\\\n",
       "\\textbf{C(county)[T.121]}           &   -2.767e+04  &     1.32e+04     &    -2.093  &         0.036        &    -5.36e+04    &    -1747.007     \\\\\n",
       "\\textbf{C(county)[T.123]}           &   -1.291e+04  &     5091.347     &    -2.536  &         0.011        &    -2.29e+04    &    -2931.559     \\\\\n",
       "\\textbf{C(county)[T.124]}           &   -3.209e+04  &        1e+04     &    -3.197  &         0.001        &    -5.18e+04    &    -1.24e+04     \\\\\n",
       "\\textbf{C(county)[T.125]}           &   -1.795e+04  &     1.25e+04     &    -1.440  &         0.150        &    -4.24e+04    &     6490.095     \\\\\n",
       "\\textbf{C(county)[T.126]}           &   -6948.1460  &     9793.690     &    -0.709  &         0.478        &    -2.61e+04    &     1.23e+04     \\\\\n",
       "\\textbf{C(county)[T.127]}           &   -4111.7736  &     9598.180     &    -0.428  &         0.668        &    -2.29e+04    &     1.47e+04     \\\\\n",
       "\\textbf{C(county)[T.128]}           &   -1.407e+04  &     3.35e+04     &    -0.420  &         0.675        &    -7.98e+04    &     5.17e+04     \\\\\n",
       "\\textbf{C(county)[T.129]}           &   -1.338e+04  &     1.22e+04     &    -1.094  &         0.274        &    -3.73e+04    &     1.06e+04     \\\\\n",
       "\\textbf{C(county)[T.130]}           &   -2.958e+04  &     1.24e+04     &    -2.379  &         0.017        &     -5.4e+04    &    -5205.688     \\\\\n",
       "\\textbf{C(county)[T.131]}           &   -9462.1890  &     2.13e+04     &    -0.445  &         0.656        &    -5.11e+04    &     3.22e+04     \\\\\n",
       "\\textbf{C(county)[T.132]}           &   -7889.2394  &     5638.330     &    -1.399  &         0.162        &    -1.89e+04    &     3164.369     \\\\\n",
       "\\textbf{C(county)[T.133]}           &    2175.4884  &     1.51e+04     &     0.144  &         0.886        &    -2.75e+04    &     3.18e+04     \\\\\n",
       "\\textbf{C(county)[T.134]}           &    5.467e+04  &      1.8e+04     &     3.045  &         0.002        &     1.95e+04    &     8.99e+04     \\\\\n",
       "\\textbf{C(county)[T.135]}           &   -2.083e+04  &     1.38e+04     &    -1.509  &         0.131        &    -4.79e+04    &     6228.141     \\\\\n",
       "\\textbf{C(county)[T.136]}           &   -4420.8608  &     5997.620     &    -0.737  &         0.461        &    -1.62e+04    &     7337.113     \\\\\n",
       "\\textbf{C(county)[T.137]}           &   -4087.2387  &     8100.626     &    -0.505  &         0.614        &       -2e+04    &     1.18e+04     \\\\\n",
       "\\textbf{C(county)[T.138]}           &   -7939.1789  &     8029.739     &    -0.989  &         0.323        &    -2.37e+04    &     7802.643     \\\\\n",
       "\\textbf{C(county)[T.139]}           &    -692.3178  &     1.02e+04     &    -0.068  &         0.946        &    -2.08e+04    &     1.94e+04     \\\\\n",
       "\\textbf{C(county)[T.140]}           &   -1.651e+04  &     1.37e+04     &    -1.202  &         0.229        &    -4.34e+04    &     1.04e+04     \\\\\n",
       "\\textbf{C(county)[T.141]}           &   -8251.4595  &     1.22e+04     &    -0.676  &         0.499        &    -3.22e+04    &     1.57e+04     \\\\\n",
       "\\textbf{C(county)[T.142]}           &   -1373.8309  &     2.13e+04     &    -0.065  &         0.948        &     -4.3e+04    &     4.03e+04     \\\\\n",
       "\\textbf{C(county)[T.143]}           &   -5545.8845  &     5862.828     &    -0.946  &         0.344        &     -1.7e+04    &     5947.838     \\\\\n",
       "\\textbf{C(county)[T.144]}           &   -4.741e+04  &     2.12e+04     &    -2.232  &         0.026        &    -8.91e+04    &    -5771.921     \\\\\n",
       "\\textbf{C(county)[T.145]}           &   -9556.0440  &     3.47e+04     &    -0.276  &         0.783        &    -7.75e+04    &     5.84e+04     \\\\\n",
       "\\textbf{C(county)[T.146]}           &   -1.903e+04  &     1.59e+04     &    -1.196  &         0.232        &    -5.02e+04    &     1.22e+04     \\\\\n",
       "\\textbf{C(county)[T.147]}           &     -2.8e+04  &     1.52e+04     &    -1.848  &         0.065        &    -5.77e+04    &     1707.239     \\\\\n",
       "\\textbf{C(county)[T.148]}           &   -2.012e+04  &     1.76e+04     &    -1.146  &         0.252        &    -5.45e+04    &     1.43e+04     \\\\\n",
       "\\textbf{C(county)[T.149]}           &   -1.012e+04  &     4824.670     &    -2.097  &         0.036        &    -1.96e+04    &     -657.758     \\\\\n",
       "\\textbf{C(county)[T.150]}           &   -2.052e+04  &     3.35e+04     &    -0.612  &         0.541        &    -8.63e+04    &     4.52e+04     \\\\\n",
       "\\textbf{C(county)[T.151]}           &   -2.235e+04  &     1.13e+04     &    -1.974  &         0.048        &    -4.45e+04    &     -157.867     \\\\\n",
       "\\textbf{C(county)[T.152]}           &   -1.249e+04  &     7332.914     &    -1.703  &         0.089        &    -2.69e+04    &     1887.273     \\\\\n",
       "\\textbf{C(county)[T.153]}           &   -1.074e+04  &     2.99e+04     &    -0.360  &         0.719        &    -6.93e+04    &     4.78e+04     \\\\\n",
       "\\textbf{C(county)[T.155]}           &   -1.174e+04  &     1.32e+04     &    -0.892  &         0.373        &    -3.75e+04    &     1.41e+04     \\\\\n",
       "\\textbf{C(county)[T.157]}           &   -2.379e+04  &     1.34e+04     &    -1.777  &         0.076        &       -5e+04    &     2454.505     \\\\\n",
       "\\textbf{C(county)[T.158]}           &    -3.57e+04  &     1.24e+04     &    -2.878  &         0.004        &       -6e+04    &    -1.14e+04     \\\\\n",
       "\\textbf{C(county)[T.159]}           &   -3961.2072  &     2.67e+04     &    -0.149  &         0.882        &    -5.62e+04    &     4.83e+04     \\\\\n",
       "\\textbf{C(county)[T.160]}           &   -1.811e+04  &     8356.451     &    -2.167  &         0.030        &    -3.45e+04    &    -1729.232     \\\\\n",
       "\\textbf{C(county)[T.161]}           &    6091.1910  &     8574.294     &     0.710  &         0.477        &    -1.07e+04    &     2.29e+04     \\\\\n",
       "\\textbf{C(county)[T.162]}           &    9087.0830  &     1.55e+04     &     0.586  &         0.558        &    -2.13e+04    &     3.95e+04     \\\\\n",
       "\\textbf{C(county)[T.163]}           &   -2.133e+04  &     2.02e+04     &    -1.054  &         0.292        &     -6.1e+04    &     1.84e+04     \\\\\n",
       "\\textbf{C(county)[T.164]}           &   -2.283e+04  &     1.51e+04     &    -1.511  &         0.131        &    -5.24e+04    &     6795.581     \\\\\n",
       "\\textbf{C(county)[T.165]}           &    -2.21e+04  &     2.13e+04     &    -1.037  &         0.300        &    -6.39e+04    &     1.97e+04     \\\\\n",
       "\\textbf{C(county)[T.166]}           &   -1.551e+04  &     9441.670     &    -1.642  &         0.101        &     -3.4e+04    &     3002.990     \\\\\n",
       "\\textbf{C(county)[T.167]}           &   -3.947e+04  &     3.24e+04     &    -1.218  &         0.223        &    -1.03e+05    &     2.41e+04     \\\\\n",
       "\\textbf{C(county)[T.168]}           &    1.007e+04  &     7103.076     &     1.417  &         0.156        &    -3857.374    &      2.4e+04     \\\\\n",
       "\\textbf{C(county)[T.169]}           &    1.283e+04  &     1.14e+04     &     1.121  &         0.262        &    -9600.934    &     3.53e+04     \\\\\n",
       "\\textbf{C(county)[T.170]}           &   -1.615e+04  &      1.4e+04     &    -1.150  &         0.250        &    -4.37e+04    &     1.14e+04     \\\\\n",
       "\\textbf{C(county)[T.171]}           &    2.365e+04  &     7177.844     &     3.295  &         0.001        &     9576.024    &     3.77e+04     \\\\\n",
       "\\textbf{C(county)[T.172]}           &   -3.626e+04  &     3.24e+04     &    -1.119  &         0.263        &    -9.98e+04    &     2.73e+04     \\\\\n",
       "\\textbf{C(county)[T.173]}           &   -2.629e+04  &     2.38e+04     &    -1.106  &         0.269        &    -7.29e+04    &     2.03e+04     \\\\\n",
       "\\textbf{C(county)[T.174]}           &   -2.314e+04  &     1.59e+04     &    -1.458  &         0.145        &    -5.43e+04    &     7983.357     \\\\\n",
       "\\textbf{C(county)[T.176]}           &   -8331.5679  &     1.76e+04     &    -0.472  &         0.637        &    -4.29e+04    &     2.62e+04     \\\\\n",
       "\\textbf{C(county)[T.177]}           &   -7787.9729  &     6943.898     &    -1.122  &         0.262        &    -2.14e+04    &     5825.123     \\\\\n",
       "\\textbf{C(county)[T.178]}           &   -8426.9047  &     9527.061     &    -0.885  &         0.376        &    -2.71e+04    &     1.03e+04     \\\\\n",
       "\\textbf{C(county)[T.179]}           &    5061.4958  &     9108.387     &     0.556  &         0.578        &    -1.28e+04    &     2.29e+04     \\\\\n",
       "\\textbf{C(county)[T.180]}           &   -9156.0300  &     7253.999     &    -1.262  &         0.207        &    -2.34e+04    &     5065.000     \\\\\n",
       "\\textbf{C(county)[T.181]}           &   -6042.8525  &     1.16e+04     &    -0.522  &         0.602        &    -2.87e+04    &     1.67e+04     \\\\\n",
       "\\textbf{C(county)[T.182]}           &     -1.6e+04  &     8180.157     &    -1.956  &         0.051        &     -3.2e+04    &       40.230     \\\\\n",
       "\\textbf{C(county)[T.183]}           &    1688.4654  &     4051.315     &     0.417  &         0.677        &    -6253.894    &     9630.825     \\\\\n",
       "\\textbf{C(county)[T.184]}           &   -1.566e+04  &     3739.789     &    -4.189  &         0.000        &     -2.3e+04    &    -8333.281     \\\\\n",
       "\\textbf{C(county)[T.185]}           &   -1.158e+04  &      1.5e+04     &    -0.769  &         0.442        &    -4.11e+04    &     1.79e+04     \\\\\n",
       "\\textbf{C(county)[T.186]}           &   -1.279e+04  &     1.07e+04     &    -1.198  &         0.231        &    -3.37e+04    &     8134.088     \\\\\n",
       "\\textbf{C(county)[T.187]}           &   -6652.3137  &     8781.097     &    -0.758  &         0.449        &    -2.39e+04    &     1.06e+04     \\\\\n",
       "\\textbf{C(county)[T.188]}           &   -1.083e+04  &     3548.268     &    -3.053  &         0.002        &    -1.78e+04    &    -3878.254     \\\\\n",
       "\\textbf{C(county)[T.189]}           &   -2.122e+04  &     5407.161     &    -3.925  &         0.000        &    -3.18e+04    &    -1.06e+04     \\\\\n",
       "\\textbf{C(county)[T.190]}           &   -2.661e+04  &     1.48e+04     &    -1.803  &         0.071        &    -5.55e+04    &     2321.109     \\\\\n",
       "\\textbf{C(county)[T.191]}           &   -3036.3270  &     1.92e+04     &    -0.158  &         0.874        &    -4.06e+04    &     3.45e+04     \\\\\n",
       "\\textbf{C(county)[T.192]}           &    6940.9690  &     9281.647     &     0.748  &         0.455        &    -1.13e+04    &     2.51e+04     \\\\\n",
       "\\textbf{C(county)[T.193]}           &   -9444.8116  &     1.05e+04     &    -0.902  &         0.367        &       -3e+04    &     1.11e+04     \\\\\n",
       "\\textbf{C(county)[T.194]}           &    2498.3312  &     1.35e+04     &     0.185  &         0.853        &     -2.4e+04    &      2.9e+04     \\\\\n",
       "\\textbf{C(county)[T.195]}           &    -2.03e+04  &     9595.165     &    -2.116  &         0.034        &    -3.91e+04    &    -1493.798     \\\\\n",
       "\\textbf{C(county)[T.196]}           &   -2753.6229  &     6585.461     &    -0.418  &         0.676        &    -1.57e+04    &     1.02e+04     \\\\\n",
       "\\textbf{C(county)[T.197]}           &     1.33e+04  &     5757.604     &     2.311  &         0.021        &     2015.983    &     2.46e+04     \\\\\n",
       "\\textbf{C(county)[T.198]}           &    7328.9890  &     7484.437     &     0.979  &         0.328        &    -7343.801    &      2.2e+04     \\\\\n",
       "\\textbf{C(county)[T.199]}           &   -2.136e+04  &     8594.063     &    -2.485  &         0.013        &    -3.82e+04    &    -4510.853     \\\\\n",
       "\\textbf{C(county)[T.200]}           &   -7508.9207  &     3016.843     &    -2.489  &         0.013        &    -1.34e+04    &    -1594.581     \\\\\n",
       "\\textbf{C(county)[T.201]}           &   -2.737e+04  &     1.51e+04     &    -1.811  &         0.070        &     -5.7e+04    &     2251.151     \\\\\n",
       "\\textbf{C(county)[T.202]}           &   -1237.8204  &     2.25e+04     &    -0.055  &         0.956        &    -4.54e+04    &     4.29e+04     \\\\\n",
       "\\textbf{C(county)[T.203]}           &   -6666.3212  &     1.53e+04     &    -0.435  &         0.664        &    -3.67e+04    &     2.34e+04     \\\\\n",
       "\\textbf{C(county)[T.204]}           &   -1.464e+04  &     9850.437     &    -1.486  &         0.137        &    -3.39e+04    &     4674.099     \\\\\n",
       "\\textbf{C(county)[T.205]}           &   -1.706e+04  &     6442.944     &    -2.648  &         0.008        &    -2.97e+04    &    -4427.328     \\\\\n",
       "\\textbf{C(county)[T.206]}           &   -3.733e+04  &     1.51e+04     &    -2.465  &         0.014        &     -6.7e+04    &    -7640.473     \\\\\n",
       "\\textbf{C(county)[T.209]}           &    6087.6907  &     1.35e+04     &     0.452  &         0.651        &    -2.03e+04    &     3.25e+04     \\\\\n",
       "\\textbf{C(county)[T.210]}           &   -2.578e+04  &     2.65e+04     &    -0.973  &         0.330        &    -7.77e+04    &     2.61e+04     \\\\\n",
       "\\textbf{C(county)[T.211]}           &   -1093.8388  &     7382.081     &    -0.148  &         0.882        &    -1.56e+04    &     1.34e+04     \\\\\n",
       "\\textbf{C(county)[T.213]}           &   -2.153e+04  &     2.35e+04     &    -0.916  &         0.360        &    -6.76e+04    &     2.45e+04     \\\\\n",
       "\\textbf{C(county)[T.214]}           &   -2.351e+04  &     1.27e+04     &    -1.858  &         0.063        &    -4.83e+04    &     1299.507     \\\\\n",
       "\\textbf{C(county)[T.215]}           &    -1.66e+04  &     1.12e+04     &    -1.488  &         0.137        &    -3.85e+04    &     5271.613     \\\\\n",
       "\\textbf{C(county)[T.216]}           &   -9052.8944  &     5337.794     &    -1.696  &         0.090        &    -1.95e+04    &     1411.531     \\\\\n",
       "\\textbf{C(county)[T.217]}           &   -2.914e+04  &     9643.602     &    -3.021  &         0.003        &     -4.8e+04    &    -1.02e+04     \\\\\n",
       "\\textbf{C(county)[T.218]}           &   -1.642e+04  &     1.66e+04     &    -0.987  &         0.324        &     -4.9e+04    &     1.62e+04     \\\\\n",
       "\\textbf{C(county)[T.219]}           &    -482.9429  &     8190.878     &    -0.059  &         0.953        &    -1.65e+04    &     1.56e+04     \\\\\n",
       "\\textbf{C(county)[T.220]}           &    1.038e+04  &     1.11e+04     &     0.934  &         0.350        &    -1.14e+04    &     3.22e+04     \\\\\n",
       "\\textbf{C(county)[T.221]}           &    7271.3058  &     1.15e+04     &     0.634  &         0.526        &    -1.52e+04    &     2.97e+04     \\\\\n",
       "\\textbf{C(county)[T.222]}           &   -1.622e+04  &     1.02e+04     &    -1.588  &         0.112        &    -3.63e+04    &     3804.653     \\\\\n",
       "\\textbf{C(county)[T.223]}           &   -1.878e+04  &     5199.813     &    -3.612  &         0.000        &     -2.9e+04    &    -8586.505     \\\\\n",
       "\\textbf{C(county)[T.224]}           &   -9192.1466  &     1.45e+04     &    -0.636  &         0.525        &    -3.75e+04    &     1.92e+04     \\\\\n",
       "\\textbf{C(county)[T.225]}           &    2641.2389  &     1.98e+04     &     0.134  &         0.894        &    -3.61e+04    &     4.14e+04     \\\\\n",
       "\\textbf{C(county)[T.226]}           &   -8830.2891  &     6639.675     &    -1.330  &         0.184        &    -2.18e+04    &     4186.397     \\\\\n",
       "\\textbf{C(county)[T.227]}           &   -2.143e+04  &     1.09e+04     &    -1.970  &         0.049        &    -4.28e+04    &     -102.683     \\\\\n",
       "\\textbf{C(county)[T.228]}           &    3.233e+04  &     1.71e+04     &     1.894  &         0.058        &    -1135.703    &     6.58e+04     \\\\\n",
       "\\textbf{C(county)[T.229]}           &   -1.428e+04  &     1.91e+04     &    -0.748  &         0.454        &    -5.17e+04    &     2.31e+04     \\\\\n",
       "\\textbf{C(county)[T.230]}           &    -1.28e+04  &     6264.355     &    -2.043  &         0.041        &    -2.51e+04    &     -517.493     \\\\\n",
       "\\textbf{C(county)[T.231]}           &   -8271.2748  &     7245.759     &    -1.142  &         0.254        &    -2.25e+04    &     5933.602     \\\\\n",
       "\\textbf{C(county)[T.232]}           &   -2.299e+04  &     8519.159     &    -2.699  &         0.007        &    -3.97e+04    &    -6289.960     \\\\\n",
       "\\textbf{C(county)[T.233]}           &   -1.285e+04  &     8491.101     &    -1.513  &         0.130        &    -2.95e+04    &     3796.614     \\\\\n",
       "\\textbf{C(county)[T.234]}           &   -1.735e+04  &      3.1e+04     &    -0.559  &         0.576        &    -7.82e+04    &     4.35e+04     \\\\\n",
       "\\textbf{C(county)[T.235]}           &   -1.766e+04  &     3.16e+04     &    -0.559  &         0.576        &    -7.96e+04    &     4.43e+04     \\\\\n",
       "\\textbf{C(county)[T.236]}           &   -1.217e+04  &     8349.230     &    -1.457  &         0.145        &    -2.85e+04    &     4200.746     \\\\\n",
       "\\textbf{C(county)[T.237]}           &   -1.141e+04  &     4505.618     &    -2.533  &         0.011        &    -2.02e+04    &    -2581.176     \\\\\n",
       "\\textbf{C(county)[T.238]}           &   -1.613e+04  &     7139.990     &    -2.258  &         0.024        &    -3.01e+04    &    -2127.974     \\\\\n",
       "\\textbf{C(county)[T.239]}           &   -2.712e+04  &     2.14e+04     &    -1.266  &         0.206        &    -6.91e+04    &     1.49e+04     \\\\\n",
       "\\textbf{C(county)[T.240]}           &    6490.6376  &     9154.156     &     0.709  &         0.478        &    -1.15e+04    &     2.44e+04     \\\\\n",
       "\\textbf{C(county)[T.241]}           &   -3359.7031  &     6189.659     &    -0.543  &         0.587        &    -1.55e+04    &     8774.753     \\\\\n",
       "\\textbf{C(county)[T.242]}           &   -1.613e+04  &     1.27e+04     &    -1.272  &         0.203        &     -4.1e+04    &     8724.775     \\\\\n",
       "\\textbf{C(county)[T.243]}           &   -1.788e+04  &     1.39e+04     &    -1.286  &         0.199        &    -4.51e+04    &     9383.449     \\\\\n",
       "\\textbf{C(county)[T.244]}           &   -3.071e+04  &     1.43e+04     &    -2.150  &         0.032        &    -5.87e+04    &    -2703.321     \\\\\n",
       "\\textbf{C(county)[T.245]}           &   -8153.4624  &     1.35e+04     &    -0.603  &         0.547        &    -3.47e+04    &     1.84e+04     \\\\\n",
       "\\textbf{C(county)[T.246]}           &    5281.9970  &     4036.138     &     1.309  &         0.191        &    -2630.610    &     1.32e+04     \\\\\n",
       "\\textbf{C(county)[T.247]}           &   -9765.4698  &     5639.622     &    -1.732  &         0.083        &    -2.08e+04    &     1290.671     \\\\\n",
       "\\textbf{C(county)[T.248]}           &     143.0204  &     8692.204     &     0.016  &         0.987        &    -1.69e+04    &     1.72e+04     \\\\\n",
       "\\textbf{C(county)[T.249]}           &   -1.476e+04  &     3.35e+04     &    -0.440  &         0.660        &    -8.05e+04    &      5.1e+04     \\\\\n",
       "\\textbf{C(county)[T.250]}           &    1.616e+04  &     1.05e+04     &     1.541  &         0.123        &    -4398.223    &     3.67e+04     \\\\\n",
       "\\textbf{C(county)[T.251]}           &   -1.651e+04  &     9569.822     &    -1.726  &         0.084        &    -3.53e+04    &     2247.701     \\\\\n",
       "\\textbf{C(county)[T.252]}           &    -1.57e+04  &     2.01e+04     &    -0.781  &         0.435        &    -5.51e+04    &     2.37e+04     \\\\\n",
       "\\textbf{C(county)[T.253]}           &   -1.801e+04  &     1.58e+04     &    -1.141  &         0.254        &    -4.89e+04    &     1.29e+04     \\\\\n",
       "\\textbf{C(county)[T.254]}           &   -5819.5313  &     1.24e+04     &    -0.470  &         0.638        &    -3.01e+04    &     1.85e+04     \\\\\n",
       "\\textbf{C(county)[T.256]}           &   -9352.6145  &     1.31e+04     &    -0.712  &         0.476        &    -3.51e+04    &     1.64e+04     \\\\\n",
       "\\textbf{C(county)[T.257]}           &   -1.474e+04  &     4650.454     &    -3.170  &         0.002        &    -2.39e+04    &    -5626.575     \\\\\n",
       "\\textbf{C(county)[T.258]}           &    -2.95e+04  &     1.86e+04     &    -1.587  &         0.113        &     -6.6e+04    &     6945.417     \\\\\n",
       "\\textbf{C(county)[T.259]}           &    5.662e+04  &     1.78e+04     &     3.176  &         0.002        &     2.17e+04    &     9.16e+04     \\\\\n",
       "\\textbf{C(county)[T.260]}           &   -2.075e+04  &     1.42e+04     &    -1.461  &         0.144        &    -4.86e+04    &     7093.704     \\\\\n",
       "\\textbf{C(county)[T.261]}           &   -1.214e+04  &     9508.704     &    -1.277  &         0.202        &    -3.08e+04    &     6499.043     \\\\\n",
       "\\textbf{C(county)[T.262]}           &   -1.499e+04  &     3.16e+04     &    -0.474  &         0.635        &    -7.69e+04    &      4.7e+04     \\\\\n",
       "\\textbf{C(county)[T.263]}           &    1.094e+04  &     1.25e+04     &     0.872  &         0.383        &    -1.36e+04    &     3.55e+04     \\\\\n",
       "\\textbf{C(county)[T.264]}           &   -2479.7477  &     1.18e+04     &    -0.210  &         0.834        &    -2.57e+04    &     2.07e+04     \\\\\n",
       "\\textbf{C(county)[T.265]}           &   -2.203e+04  &     1.05e+04     &    -2.105  &         0.035        &    -4.25e+04    &    -1517.160     \\\\\n",
       "\\textbf{C(county)[T.266]}           &    6210.2882  &     3.35e+04     &     0.185  &         0.853        &    -5.95e+04    &     7.19e+04     \\\\\n",
       "\\textbf{C(county)[T.267]}           &   -1.138e+04  &     2.33e+04     &    -0.488  &         0.626        &    -5.71e+04    &     3.44e+04     \\\\\n",
       "\\textbf{C(county)[T.268]}           &   -2.097e+04  &     1.51e+04     &    -1.389  &         0.165        &    -5.06e+04    &     8629.225     \\\\\n",
       "\\textbf{C(county)[T.269]}           &   -1.836e+04  &     7924.529     &    -2.317  &         0.021        &    -3.39e+04    &    -2824.110     \\\\\n",
       "\\textbf{C(county)[T.270]}           &   -1.361e+04  &     1.72e+04     &    -0.789  &         0.430        &    -4.74e+04    &     2.02e+04     \\\\\n",
       "\\textbf{C(county)[T.271]}           &   -1.204e+04  &     1.55e+04     &    -0.777  &         0.437        &    -4.24e+04    &     1.84e+04     \\\\\n",
       "\\textbf{C(county)[T.272]}           &   -1.485e+04  &     8880.399     &    -1.672  &         0.095        &    -3.23e+04    &     2561.281     \\\\\n",
       "\\textbf{C(county)[T.273]}           &   -1.149e+04  &     2.63e+04     &    -0.438  &         0.662        &     -6.3e+04    &        4e+04     \\\\\n",
       "\\textbf{C(county)[T.274]}           &   -9891.3781  &     4694.196     &    -2.107  &         0.035        &    -1.91e+04    &     -688.687     \\\\\n",
       "\\textbf{C(county)[T.275]}           &   -5173.7930  &     1.15e+04     &    -0.449  &         0.653        &    -2.77e+04    &     1.74e+04     \\\\\n",
       "\\textbf{C(county)[T.276]}           &   -1.966e+04  &     1.66e+04     &    -1.182  &         0.237        &    -5.22e+04    &     1.29e+04     \\\\\n",
       "\\textbf{C(county)[T.277]}           &   -3.402e+04  &     2.86e+04     &    -1.188  &         0.235        &    -9.01e+04    &     2.21e+04     \\\\\n",
       "\\textbf{C(county)[T.278]}           &    2322.2439  &      1.9e+04     &     0.122  &         0.903        &    -3.49e+04    &     3.95e+04     \\\\\n",
       "\\textbf{C(county)[T.279]}           &   -1.119e+04  &     1.84e+04     &    -0.609  &         0.543        &    -4.72e+04    &     2.48e+04     \\\\\n",
       "\\textbf{C(county)[T.280]}           &   -1.345e+04  &     6306.646     &    -2.133  &         0.033        &    -2.58e+04    &    -1085.930     \\\\\n",
       "\\textbf{C(county)[T.281]}           &   -8403.4354  &     2.99e+04     &    -0.281  &         0.778        &    -6.69e+04    &     5.01e+04     \\\\\n",
       "\\textbf{C(county)[T.282]}           &   -3681.0429  &      1.2e+04     &    -0.307  &         0.759        &    -2.72e+04    &     1.99e+04     \\\\\n",
       "\\textbf{C(county)[T.283]}           &   -5339.8789  &     9936.127     &    -0.537  &         0.591        &    -2.48e+04    &     1.41e+04     \\\\\n",
       "\\textbf{C(county)[T.284]}           &   -1.452e+04  &     8179.287     &    -1.775  &         0.076        &    -3.06e+04    &     1519.240     \\\\\n",
       "\\textbf{C(county)[T.285]}           &    -3.43e+04  &     2.13e+04     &    -1.613  &         0.107        &     -7.6e+04    &     7382.687     \\\\\n",
       "\\textbf{C(county)[T.286]}           &    7684.0660  &     1.16e+04     &     0.664  &         0.507        &     -1.5e+04    &     3.04e+04     \\\\\n",
       "\\textbf{C(county)[T.287]}           &   -1.775e+04  &     5134.756     &    -3.456  &         0.001        &    -2.78e+04    &    -7680.041     \\\\\n",
       "\\textbf{C(county)[T.288]}           &    2038.4699  &     1.76e+04     &     0.116  &         0.908        &    -3.26e+04    &     3.66e+04     \\\\\n",
       "\\textbf{C(county)[T.289]}           &   -8041.0146  &     1.11e+04     &    -0.726  &         0.468        &    -2.97e+04    &     1.37e+04     \\\\\n",
       "\\textbf{C(county)[T.290]}           &   -1.581e+04  &     7099.249     &    -2.227  &         0.026        &    -2.97e+04    &    -1889.232     \\\\\n",
       "\\textbf{C(county)[T.291]}           &   -7663.1814  &     1.35e+04     &    -0.567  &         0.571        &    -3.42e+04    &     1.88e+04     \\\\\n",
       "\\textbf{C(county)[T.292]}           &   -1.567e+04  &     7319.153     &    -2.141  &         0.032        &       -3e+04    &    -1323.652     \\\\\n",
       "\\textbf{C(county)[T.293]}           &   -5825.2555  &     1.34e+04     &    -0.433  &         0.665        &    -3.22e+04    &     2.05e+04     \\\\\n",
       "\\textbf{C(county)[T.294]}           &    1.947e+04  &     9840.528     &     1.978  &         0.048        &      177.105    &     3.88e+04     \\\\\n",
       "\\textbf{C(county)[T.295]}           &    -1.75e+04  &     1.76e+04     &    -0.996  &         0.319        &     -5.2e+04    &      1.7e+04     \\\\\n",
       "\\textbf{C(county)[T.296]}           &   -1096.1249  &      1.8e+04     &    -0.061  &         0.951        &    -3.64e+04    &     3.42e+04     \\\\\n",
       "\\textbf{C(county)[T.297]}           &   -1.141e+04  &     4502.234     &    -2.535  &         0.011        &    -2.02e+04    &    -2586.102     \\\\\n",
       "\\textbf{C(county)[T.298]}           &   -8732.4700  &     2.87e+04     &    -0.304  &         0.761        &     -6.5e+04    &     4.75e+04     \\\\\n",
       "\\textbf{C(county)[T.299]}           &    -1.74e+04  &     2.99e+04     &    -0.583  &         0.560        &    -7.59e+04    &     4.11e+04     \\\\\n",
       "\\textbf{C(county)[T.300]}           &   -1.986e+04  &     1.04e+04     &    -1.907  &         0.057        &    -4.03e+04    &      560.482     \\\\\n",
       "\\textbf{C(county)[T.301]}           &   -4.329e+04  &     3.24e+04     &    -1.336  &         0.182        &    -1.07e+05    &     2.03e+04     \\\\\n",
       "\\textbf{C(county)[T.302]}           &    4581.0131  &     7593.047     &     0.603  &         0.546        &    -1.03e+04    &     1.95e+04     \\\\\n",
       "\\textbf{C(county)[T.303]}           &   -1.484e+04  &     7473.001     &    -1.985  &         0.047        &    -2.95e+04    &     -186.892     \\\\\n",
       "\\textbf{C(county)[T.304]}           &   -2.222e+04  &     8772.347     &    -2.533  &         0.011        &    -3.94e+04    &    -5022.926     \\\\\n",
       "\\textbf{C(county)[T.305]}           &   -2514.2672  &     7217.330     &    -0.348  &         0.728        &    -1.67e+04    &     1.16e+04     \\\\\n",
       "\\textbf{C(county)[T.306]}           &   -2.336e+04  &     1.99e+04     &    -1.174  &         0.240        &    -6.24e+04    &     1.57e+04     \\\\\n",
       "\\textbf{C(county)[T.307]}           &   -1.116e+04  &     9796.527     &    -1.139  &         0.255        &    -3.04e+04    &     8045.695     \\\\\n",
       "\\textbf{C(county)[T.308]}           &    8.973e+04  &     1.66e+04     &     5.411  &         0.000        &     5.72e+04    &     1.22e+05     \\\\\n",
       "\\textbf{C(county)[T.309]}           &   -1.179e+04  &     5120.504     &    -2.302  &         0.021        &    -2.18e+04    &    -1747.726     \\\\\n",
       "\\textbf{C(county)[T.310]}           &   -1.268e+04  &     3.35e+04     &    -0.378  &         0.705        &    -7.84e+04    &     5.31e+04     \\\\\n",
       "\\textbf{C(county)[T.311]}           &   -1.624e+04  &     1.01e+04     &    -1.611  &         0.107        &     -3.6e+04    &     3524.476     \\\\\n",
       "\\textbf{C(county)[T.312]}           &   -9191.1488  &     9873.286     &    -0.931  &         0.352        &    -2.85e+04    &     1.02e+04     \\\\\n",
       "\\textbf{C(county)[T.313]}           &   -1.765e+04  &     4.28e+04     &    -0.412  &         0.680        &    -1.02e+05    &     6.63e+04     \\\\\n",
       "\\textbf{C(county)[T.314]}           &   -1.793e+04  &     7170.454     &    -2.501  &         0.012        &     -3.2e+04    &    -3875.671     \\\\\n",
       "\\textbf{C(county)[T.315]}           &     879.4379  &     1.04e+04     &     0.084  &         0.933        &    -1.96e+04    &     2.13e+04     \\\\\n",
       "\\textbf{C(county)[T.316]}           &   -5807.9640  &     6758.678     &    -0.859  &         0.390        &    -1.91e+04    &     7442.020     \\\\\n",
       "\\textbf{C(county)[T.317]}           &    1.794e+04  &     9335.924     &     1.922  &         0.055        &     -362.354    &     3.62e+04     \\\\\n",
       "\\textbf{C(county)[T.318]}           &   -4980.2142  &     8582.095     &    -0.580  &         0.562        &    -2.18e+04    &     1.18e+04     \\\\\n",
       "\\textbf{C(county)[T.319]}           &    1051.3237  &     1.42e+04     &     0.074  &         0.941        &    -2.68e+04    &     2.89e+04     \\\\\n",
       "\\textbf{C(county)[T.320]}           &   -1.431e+04  &      1.5e+04     &    -0.951  &         0.341        &    -4.38e+04    &     1.52e+04     \\\\\n",
       "\\textbf{C(county)[T.321]}           &   -1.684e+04  &     6968.208     &    -2.416  &         0.016        &    -3.05e+04    &    -3176.799     \\\\\n",
       "\\textbf{C(county)[T.322]}           &    -406.6903  &     6523.846     &    -0.062  &         0.950        &    -1.32e+04    &     1.24e+04     \\\\\n",
       "\\textbf{C(county)[T.323]}           &   -1.853e+04  &     5726.625     &    -3.236  &         0.001        &    -2.98e+04    &    -7302.079     \\\\\n",
       "\\textbf{C(county)[T.324]}           &   -2501.1256  &     7866.013     &    -0.318  &         0.751        &    -1.79e+04    &     1.29e+04     \\\\\n",
       "\\textbf{C(county)[T.325]}           &   -1.951e+04  &     2.24e+04     &    -0.873  &         0.383        &    -6.33e+04    &     2.43e+04     \\\\\n",
       "\\textbf{has\\_college}               &    1.325e+04  &      742.630     &    17.843  &         0.000        &     1.18e+04    &     1.47e+04     \\\\\n",
       "\\textbf{female}                     &   -8657.2875  &      609.011     &   -14.215  &         0.000        &    -9851.217    &    -7463.358     \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "\\begin{tabular}{lclc}\n",
       "\\textbf{Omnibus:}       & 2414.039 & \\textbf{  Durbin-Watson:     } &     1.981  \\\\\n",
       "\\textbf{Prob(Omnibus):} &   0.000  & \\textbf{  Jarque-Bera (JB):  } & 22245.534  \\\\\n",
       "\\textbf{Skew:}          &   1.945  & \\textbf{  Prob(JB):          } &      0.00  \\\\\n",
       "\\textbf{Kurtosis:}      &  12.242  & \\textbf{  Cond. No.          } &      198.  \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "%\\caption{WLS Regression Results}\n",
       "\\end{center}\n",
       "\n",
       "Notes: \\newline\n",
       " [1] Standard Errors assume that the covariance matrix of the errors is correctly specified."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            WLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:        annual_earnings   R-squared:                       0.238\n",
       "Model:                            WLS   Adj. R-squared:                  0.188\n",
       "Method:                 Least Squares   F-statistic:                     4.786\n",
       "Date:                Mon, 08 Apr 2024   Prob (F-statistic):          1.62e-132\n",
       "Time:                        20:00:31   Log-Likelihood:                -61189.\n",
       "No. Observations:                5310   AIC:                         1.230e+05\n",
       "Df Residuals:                    4984   BIC:                         1.252e+05\n",
       "Df Model:                         325                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "=============================================================================================\n",
       "                                coef    std err          t      P>|t|      [0.025      0.975]\n",
       "---------------------------------------------------------------------------------------------\n",
       "Intercept                  4.761e+04   2429.505     19.595      0.000    4.28e+04    5.24e+04\n",
       "C(simplified_race)[T.1.0] -8344.9150   1067.331     -7.818      0.000   -1.04e+04   -6252.476\n",
       "C(simplified_race)[T.2.0] -6753.9175   1140.523     -5.922      0.000   -8989.844   -4517.991\n",
       "C(simplified_race)[T.3.0] -3220.6308   1202.997     -2.677      0.007   -5579.035    -862.227\n",
       "C(discretized_age)[T.3]    8584.0505    868.037      9.889      0.000    6882.316    1.03e+04\n",
       "C(discretized_age)[T.4]    1.251e+04    923.078     13.558      0.000    1.07e+04    1.43e+04\n",
       "C(discretized_age)[T.5]    1.266e+04    964.214     13.131      0.000    1.08e+04    1.46e+04\n",
       "C(discretized_age)[T.6]    9235.0616   1189.062      7.767      0.000    6903.976    1.16e+04\n",
       "C(discretized_age)[T.7]    1.347e+04   2975.342      4.528      0.000    7639.580    1.93e+04\n",
       "C(county)[T.1]            -1.114e+04   3231.653     -3.446      0.001   -1.75e+04   -4799.550\n",
       "C(county)[T.2]            -1.279e+04   3245.734     -3.942      0.000   -1.92e+04   -6430.115\n",
       "C(county)[T.3]            -9142.9921   1.19e+04     -0.771      0.441   -3.24e+04    1.41e+04\n",
       "C(county)[T.4]            -6471.4363   2990.234     -2.164      0.030   -1.23e+04    -609.261\n",
       "C(county)[T.5]            -6378.3577   4178.131     -1.527      0.127   -1.46e+04    1812.617\n",
       "C(county)[T.6]            -1.627e+04   1.04e+04     -1.566      0.118   -3.66e+04    4103.579\n",
       "C(county)[T.7]            -1.023e+04   3835.754     -2.666      0.008   -1.77e+04   -2706.649\n",
       "C(county)[T.8]            -1.153e+04   3175.916     -3.629      0.000   -1.78e+04   -5300.388\n",
       "C(county)[T.9]            -1.382e+04   5130.249     -2.694      0.007   -2.39e+04   -3762.096\n",
       "C(county)[T.10]           -1.501e+04   3427.926     -4.380      0.000   -2.17e+04   -8293.693\n",
       "C(county)[T.11]           -1.418e+04   3040.008     -4.664      0.000   -2.01e+04   -8218.173\n",
       "C(county)[T.12]           -6849.3954   3121.285     -2.194      0.028    -1.3e+04    -730.303\n",
       "C(county)[T.13]           -1.381e+04   3368.446     -4.101      0.000   -2.04e+04   -7209.235\n",
       "C(county)[T.14]           -1.369e+04   3918.748     -3.493      0.000   -2.14e+04   -6007.378\n",
       "C(county)[T.15]           -9190.4689   4799.618     -1.915      0.056   -1.86e+04     218.895\n",
       "C(county)[T.16]           -1.061e+04   3616.372     -2.935      0.003   -1.77e+04   -3523.982\n",
       "C(county)[T.17]           -1.601e+04   7731.556     -2.070      0.038   -3.12e+04    -848.909\n",
       "C(county)[T.18]           -1788.7046   4787.690     -0.374      0.709   -1.12e+04    7597.275\n",
       "C(county)[T.19]           -1.684e+04   6555.900     -2.569      0.010   -2.97e+04   -3989.067\n",
       "C(county)[T.20]             -1.4e+04   4328.098     -3.235      0.001   -2.25e+04   -5515.772\n",
       "C(county)[T.21]           -6184.3776   3595.547     -1.720      0.085   -1.32e+04     864.476\n",
       "C(county)[T.22]           -1.826e+04   3694.928     -4.941      0.000   -2.55e+04    -1.1e+04\n",
       "C(county)[T.23]           -1.242e+04   3244.837     -3.828      0.000   -1.88e+04   -6059.940\n",
       "C(county)[T.24]           -1.104e+04   3171.193     -3.482      0.001   -1.73e+04   -4824.300\n",
       "C(county)[T.25]           -1.506e+04   3496.105     -4.309      0.000   -2.19e+04   -8211.049\n",
       "C(county)[T.26]           -1.391e+04   3137.745     -4.432      0.000   -2.01e+04   -7755.819\n",
       "C(county)[T.27]           -1.337e+04   3345.523     -3.997      0.000   -1.99e+04   -6814.638\n",
       "C(county)[T.28]           -1.297e+04   5671.204     -2.287      0.022   -2.41e+04   -1853.870\n",
       "C(county)[T.29]           -4845.0790   5203.125     -0.931      0.352    -1.5e+04    5355.335\n",
       "C(county)[T.30]           -2248.8602   5067.398     -0.444      0.657   -1.22e+04    7685.469\n",
       "C(county)[T.31]           -1.155e+04   4710.979     -2.452      0.014   -2.08e+04   -2313.897\n",
       "C(county)[T.32]           -7114.5598   3632.908     -1.958      0.050   -1.42e+04       7.538\n",
       "C(county)[T.33]           -1.272e+04   3067.035     -4.149      0.000   -1.87e+04   -6711.354\n",
       "C(county)[T.34]            -1.32e+04   3443.339     -3.833      0.000   -1.99e+04   -6447.428\n",
       "C(county)[T.35]           -9324.2429   3384.603     -2.755      0.006    -1.6e+04   -2688.932\n",
       "C(county)[T.36]           -1.505e+04   3658.198     -4.115      0.000   -2.22e+04   -7881.001\n",
       "C(county)[T.37]           -1.023e+04   3762.247     -2.720      0.007   -1.76e+04   -2856.766\n",
       "C(county)[T.38]           -1.308e+04   3310.408     -3.951      0.000   -1.96e+04   -6590.153\n",
       "C(county)[T.39]           -1.177e+04   3252.230     -3.618      0.000   -1.81e+04   -5391.513\n",
       "C(county)[T.40]           -1.516e+04   3677.299     -4.123      0.000   -2.24e+04   -7954.028\n",
       "C(county)[T.41]           -9224.6049   2690.524     -3.429      0.001   -1.45e+04   -3949.994\n",
       "C(county)[T.42]           -1.365e+04   3460.095     -3.944      0.000   -2.04e+04   -6864.991\n",
       "C(county)[T.43]           -1.165e+04   3698.161     -3.151      0.002   -1.89e+04   -4404.402\n",
       "C(county)[T.44]            -1.07e+04   2961.782     -3.611      0.000   -1.65e+04   -4889.799\n",
       "C(county)[T.45]           -7052.4496   3127.876     -2.255      0.024   -1.32e+04    -920.437\n",
       "C(county)[T.46]           -9064.0230   3380.497     -2.681      0.007   -1.57e+04   -2436.761\n",
       "C(county)[T.47]           -1.681e+04   3013.844     -5.579      0.000   -2.27e+04   -1.09e+04\n",
       "C(county)[T.48]           -8897.8731   3296.249     -2.699      0.007   -1.54e+04   -2435.774\n",
       "C(county)[T.49]            2.125e+04   7993.324      2.659      0.008    5580.256    3.69e+04\n",
       "C(county)[T.50]           -2.251e+04   1.13e+04     -1.997      0.046   -4.46e+04    -409.459\n",
       "C(county)[T.51]           -5880.2544   3452.043     -1.703      0.089   -1.26e+04     887.270\n",
       "C(county)[T.52]           -1.006e+04   8297.064     -1.213      0.225   -2.63e+04    6201.302\n",
       "C(county)[T.53]           -7396.8710   1.97e+04     -0.376      0.707   -4.59e+04    3.12e+04\n",
       "C(county)[T.54]           -1.349e+04   8853.843     -1.524      0.128   -3.08e+04    3865.030\n",
       "C(county)[T.55]            6016.8132   9691.581      0.621      0.535    -1.3e+04     2.5e+04\n",
       "C(county)[T.56]           -7435.2407   7281.280     -1.021      0.307   -2.17e+04    6839.272\n",
       "C(county)[T.57]            8434.9441    1.4e+04      0.604      0.546   -1.89e+04    3.58e+04\n",
       "C(county)[T.58]           -5918.5652   5278.657     -1.121      0.262   -1.63e+04    4429.925\n",
       "C(county)[T.59]           -1.631e+04   9894.838     -1.649      0.099   -3.57e+04    3086.114\n",
       "C(county)[T.60]           -1.499e+04   6719.761     -2.231      0.026   -2.82e+04   -1819.273\n",
       "C(county)[T.61]           -8015.9218   1.09e+04     -0.732      0.464   -2.95e+04    1.34e+04\n",
       "C(county)[T.62]            1.171e+04   1.32e+04      0.884      0.377   -1.43e+04    3.77e+04\n",
       "C(county)[T.63]           -1.124e+04   8626.461     -1.303      0.193   -2.82e+04    5671.473\n",
       "C(county)[T.64]             1.57e+04   8596.970      1.826      0.068   -1156.314    3.26e+04\n",
       "C(county)[T.65]           -1.964e+04   9254.939     -2.122      0.034   -3.78e+04   -1498.590\n",
       "C(county)[T.66]           -2.286e+04   1.47e+04     -1.550      0.121   -5.18e+04    6046.864\n",
       "C(county)[T.67]           -1.286e+04   2.97e+04     -0.434      0.664    -7.1e+04    4.53e+04\n",
       "C(county)[T.68]             265.8046   9594.437      0.028      0.978   -1.85e+04    1.91e+04\n",
       "C(county)[T.69]           -1.382e+04   9042.247     -1.528      0.127   -3.15e+04    3909.886\n",
       "C(county)[T.70]           -2.086e+04   1.33e+04     -1.567      0.117    -4.7e+04    5231.063\n",
       "C(county)[T.71]           -1.914e+04   8999.435     -2.127      0.033   -3.68e+04   -1501.949\n",
       "C(county)[T.72]            1.203e+04   1.91e+04      0.630      0.528   -2.54e+04    4.95e+04\n",
       "C(county)[T.73]           -4151.5319   5648.737     -0.735      0.462   -1.52e+04    6922.479\n",
       "C(county)[T.74]           -1.341e+04   7534.403     -1.780      0.075   -2.82e+04    1357.560\n",
       "C(county)[T.75]           -1.719e+04   3924.766     -4.381      0.000   -2.49e+04   -9500.690\n",
       "C(county)[T.76]           -3.746e+04   2.62e+04     -1.430      0.153   -8.88e+04    1.39e+04\n",
       "C(county)[T.77]             237.8624   6897.951      0.034      0.972   -1.33e+04    1.38e+04\n",
       "C(county)[T.78]            6770.8989   2.24e+04      0.302      0.763   -3.72e+04    5.07e+04\n",
       "C(county)[T.79]            4.146e+04   8462.736      4.899      0.000    2.49e+04     5.8e+04\n",
       "C(county)[T.80]           -1.741e+04   5589.953     -3.115      0.002   -2.84e+04   -6454.909\n",
       "C(county)[T.81]           -1.143e+04   5721.800     -1.998      0.046   -2.27e+04    -216.304\n",
       "C(county)[T.82]           -1.658e+04   1.61e+04     -1.032      0.302   -4.81e+04    1.49e+04\n",
       "C(county)[T.83]           -2.307e+04   1.25e+04     -1.840      0.066   -4.77e+04    1514.953\n",
       "C(county)[T.84]           -8999.9730   1.22e+04     -0.740      0.459   -3.28e+04    1.48e+04\n",
       "C(county)[T.85]            3419.8384   9046.856      0.378      0.705   -1.43e+04    2.12e+04\n",
       "C(county)[T.86]            1.824e+04   1.43e+04      1.279      0.201   -9720.390    4.62e+04\n",
       "C(county)[T.87]           -2.403e+04   1.09e+04     -2.205      0.027   -4.54e+04   -2667.316\n",
       "C(county)[T.88]           -1.326e+04   1.74e+04     -0.763      0.445   -4.73e+04    2.08e+04\n",
       "C(county)[T.89]           -1.574e+04   8531.472     -1.845      0.065   -3.25e+04     985.816\n",
       "C(county)[T.90]           -8870.8793   4968.614     -1.785      0.074   -1.86e+04     869.791\n",
       "C(county)[T.91]            -1.04e+04   9791.880     -1.062      0.288   -2.96e+04    8799.744\n",
       "C(county)[T.92]           -1.687e+04   1.17e+04     -1.441      0.150   -3.98e+04    6076.622\n",
       "C(county)[T.93]           -4593.8182   9052.966     -0.507      0.612   -2.23e+04    1.32e+04\n",
       "C(county)[T.94]             -66.5470   9761.637     -0.007      0.995   -1.92e+04    1.91e+04\n",
       "C(county)[T.95]           -1.199e+04   5085.007     -2.357      0.018    -2.2e+04   -2017.441\n",
       "C(county)[T.96]            -1.27e+04   1.03e+04     -1.228      0.219    -3.3e+04    7572.284\n",
       "C(county)[T.97]           -2.457e+04   9432.408     -2.605      0.009   -4.31e+04   -6080.404\n",
       "C(county)[T.98]            2197.3011   1.53e+04      0.144      0.886   -2.78e+04    3.22e+04\n",
       "C(county)[T.99]           -9289.2093   3098.282     -2.998      0.003   -1.54e+04   -3215.213\n",
       "C(county)[T.100]           1.121e+04   7876.656      1.423      0.155   -4235.032    2.66e+04\n",
       "C(county)[T.101]          -1.684e+04   9598.189     -1.754      0.079   -3.57e+04    1979.720\n",
       "C(county)[T.102]          -2597.8743   1.35e+04     -0.192      0.847   -2.91e+04    2.39e+04\n",
       "C(county)[T.103]          -1.014e+04   9066.754     -1.118      0.264   -2.79e+04    7638.542\n",
       "C(county)[T.104]           -252.2631   1.16e+04     -0.022      0.983    -2.3e+04    2.25e+04\n",
       "C(county)[T.105]          -1.145e+04    1.3e+04     -0.880      0.379    -3.7e+04    1.41e+04\n",
       "C(county)[T.106]          -3.539e+04   3.35e+04     -1.055      0.291   -1.01e+05    3.03e+04\n",
       "C(county)[T.107]          -3.364e+04   1.71e+04     -1.962      0.050   -6.72e+04     -29.720\n",
       "C(county)[T.109]          -4795.8027   8034.001     -0.597      0.551   -2.05e+04     1.1e+04\n",
       "C(county)[T.110]          -8716.5745   1.06e+04     -0.822      0.411   -2.95e+04    1.21e+04\n",
       "C(county)[T.111]          -1.946e+04   2.19e+04     -0.889      0.374   -6.24e+04    2.35e+04\n",
       "C(county)[T.112]          -7351.2007   1.42e+04     -0.516      0.606   -3.53e+04    2.06e+04\n",
       "C(county)[T.113]          -2.293e+04    2.6e+04     -0.882      0.378   -7.39e+04     2.8e+04\n",
       "C(county)[T.114]          -1.908e+04   1.61e+04     -1.185      0.236   -5.07e+04    1.25e+04\n",
       "C(county)[T.115]          -2798.0105      1e+04     -0.280      0.780   -2.24e+04    1.68e+04\n",
       "C(county)[T.116]          -8785.2988   1.35e+04     -0.650      0.516   -3.53e+04    1.77e+04\n",
       "C(county)[T.117]          -2.473e+04   4.28e+04     -0.577      0.564   -1.09e+05    5.92e+04\n",
       "C(county)[T.118]          -1.698e+04    1.1e+04     -1.538      0.124   -3.86e+04    4669.861\n",
       "C(county)[T.120]          -1.704e+04   1.32e+04     -1.287      0.198    -4.3e+04    8908.447\n",
       "C(county)[T.121]          -2.767e+04   1.32e+04     -2.093      0.036   -5.36e+04   -1747.007\n",
       "C(county)[T.123]          -1.291e+04   5091.347     -2.536      0.011   -2.29e+04   -2931.559\n",
       "C(county)[T.124]          -3.209e+04      1e+04     -3.197      0.001   -5.18e+04   -1.24e+04\n",
       "C(county)[T.125]          -1.795e+04   1.25e+04     -1.440      0.150   -4.24e+04    6490.095\n",
       "C(county)[T.126]          -6948.1460   9793.690     -0.709      0.478   -2.61e+04    1.23e+04\n",
       "C(county)[T.127]          -4111.7736   9598.180     -0.428      0.668   -2.29e+04    1.47e+04\n",
       "C(county)[T.128]          -1.407e+04   3.35e+04     -0.420      0.675   -7.98e+04    5.17e+04\n",
       "C(county)[T.129]          -1.338e+04   1.22e+04     -1.094      0.274   -3.73e+04    1.06e+04\n",
       "C(county)[T.130]          -2.958e+04   1.24e+04     -2.379      0.017    -5.4e+04   -5205.688\n",
       "C(county)[T.131]          -9462.1890   2.13e+04     -0.445      0.656   -5.11e+04    3.22e+04\n",
       "C(county)[T.132]          -7889.2394   5638.330     -1.399      0.162   -1.89e+04    3164.369\n",
       "C(county)[T.133]           2175.4884   1.51e+04      0.144      0.886   -2.75e+04    3.18e+04\n",
       "C(county)[T.134]           5.467e+04    1.8e+04      3.045      0.002    1.95e+04    8.99e+04\n",
       "C(county)[T.135]          -2.083e+04   1.38e+04     -1.509      0.131   -4.79e+04    6228.141\n",
       "C(county)[T.136]          -4420.8608   5997.620     -0.737      0.461   -1.62e+04    7337.113\n",
       "C(county)[T.137]          -4087.2387   8100.626     -0.505      0.614      -2e+04    1.18e+04\n",
       "C(county)[T.138]          -7939.1789   8029.739     -0.989      0.323   -2.37e+04    7802.643\n",
       "C(county)[T.139]           -692.3178   1.02e+04     -0.068      0.946   -2.08e+04    1.94e+04\n",
       "C(county)[T.140]          -1.651e+04   1.37e+04     -1.202      0.229   -4.34e+04    1.04e+04\n",
       "C(county)[T.141]          -8251.4595   1.22e+04     -0.676      0.499   -3.22e+04    1.57e+04\n",
       "C(county)[T.142]          -1373.8309   2.13e+04     -0.065      0.948    -4.3e+04    4.03e+04\n",
       "C(county)[T.143]          -5545.8845   5862.828     -0.946      0.344    -1.7e+04    5947.838\n",
       "C(county)[T.144]          -4.741e+04   2.12e+04     -2.232      0.026   -8.91e+04   -5771.921\n",
       "C(county)[T.145]          -9556.0440   3.47e+04     -0.276      0.783   -7.75e+04    5.84e+04\n",
       "C(county)[T.146]          -1.903e+04   1.59e+04     -1.196      0.232   -5.02e+04    1.22e+04\n",
       "C(county)[T.147]            -2.8e+04   1.52e+04     -1.848      0.065   -5.77e+04    1707.239\n",
       "C(county)[T.148]          -2.012e+04   1.76e+04     -1.146      0.252   -5.45e+04    1.43e+04\n",
       "C(county)[T.149]          -1.012e+04   4824.670     -2.097      0.036   -1.96e+04    -657.758\n",
       "C(county)[T.150]          -2.052e+04   3.35e+04     -0.612      0.541   -8.63e+04    4.52e+04\n",
       "C(county)[T.151]          -2.235e+04   1.13e+04     -1.974      0.048   -4.45e+04    -157.867\n",
       "C(county)[T.152]          -1.249e+04   7332.914     -1.703      0.089   -2.69e+04    1887.273\n",
       "C(county)[T.153]          -1.074e+04   2.99e+04     -0.360      0.719   -6.93e+04    4.78e+04\n",
       "C(county)[T.155]          -1.174e+04   1.32e+04     -0.892      0.373   -3.75e+04    1.41e+04\n",
       "C(county)[T.157]          -2.379e+04   1.34e+04     -1.777      0.076      -5e+04    2454.505\n",
       "C(county)[T.158]           -3.57e+04   1.24e+04     -2.878      0.004      -6e+04   -1.14e+04\n",
       "C(county)[T.159]          -3961.2072   2.67e+04     -0.149      0.882   -5.62e+04    4.83e+04\n",
       "C(county)[T.160]          -1.811e+04   8356.451     -2.167      0.030   -3.45e+04   -1729.232\n",
       "C(county)[T.161]           6091.1910   8574.294      0.710      0.477   -1.07e+04    2.29e+04\n",
       "C(county)[T.162]           9087.0830   1.55e+04      0.586      0.558   -2.13e+04    3.95e+04\n",
       "C(county)[T.163]          -2.133e+04   2.02e+04     -1.054      0.292    -6.1e+04    1.84e+04\n",
       "C(county)[T.164]          -2.283e+04   1.51e+04     -1.511      0.131   -5.24e+04    6795.581\n",
       "C(county)[T.165]           -2.21e+04   2.13e+04     -1.037      0.300   -6.39e+04    1.97e+04\n",
       "C(county)[T.166]          -1.551e+04   9441.670     -1.642      0.101    -3.4e+04    3002.990\n",
       "C(county)[T.167]          -3.947e+04   3.24e+04     -1.218      0.223   -1.03e+05    2.41e+04\n",
       "C(county)[T.168]           1.007e+04   7103.076      1.417      0.156   -3857.374     2.4e+04\n",
       "C(county)[T.169]           1.283e+04   1.14e+04      1.121      0.262   -9600.934    3.53e+04\n",
       "C(county)[T.170]          -1.615e+04    1.4e+04     -1.150      0.250   -4.37e+04    1.14e+04\n",
       "C(county)[T.171]           2.365e+04   7177.844      3.295      0.001    9576.024    3.77e+04\n",
       "C(county)[T.172]          -3.626e+04   3.24e+04     -1.119      0.263   -9.98e+04    2.73e+04\n",
       "C(county)[T.173]          -2.629e+04   2.38e+04     -1.106      0.269   -7.29e+04    2.03e+04\n",
       "C(county)[T.174]          -2.314e+04   1.59e+04     -1.458      0.145   -5.43e+04    7983.357\n",
       "C(county)[T.176]          -8331.5679   1.76e+04     -0.472      0.637   -4.29e+04    2.62e+04\n",
       "C(county)[T.177]          -7787.9729   6943.898     -1.122      0.262   -2.14e+04    5825.123\n",
       "C(county)[T.178]          -8426.9047   9527.061     -0.885      0.376   -2.71e+04    1.03e+04\n",
       "C(county)[T.179]           5061.4958   9108.387      0.556      0.578   -1.28e+04    2.29e+04\n",
       "C(county)[T.180]          -9156.0300   7253.999     -1.262      0.207   -2.34e+04    5065.000\n",
       "C(county)[T.181]          -6042.8525   1.16e+04     -0.522      0.602   -2.87e+04    1.67e+04\n",
       "C(county)[T.182]            -1.6e+04   8180.157     -1.956      0.051    -3.2e+04      40.230\n",
       "C(county)[T.183]           1688.4654   4051.315      0.417      0.677   -6253.894    9630.825\n",
       "C(county)[T.184]          -1.566e+04   3739.789     -4.189      0.000    -2.3e+04   -8333.281\n",
       "C(county)[T.185]          -1.158e+04    1.5e+04     -0.769      0.442   -4.11e+04    1.79e+04\n",
       "C(county)[T.186]          -1.279e+04   1.07e+04     -1.198      0.231   -3.37e+04    8134.088\n",
       "C(county)[T.187]          -6652.3137   8781.097     -0.758      0.449   -2.39e+04    1.06e+04\n",
       "C(county)[T.188]          -1.083e+04   3548.268     -3.053      0.002   -1.78e+04   -3878.254\n",
       "C(county)[T.189]          -2.122e+04   5407.161     -3.925      0.000   -3.18e+04   -1.06e+04\n",
       "C(county)[T.190]          -2.661e+04   1.48e+04     -1.803      0.071   -5.55e+04    2321.109\n",
       "C(county)[T.191]          -3036.3270   1.92e+04     -0.158      0.874   -4.06e+04    3.45e+04\n",
       "C(county)[T.192]           6940.9690   9281.647      0.748      0.455   -1.13e+04    2.51e+04\n",
       "C(county)[T.193]          -9444.8116   1.05e+04     -0.902      0.367      -3e+04    1.11e+04\n",
       "C(county)[T.194]           2498.3312   1.35e+04      0.185      0.853    -2.4e+04     2.9e+04\n",
       "C(county)[T.195]           -2.03e+04   9595.165     -2.116      0.034   -3.91e+04   -1493.798\n",
       "C(county)[T.196]          -2753.6229   6585.461     -0.418      0.676   -1.57e+04    1.02e+04\n",
       "C(county)[T.197]            1.33e+04   5757.604      2.311      0.021    2015.983    2.46e+04\n",
       "C(county)[T.198]           7328.9890   7484.437      0.979      0.328   -7343.801     2.2e+04\n",
       "C(county)[T.199]          -2.136e+04   8594.063     -2.485      0.013   -3.82e+04   -4510.853\n",
       "C(county)[T.200]          -7508.9207   3016.843     -2.489      0.013   -1.34e+04   -1594.581\n",
       "C(county)[T.201]          -2.737e+04   1.51e+04     -1.811      0.070    -5.7e+04    2251.151\n",
       "C(county)[T.202]          -1237.8204   2.25e+04     -0.055      0.956   -4.54e+04    4.29e+04\n",
       "C(county)[T.203]          -6666.3212   1.53e+04     -0.435      0.664   -3.67e+04    2.34e+04\n",
       "C(county)[T.204]          -1.464e+04   9850.437     -1.486      0.137   -3.39e+04    4674.099\n",
       "C(county)[T.205]          -1.706e+04   6442.944     -2.648      0.008   -2.97e+04   -4427.328\n",
       "C(county)[T.206]          -3.733e+04   1.51e+04     -2.465      0.014    -6.7e+04   -7640.473\n",
       "C(county)[T.209]           6087.6907   1.35e+04      0.452      0.651   -2.03e+04    3.25e+04\n",
       "C(county)[T.210]          -2.578e+04   2.65e+04     -0.973      0.330   -7.77e+04    2.61e+04\n",
       "C(county)[T.211]          -1093.8388   7382.081     -0.148      0.882   -1.56e+04    1.34e+04\n",
       "C(county)[T.213]          -2.153e+04   2.35e+04     -0.916      0.360   -6.76e+04    2.45e+04\n",
       "C(county)[T.214]          -2.351e+04   1.27e+04     -1.858      0.063   -4.83e+04    1299.507\n",
       "C(county)[T.215]           -1.66e+04   1.12e+04     -1.488      0.137   -3.85e+04    5271.613\n",
       "C(county)[T.216]          -9052.8944   5337.794     -1.696      0.090   -1.95e+04    1411.531\n",
       "C(county)[T.217]          -2.914e+04   9643.602     -3.021      0.003    -4.8e+04   -1.02e+04\n",
       "C(county)[T.218]          -1.642e+04   1.66e+04     -0.987      0.324    -4.9e+04    1.62e+04\n",
       "C(county)[T.219]           -482.9429   8190.878     -0.059      0.953   -1.65e+04    1.56e+04\n",
       "C(county)[T.220]           1.038e+04   1.11e+04      0.934      0.350   -1.14e+04    3.22e+04\n",
       "C(county)[T.221]           7271.3058   1.15e+04      0.634      0.526   -1.52e+04    2.97e+04\n",
       "C(county)[T.222]          -1.622e+04   1.02e+04     -1.588      0.112   -3.63e+04    3804.653\n",
       "C(county)[T.223]          -1.878e+04   5199.813     -3.612      0.000    -2.9e+04   -8586.505\n",
       "C(county)[T.224]          -9192.1466   1.45e+04     -0.636      0.525   -3.75e+04    1.92e+04\n",
       "C(county)[T.225]           2641.2389   1.98e+04      0.134      0.894   -3.61e+04    4.14e+04\n",
       "C(county)[T.226]          -8830.2891   6639.675     -1.330      0.184   -2.18e+04    4186.397\n",
       "C(county)[T.227]          -2.143e+04   1.09e+04     -1.970      0.049   -4.28e+04    -102.683\n",
       "C(county)[T.228]           3.233e+04   1.71e+04      1.894      0.058   -1135.703    6.58e+04\n",
       "C(county)[T.229]          -1.428e+04   1.91e+04     -0.748      0.454   -5.17e+04    2.31e+04\n",
       "C(county)[T.230]           -1.28e+04   6264.355     -2.043      0.041   -2.51e+04    -517.493\n",
       "C(county)[T.231]          -8271.2748   7245.759     -1.142      0.254   -2.25e+04    5933.602\n",
       "C(county)[T.232]          -2.299e+04   8519.159     -2.699      0.007   -3.97e+04   -6289.960\n",
       "C(county)[T.233]          -1.285e+04   8491.101     -1.513      0.130   -2.95e+04    3796.614\n",
       "C(county)[T.234]          -1.735e+04    3.1e+04     -0.559      0.576   -7.82e+04    4.35e+04\n",
       "C(county)[T.235]          -1.766e+04   3.16e+04     -0.559      0.576   -7.96e+04    4.43e+04\n",
       "C(county)[T.236]          -1.217e+04   8349.230     -1.457      0.145   -2.85e+04    4200.746\n",
       "C(county)[T.237]          -1.141e+04   4505.618     -2.533      0.011   -2.02e+04   -2581.176\n",
       "C(county)[T.238]          -1.613e+04   7139.990     -2.258      0.024   -3.01e+04   -2127.974\n",
       "C(county)[T.239]          -2.712e+04   2.14e+04     -1.266      0.206   -6.91e+04    1.49e+04\n",
       "C(county)[T.240]           6490.6376   9154.156      0.709      0.478   -1.15e+04    2.44e+04\n",
       "C(county)[T.241]          -3359.7031   6189.659     -0.543      0.587   -1.55e+04    8774.753\n",
       "C(county)[T.242]          -1.613e+04   1.27e+04     -1.272      0.203    -4.1e+04    8724.775\n",
       "C(county)[T.243]          -1.788e+04   1.39e+04     -1.286      0.199   -4.51e+04    9383.449\n",
       "C(county)[T.244]          -3.071e+04   1.43e+04     -2.150      0.032   -5.87e+04   -2703.321\n",
       "C(county)[T.245]          -8153.4624   1.35e+04     -0.603      0.547   -3.47e+04    1.84e+04\n",
       "C(county)[T.246]           5281.9970   4036.138      1.309      0.191   -2630.610    1.32e+04\n",
       "C(county)[T.247]          -9765.4698   5639.622     -1.732      0.083   -2.08e+04    1290.671\n",
       "C(county)[T.248]            143.0204   8692.204      0.016      0.987   -1.69e+04    1.72e+04\n",
       "C(county)[T.249]          -1.476e+04   3.35e+04     -0.440      0.660   -8.05e+04     5.1e+04\n",
       "C(county)[T.250]           1.616e+04   1.05e+04      1.541      0.123   -4398.223    3.67e+04\n",
       "C(county)[T.251]          -1.651e+04   9569.822     -1.726      0.084   -3.53e+04    2247.701\n",
       "C(county)[T.252]           -1.57e+04   2.01e+04     -0.781      0.435   -5.51e+04    2.37e+04\n",
       "C(county)[T.253]          -1.801e+04   1.58e+04     -1.141      0.254   -4.89e+04    1.29e+04\n",
       "C(county)[T.254]          -5819.5313   1.24e+04     -0.470      0.638   -3.01e+04    1.85e+04\n",
       "C(county)[T.256]          -9352.6145   1.31e+04     -0.712      0.476   -3.51e+04    1.64e+04\n",
       "C(county)[T.257]          -1.474e+04   4650.454     -3.170      0.002   -2.39e+04   -5626.575\n",
       "C(county)[T.258]           -2.95e+04   1.86e+04     -1.587      0.113    -6.6e+04    6945.417\n",
       "C(county)[T.259]           5.662e+04   1.78e+04      3.176      0.002    2.17e+04    9.16e+04\n",
       "C(county)[T.260]          -2.075e+04   1.42e+04     -1.461      0.144   -4.86e+04    7093.704\n",
       "C(county)[T.261]          -1.214e+04   9508.704     -1.277      0.202   -3.08e+04    6499.043\n",
       "C(county)[T.262]          -1.499e+04   3.16e+04     -0.474      0.635   -7.69e+04     4.7e+04\n",
       "C(county)[T.263]           1.094e+04   1.25e+04      0.872      0.383   -1.36e+04    3.55e+04\n",
       "C(county)[T.264]          -2479.7477   1.18e+04     -0.210      0.834   -2.57e+04    2.07e+04\n",
       "C(county)[T.265]          -2.203e+04   1.05e+04     -2.105      0.035   -4.25e+04   -1517.160\n",
       "C(county)[T.266]           6210.2882   3.35e+04      0.185      0.853   -5.95e+04    7.19e+04\n",
       "C(county)[T.267]          -1.138e+04   2.33e+04     -0.488      0.626   -5.71e+04    3.44e+04\n",
       "C(county)[T.268]          -2.097e+04   1.51e+04     -1.389      0.165   -5.06e+04    8629.225\n",
       "C(county)[T.269]          -1.836e+04   7924.529     -2.317      0.021   -3.39e+04   -2824.110\n",
       "C(county)[T.270]          -1.361e+04   1.72e+04     -0.789      0.430   -4.74e+04    2.02e+04\n",
       "C(county)[T.271]          -1.204e+04   1.55e+04     -0.777      0.437   -4.24e+04    1.84e+04\n",
       "C(county)[T.272]          -1.485e+04   8880.399     -1.672      0.095   -3.23e+04    2561.281\n",
       "C(county)[T.273]          -1.149e+04   2.63e+04     -0.438      0.662    -6.3e+04       4e+04\n",
       "C(county)[T.274]          -9891.3781   4694.196     -2.107      0.035   -1.91e+04    -688.687\n",
       "C(county)[T.275]          -5173.7930   1.15e+04     -0.449      0.653   -2.77e+04    1.74e+04\n",
       "C(county)[T.276]          -1.966e+04   1.66e+04     -1.182      0.237   -5.22e+04    1.29e+04\n",
       "C(county)[T.277]          -3.402e+04   2.86e+04     -1.188      0.235   -9.01e+04    2.21e+04\n",
       "C(county)[T.278]           2322.2439    1.9e+04      0.122      0.903   -3.49e+04    3.95e+04\n",
       "C(county)[T.279]          -1.119e+04   1.84e+04     -0.609      0.543   -4.72e+04    2.48e+04\n",
       "C(county)[T.280]          -1.345e+04   6306.646     -2.133      0.033   -2.58e+04   -1085.930\n",
       "C(county)[T.281]          -8403.4354   2.99e+04     -0.281      0.778   -6.69e+04    5.01e+04\n",
       "C(county)[T.282]          -3681.0429    1.2e+04     -0.307      0.759   -2.72e+04    1.99e+04\n",
       "C(county)[T.283]          -5339.8789   9936.127     -0.537      0.591   -2.48e+04    1.41e+04\n",
       "C(county)[T.284]          -1.452e+04   8179.287     -1.775      0.076   -3.06e+04    1519.240\n",
       "C(county)[T.285]           -3.43e+04   2.13e+04     -1.613      0.107    -7.6e+04    7382.687\n",
       "C(county)[T.286]           7684.0660   1.16e+04      0.664      0.507    -1.5e+04    3.04e+04\n",
       "C(county)[T.287]          -1.775e+04   5134.756     -3.456      0.001   -2.78e+04   -7680.041\n",
       "C(county)[T.288]           2038.4699   1.76e+04      0.116      0.908   -3.26e+04    3.66e+04\n",
       "C(county)[T.289]          -8041.0146   1.11e+04     -0.726      0.468   -2.97e+04    1.37e+04\n",
       "C(county)[T.290]          -1.581e+04   7099.249     -2.227      0.026   -2.97e+04   -1889.232\n",
       "C(county)[T.291]          -7663.1814   1.35e+04     -0.567      0.571   -3.42e+04    1.88e+04\n",
       "C(county)[T.292]          -1.567e+04   7319.153     -2.141      0.032      -3e+04   -1323.652\n",
       "C(county)[T.293]          -5825.2555   1.34e+04     -0.433      0.665   -3.22e+04    2.05e+04\n",
       "C(county)[T.294]           1.947e+04   9840.528      1.978      0.048     177.105    3.88e+04\n",
       "C(county)[T.295]           -1.75e+04   1.76e+04     -0.996      0.319    -5.2e+04     1.7e+04\n",
       "C(county)[T.296]          -1096.1249    1.8e+04     -0.061      0.951   -3.64e+04    3.42e+04\n",
       "C(county)[T.297]          -1.141e+04   4502.234     -2.535      0.011   -2.02e+04   -2586.102\n",
       "C(county)[T.298]          -8732.4700   2.87e+04     -0.304      0.761    -6.5e+04    4.75e+04\n",
       "C(county)[T.299]           -1.74e+04   2.99e+04     -0.583      0.560   -7.59e+04    4.11e+04\n",
       "C(county)[T.300]          -1.986e+04   1.04e+04     -1.907      0.057   -4.03e+04     560.482\n",
       "C(county)[T.301]          -4.329e+04   3.24e+04     -1.336      0.182   -1.07e+05    2.03e+04\n",
       "C(county)[T.302]           4581.0131   7593.047      0.603      0.546   -1.03e+04    1.95e+04\n",
       "C(county)[T.303]          -1.484e+04   7473.001     -1.985      0.047   -2.95e+04    -186.892\n",
       "C(county)[T.304]          -2.222e+04   8772.347     -2.533      0.011   -3.94e+04   -5022.926\n",
       "C(county)[T.305]          -2514.2672   7217.330     -0.348      0.728   -1.67e+04    1.16e+04\n",
       "C(county)[T.306]          -2.336e+04   1.99e+04     -1.174      0.240   -6.24e+04    1.57e+04\n",
       "C(county)[T.307]          -1.116e+04   9796.527     -1.139      0.255   -3.04e+04    8045.695\n",
       "C(county)[T.308]           8.973e+04   1.66e+04      5.411      0.000    5.72e+04    1.22e+05\n",
       "C(county)[T.309]          -1.179e+04   5120.504     -2.302      0.021   -2.18e+04   -1747.726\n",
       "C(county)[T.310]          -1.268e+04   3.35e+04     -0.378      0.705   -7.84e+04    5.31e+04\n",
       "C(county)[T.311]          -1.624e+04   1.01e+04     -1.611      0.107    -3.6e+04    3524.476\n",
       "C(county)[T.312]          -9191.1488   9873.286     -0.931      0.352   -2.85e+04    1.02e+04\n",
       "C(county)[T.313]          -1.765e+04   4.28e+04     -0.412      0.680   -1.02e+05    6.63e+04\n",
       "C(county)[T.314]          -1.793e+04   7170.454     -2.501      0.012    -3.2e+04   -3875.671\n",
       "C(county)[T.315]            879.4379   1.04e+04      0.084      0.933   -1.96e+04    2.13e+04\n",
       "C(county)[T.316]          -5807.9640   6758.678     -0.859      0.390   -1.91e+04    7442.020\n",
       "C(county)[T.317]           1.794e+04   9335.924      1.922      0.055    -362.354    3.62e+04\n",
       "C(county)[T.318]          -4980.2142   8582.095     -0.580      0.562   -2.18e+04    1.18e+04\n",
       "C(county)[T.319]           1051.3237   1.42e+04      0.074      0.941   -2.68e+04    2.89e+04\n",
       "C(county)[T.320]          -1.431e+04    1.5e+04     -0.951      0.341   -4.38e+04    1.52e+04\n",
       "C(county)[T.321]          -1.684e+04   6968.208     -2.416      0.016   -3.05e+04   -3176.799\n",
       "C(county)[T.322]           -406.6903   6523.846     -0.062      0.950   -1.32e+04    1.24e+04\n",
       "C(county)[T.323]          -1.853e+04   5726.625     -3.236      0.001   -2.98e+04   -7302.079\n",
       "C(county)[T.324]          -2501.1256   7866.013     -0.318      0.751   -1.79e+04    1.29e+04\n",
       "C(county)[T.325]          -1.951e+04   2.24e+04     -0.873      0.383   -6.33e+04    2.43e+04\n",
       "has_college                1.325e+04    742.630     17.843      0.000    1.18e+04    1.47e+04\n",
       "female                    -8657.2875    609.011    -14.215      0.000   -9851.217   -7463.358\n",
       "==============================================================================\n",
       "Omnibus:                     2414.039   Durbin-Watson:                   1.981\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):            22245.534\n",
       "Skew:                           1.945   Prob(JB):                         0.00\n",
       "Kurtosis:                      12.242   Cond. No.                         198.\n",
       "==============================================================================\n",
       "\n",
       "Notes:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "\"\"\""
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "smf.wls(\n",
    "    \"annual_earnings ~ has_college + C(simplified_race)\"\n",
    "    \" + C(discretized_age) + female + C(county)\",\n",
    "    matched_data,\n",
    "    weights=matched_data[\"weights\"],\n",
    ").fit().summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "> Just a nudge, as we'd expect."
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Exercise 15\n",
    "\n",
    "If you stopped matching after the second iteration (Iteration 1) back in Exercise 10, you may be wondering if that was a good choice! Let's check by restricting our attention to ONLY exact matches (`iteration = 0`). Run that match."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Completed iteration 0 of matching\n",
      "\tNumber of matched groups formed in total:  370\n",
      "\tUnmatched treated units:  644 out of a total of  1150 treated units\n",
      "\tUnmatched control units:  3187 out of a total of  4365 control units\n",
      "\tNumber of matches made this iteration:  1684\n",
      "\tNumber of matches made so far:  1684\n",
      "\tCovariates dropped so far:  set()\n",
      "\tPredictive error of covariate set used to match:  1199312680.0957854\n",
      "1684 units matched. We stopped after iteration 0\n"
     ]
    }
   ],
   "source": [
    "model2 = dame_flame.matching.DAME(\n",
    "    repeats=False, verbose=3, want_pe=True, early_stop_iterations=0\n",
    ")\n",
    "model2.fit(\n",
    "    for_matching,\n",
    "    treatment_column_name=\"has_college\",\n",
    "    outcome_column_name=\"annual_earnings\",\n",
    ")\n",
    "result2 = model2.predict(for_matching)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [],
   "source": [
    "matched_data2 = get_dataframe(model2, result2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "### Exercise 16\n",
    "\n",
    "Now use a weighted linear regression on your matched data to regress annual earnings on *just* having a college eduction. Is that different from what you had when you allowed more low quality matches?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>WLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>     <td>annual_earnings</td> <th>  R-squared:         </th> <td>   0.049</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>WLS</td>       <th>  Adj. R-squared:    </th> <td>   0.048</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>   86.65</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Mon, 08 Apr 2024</td> <th>  Prob (F-statistic):</th> <td>3.92e-20</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>20:00:31</td>     <th>  Log-Likelihood:    </th> <td> -19512.</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td>  1684</td>      <th>  AIC:               </th> <td>3.903e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td>  1682</td>      <th>  BIC:               </th> <td>3.904e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>     1</td>      <th>                     </th>     <td> </td>    \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>    \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "       <td></td>          <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Intercept</th>   <td> 3.914e+04</td> <td>  664.386</td> <td>   58.907</td> <td> 0.000</td> <td> 3.78e+04</td> <td> 4.04e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>has_college</th> <td> 1.128e+04</td> <td> 1212.039</td> <td>    9.308</td> <td> 0.000</td> <td> 8904.805</td> <td> 1.37e+04</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>855.250</td> <th>  Durbin-Watson:     </th> <td>   2.037</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th> <td> 0.000</td>  <th>  Jarque-Bera (JB):  </th> <td>6653.000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>          <td> 2.256</td>  <th>  Prob(JB):          </th> <td>    0.00</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>      <td>11.629</td>  <th>  Cond. No.          </th> <td>    2.42</td>\n",
       "</tr>\n",
       "</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified."
      ],
      "text/latex": [
       "\\begin{center}\n",
       "\\begin{tabular}{lclc}\n",
       "\\toprule\n",
       "\\textbf{Dep. Variable:}    & annual\\_earnings & \\textbf{  R-squared:         } &     0.049   \\\\\n",
       "\\textbf{Model:}            &       WLS        & \\textbf{  Adj. R-squared:    } &     0.048   \\\\\n",
       "\\textbf{Method:}           &  Least Squares   & \\textbf{  F-statistic:       } &     86.65   \\\\\n",
       "\\textbf{Date:}             & Mon, 08 Apr 2024 & \\textbf{  Prob (F-statistic):} &  3.92e-20   \\\\\n",
       "\\textbf{Time:}             &     20:00:31     & \\textbf{  Log-Likelihood:    } &   -19512.   \\\\\n",
       "\\textbf{No. Observations:} &        1684      & \\textbf{  AIC:               } & 3.903e+04   \\\\\n",
       "\\textbf{Df Residuals:}     &        1682      & \\textbf{  BIC:               } & 3.904e+04   \\\\\n",
       "\\textbf{Df Model:}         &           1      & \\textbf{                     } &             \\\\\n",
       "\\textbf{Covariance Type:}  &    nonrobust     & \\textbf{                     } &             \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "\\begin{tabular}{lcccccc}\n",
       "                      & \\textbf{coef} & \\textbf{std err} & \\textbf{t} & \\textbf{P$> |$t$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n",
       "\\midrule\n",
       "\\textbf{Intercept}    &    3.914e+04  &      664.386     &    58.907  &         0.000        &     3.78e+04    &     4.04e+04     \\\\\n",
       "\\textbf{has\\_college} &    1.128e+04  &     1212.039     &     9.308  &         0.000        &     8904.805    &     1.37e+04     \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "\\begin{tabular}{lclc}\n",
       "\\textbf{Omnibus:}       & 855.250 & \\textbf{  Durbin-Watson:     } &    2.037  \\\\\n",
       "\\textbf{Prob(Omnibus):} &   0.000 & \\textbf{  Jarque-Bera (JB):  } & 6653.000  \\\\\n",
       "\\textbf{Skew:}          &   2.256 & \\textbf{  Prob(JB):          } &     0.00  \\\\\n",
       "\\textbf{Kurtosis:}      &  11.629 & \\textbf{  Cond. No.          } &     2.42  \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "%\\caption{WLS Regression Results}\n",
       "\\end{center}\n",
       "\n",
       "Notes: \\newline\n",
       " [1] Standard Errors assume that the covariance matrix of the errors is correctly specified."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            WLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:        annual_earnings   R-squared:                       0.049\n",
       "Model:                            WLS   Adj. R-squared:                  0.048\n",
       "Method:                 Least Squares   F-statistic:                     86.65\n",
       "Date:                Mon, 08 Apr 2024   Prob (F-statistic):           3.92e-20\n",
       "Time:                        20:00:31   Log-Likelihood:                -19512.\n",
       "No. Observations:                1684   AIC:                         3.903e+04\n",
       "Df Residuals:                    1682   BIC:                         3.904e+04\n",
       "Df Model:                           1                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "===============================================================================\n",
       "                  coef    std err          t      P>|t|      [0.025      0.975]\n",
       "-------------------------------------------------------------------------------\n",
       "Intercept    3.914e+04    664.386     58.907      0.000    3.78e+04    4.04e+04\n",
       "has_college  1.128e+04   1212.039      9.308      0.000    8904.805    1.37e+04\n",
       "==============================================================================\n",
       "Omnibus:                      855.250   Durbin-Watson:                   2.037\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):             6653.000\n",
       "Skew:                           2.256   Prob(JB):                         0.00\n",
       "Kurtosis:                      11.629   Cond. No.                         2.42\n",
       "==============================================================================\n",
       "\n",
       "Notes:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "\"\"\""
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "smf.wls(\n",
    "    \"annual_earnings ~ has_college\", matched_data2, weights=matched_data2[\"weights\"]\n",
    ").fit().summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Other Forms of Matching\n",
    "\n",
    "OK, hopefully this gives you a taste of matching! There are, of course, *many* other permutations to be aware of though. \n",
    "\n",
    "- Matching with replacement.  In this exercise, we set `repeat=False`, so each observation could only end up in our final dataset once. However, if we use `repeat=True`, if an untreated observation is the closest observation to multiple treated observations, it may get put in the dataset multiple times. We can still use this dataset in *almost* the same way, though, except we have to make use of weights so that if an observation appears, say, twice, each observation has a weight that's 1/2 the weight of an observation only appearing once. \n",
    "- Matching with continuous variables: DAME is used for exact matching, but if you have lots of continuous variables, you can also match on those. In fact, the Almost Exact Matching Lab also has a library called [MALTS](https://almost-matching-exactly.github.io/MALTS/) that will do matching with continuous variables. That package does something *like* Mahalanobis Distance matching, but ulike Mahalanobis, which calculates the distance between observations in terms of the difference in all the matching variables normalized by each matching variable's standard deviation, MALTS does something much more clever. (Here's [the paper](https://arxiv.org/abs/1811.07415) describing the technique if you want all the details). Basically, it figures out how well each matching variable predicts our outcome $Y$, then weights the different variables by their predictive power instead of just normalizing by something arbitrary like their standard deviation. As a result, final matches will prioritize matching more closely on variables that are outcome-relevant. In addition, when it sees a categorical variable, it recognizes that and only pairs observations when they are an exact match on that categorical variable. \n",
    "- If you're dataset is huge, use `FLAME`: this dataset is small, but if you have lots of observations and lots of matching variable, the computational complexity of this task explodes, so the AEML created FLAME, which works with millions of observations at only a small cost to match quality. "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "base",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.8"
  },
  "vscode": {
   "interpreter": {
    "hash": "718fed28bf9f8c7851519acf2fb923cd655120b36de3b67253eeb0428bd33d2d"
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
